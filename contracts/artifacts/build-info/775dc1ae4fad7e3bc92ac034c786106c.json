{
	"id": "775dc1ae4fad7e3bc92ac034c786106c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/maximus.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n\n/// @title HEX Contract Proxy\n/// @author Tanto Nomini\n/// @notice You can use this contract for only the most basic simulation\n/// @dev see HEX_CONTRACT_ADDRESS\ncontract HEXToken {\n  function currentDay() external view returns (uint256){}\n  function stakeStart(uint256 newStakedHearts, uint256 newStakedDays) external {}\n  function approve(address spender, uint256 amount) external returns (bool) {}\n  function transfer(address recipient, uint256 amount) public returns (bool) {}\n  function stakeEnd(uint256 stakeIndex, uint40 stakeIdParam) public {}\n  function stakeCount(address stakerAddr) external view returns (uint256) {}\n  \n}\ncontract MyToken is ERC20, ERC20Burnable, Ownable {\n    // all days are measured in terms of the HEX contract day number\n    uint256 MINTING_PHASE_START;\n    uint256 MINTING_PHASE_END;\n    bool HAS_STAKE_STARTED;\n    bool HAS_STAKE_ENDED;\n    uint256 STAKE_START_DAY;\n    uint256 STAKE_END_DAY;\n    uint256 REDEMPTION_RATE; \n    uint256 STAKE_LENGTH;\n    uint256 STAKE_ID;\n    \n    constructor(uint256 start_day, uint256 duration) ERC20(\"MyToken\", \"MTK\") {\n        \n        MINTING_PHASE_START = start_day;\n        MINTING_PHASE_END = start_day+duration;\n        HAS_STAKE_STARTED=false;\n        HAS_STAKE_ENDED = false;\n        REDEMPTION_RATE=1;\n        STAKE_LENGTH=1; //5555;\n    }\n    function decimals() public view override returns (uint8) {\n        // set MAXI to have 8 decimals to match HEX.\n        return 8;\n\t}\n    function get_amount_redeem_hex(uint amt) public view returns (uint256){\n        uint256 RR = REDEMPTION_RATE;\n        uint256 raw_amt = amt*RR;\n        uint256 num_hex = percent(raw_amt, 10000, 4);\n        return num_hex;\n    }\n    function get_redemption_rate() private view returns (uint256){\n        uint256 hex_balance = hex_contract.balanceOf(address(this));\n        uint256 total_maxi = IERC20(address(this)).totalSupply();\n        uint256 RR = percent(hex_balance,total_maxi,8);\n        return RR;\n    }\n    function percent(uint numerator, uint denominator, uint precision) public view returns(uint quotient) {\n\n         // caution, check safe-to-multiply here\n        uint _numerator  = numerator * 10 ** (precision+1);\n        // with rounding of last digit\n        uint _quotient =  ((_numerator / denominator) + 5) / 10;\n        return ( _quotient);\n  }\n    address CONTRACT_ADDRESS =address(this);\n    address HEX_ADDRESS = 0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39; // \"2b, 5 9 1e? that is the question...\"\n    \n    IERC20 hex_contract = IERC20(HEX_ADDRESS);\n    HEXToken token = HEXToken(HEX_ADDRESS);\n    \n    // getter functions\n    function getMintingPhaseStartDay() public view returns (uint256) {return MINTING_PHASE_START;}\n    function getMintingPhaseEndDay() public view returns (uint256) {return MINTING_PHASE_END;}\n\n    function getStakeStartDay() public view returns (uint256) {return STAKE_START_DAY;}\n    function getStakeEndDay() public view returns (uint256) {return STAKE_END_DAY;}\n    \n    function hasStakeStarted() public view returns (bool) {return HAS_STAKE_STARTED;}\n    function getRedemptionRate() public view returns (uint256) {return REDEMPTION_RATE;}\n    function get_hex_day() public view returns (uint256){\n        uint256 day = token.currentDay();\n        return day;\n    }\n    function getBalanceHEX() public view returns (uint256) {return hex_contract.balanceOf(msg.sender);}\n    function getAllowanceHEX() public view returns (uint256) {return hex_contract.allowance(msg.sender, CONTRACT_ADDRESS);}\n    function getNumStake() public view returns(uint256) {\n            return token.stakeCount(address(this));\n        }\n\n    // MAXI issuance\n    function mint(uint256 amount) private {\n        \n        _mint(msg.sender, amount);\n    }\n    function pledgeHEX(uint256 amount) public {\n        require(HEXToken(HEX_ADDRESS).currentDay()<=MINTING_PHASE_END, \"Minting Phase is Done\");\n        require(hex_contract.allowance(msg.sender, CONTRACT_ADDRESS)>=amount, \"Please approve contract address as allowed spender in the hex contract.\");\n        address from = msg.sender;\n        hex_contract.transferFrom(from, CONTRACT_ADDRESS, amount);\n        mint(amount);\n    }\n    function redeemHEX(uint256 amount_MAXI) public {\n        if (HAS_STAKE_STARTED==false || HAS_STAKE_ENDED==true) {\n            uint256 yourMAXI = balanceOf(msg.sender);\n            require(yourMAXI>=amount_MAXI, \"You do not have that much MAXI.\");\n            uint256 redeemable_amount = amount_MAXI*REDEMPTION_RATE;\n            burn(amount_MAXI);\n            token.transfer(msg.sender, redeemable_amount);\n        }\n    }\n    //STAKING\n    // Anyone may run these functions during the allowed time, so long as they pay the gas.\n    // While nothing is forcing you to, a gracious Maximus member will tip the sender some ETH for paying gas to end your stake.\n    \n    function stakeHEX() public {\n        require(HAS_STAKE_STARTED==false, \"Stake has already been started.\");\n        uint256 current_day = HEXToken(HEX_ADDRESS).currentDay();\n        require(current_day>MINTING_PHASE_END, \"Minting Phase is still ongoing - see MINTING_PHASE_END day.\");\n        uint256 amount = hex_contract.balanceOf(address(this)); //contract stakes all hex in the contract. even hex acccidentally sent to the contract without minting.\n        _stakeHEX(amount);\n        HAS_STAKE_STARTED=true;\n        STAKE_START_DAY=current_day;\n        STAKE_END_DAY=current_day+STAKE_LENGTH;\n    }\n    function _stakeHEX(uint256 amount) private  {\n        token.stakeStart(amount,STAKE_LENGTH);\n        }\n    \n    \n    function _endStakeHEX(uint256 stakeIndex,uint40 stakeIdParam ) private  {\n        token.stakeEnd(stakeIndex, stakeIdParam);\n        }\n\n    function endStakeHEX(uint256 stakeIndex,uint40 stakeIdParam ) public {\n        // get stakeIndex and stakeIdParam from stakeLists[contract_address] in hex contract\n        require(HEXToken(HEX_ADDRESS).currentDay()>STAKE_END_DAY, \"Stake is not complete yet.\");\n        require(HAS_STAKE_STARTED==true && HAS_STAKE_ENDED==false, \"Stake has already been started.\");\n        _endStakeHEX(stakeIndex, stakeIdParam);\n        HAS_STAKE_ENDED=true;\n        uint256 hex_balance = hex_contract.balanceOf(address(this));\n        uint256 total_maxi = IERC20(address(this)).totalSupply();\n        REDEMPTION_RATE = get_redemption_rate();\n        \n    }\n    \n\n    \n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        uint256 currentAllowance = allowance(account, _msgSender());\n        require(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\");\n        unchecked {\n            _approve(account, _msgSender(), currentAllowance - amount);\n        }\n        _burn(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 201
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":201},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1388:11804  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1963:2076  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2034  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2042  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2037:2042  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2034  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2042  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2059  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2069  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2062:2069  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2059  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2069  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1963:2076  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1388:11804  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1388:11804  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1388:11804  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3335  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3316:3328  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3335  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3335  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3078:3169  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3160:3162  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3078:3169  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5744:5956  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3393:3518  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3511  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3467:3474  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3511  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3393:3518  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2352:2454  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3893  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3951:4100  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4040:4047  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4077  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4093  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3951:4100  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2195:2208  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2227:2232  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2220:2232  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4321:4325  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4376  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4360:4367  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4369:4375  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4345  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4376  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4393:4397  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5007:5011  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5059  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5033:5039  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5041:5050  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5052:5058  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5032  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5059  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5070:5094  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5108  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5130  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5148:5174  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2943:2945   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2925:2946   */\n      mstore\n        /* \"#utility.yul\":2982:2984   */\n      0x28\n        /* \"#utility.yul\":2962:2980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2955:2985   */\n      mstore\n        /* \"#utility.yul\":3021:3055   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3001:3019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2994:3056   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3072:3090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3065:3103   */\n      mstore\n        /* \"#utility.yul\":3120:3139   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5310  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5262:5268  sender */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5303:5309  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5284:5300  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5284:5309  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5261  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5310  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5338:5342  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5744:5956  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5832:5836  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5905  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5891  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5905  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5914  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5832:5836  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5928  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_71\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:5878  spender */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5927  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5917:5927  addedValue */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5927  _allowances[_msgSender()][spender] + addedValue */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5856  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5928  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2352:2454  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2408:2421  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2440:2447  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2433:2447  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6536:6540  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6604  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6590  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6604  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6613  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6631:6666  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3579:3581   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3561:3582   */\n      mstore\n        /* \"#utility.yul\":3618:3620   */\n      0x25\n        /* \"#utility.yul\":3598:3616   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3591:3621   */\n      mstore\n        /* \"#utility.yul\":3657:3691   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3637:3655   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3630:3692   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3708:3726   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3701:3736   */\n      mstore\n        /* \"#utility.yul\":3753:3772   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_81\n        /* \"#utility.yul\":3377:3778   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6809  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6765:6772  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6793:6808  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6774:6790  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6774:6808  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6750  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6809  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6837:6841  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3893  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3807:3811  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3865  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3847:3856  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3858:3864  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3832  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3865  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10019:10389  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10150:10169  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3985:3987   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3967:3988   */\n      mstore\n        /* \"#utility.yul\":4024:4026   */\n      0x24\n        /* \"#utility.yul\":4004:4022   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3997:4027   */\n      mstore\n        /* \"#utility.yul\":4063:4097   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4043:4061   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4036:4098   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4114:4132   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4107:4141   */\n      mstore\n        /* \"#utility.yul\":4158:4177   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3783:4183   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10228:10249  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4390:4392   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4372:4393   */\n      mstore\n        /* \"#utility.yul\":4429:4431   */\n      0x22\n        /* \"#utility.yul\":4409:4427   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4402:4432   */\n      mstore\n        /* \"#utility.yul\":4468:4502   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4448:4466   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4441:4503   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4519:4537   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4512:4544   */\n      mstore\n        /* \"#utility.yul\":4561:4580   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4188:4586   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10317  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10310  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10317  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10326  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10335  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10019:10389  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7322:8035  function _transfer(... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7457:7477  sender != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4793:4795   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4775:4796   */\n      mstore\n        /* \"#utility.yul\":4832:4834   */\n      0x25\n        /* \"#utility.yul\":4812:4830   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4805:4835   */\n      mstore\n        /* \"#utility.yul\":4871:4905   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4851:4869   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4844:4906   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4922:4940   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4915:4950   */\n      mstore\n        /* \"#utility.yul\":4967:4986   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4591:4992   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7537:7560  recipient != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5199:5201   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5181:5202   */\n      mstore\n        /* \"#utility.yul\":5238:5240   */\n      0x23\n        /* \"#utility.yul\":5218:5236   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5211:5241   */\n      mstore\n        /* \"#utility.yul\":5277:5311   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5257:5275   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5250:5312   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5328:5346   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5321:5354   */\n      mstore\n        /* \"#utility.yul\":5371:5390   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4997:5396   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7693:7710  _balances[sender] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7690  uint256 senderBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7693:7710  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7728:7751  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5603:5605   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5585:5606   */\n      mstore\n        /* \"#utility.yul\":5642:5644   */\n      0x26\n        /* \"#utility.yul\":5622:5640   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5615:5645   */\n      mstore\n        /* \"#utility.yul\":5681:5715   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5661:5679   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5654:5716   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5732:5750   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5725:5761   */\n      mstore\n        /* \"#utility.yul\":5778:5797   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_81\n        /* \"#utility.yul\":5401:5803   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7845  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7837  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7845  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7870  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7870  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7910  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7870  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7837  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      tag_131\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7870  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7953:7962  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7945:7951  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7970  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:8035  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7322:8035  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_140:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_140)\n    tag_142:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_137:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_144:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_146:\n        /* \"#utility.yul\":913:942   */\n      tag_147\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_137\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_151:\n        /* \"#utility.yul\":1563:1592   */\n      tag_152\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_137\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_153\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_137\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_156:\n        /* \"#utility.yul\":2051:2080   */\n      tag_157\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_137\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_159:\n        /* \"#utility.yul\":2259:2288   */\n      tag_160\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_137\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_161\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_137\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_163:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_164:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3372   */\n    tag_91:\n        /* \"#utility.yul\":3215:3224   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3236:3246   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3233:3366   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":3288:3298   */\n      0x4e487b71\n        /* \"#utility.yul\":3283:3286   */\n      0xe0\n        /* \"#utility.yul\":3279:3299   */\n      shl\n        /* \"#utility.yul\":3276:3277   */\n      0x00\n        /* \"#utility.yul\":3269:3300   */\n      mstore\n        /* \"#utility.yul\":3323:3327   */\n      0x11\n        /* \"#utility.yul\":3320:3321   */\n      0x04\n        /* \"#utility.yul\":3313:3328   */\n      mstore\n        /* \"#utility.yul\":3351:3355   */\n      0x24\n        /* \"#utility.yul\":3348:3349   */\n      0x00\n        /* \"#utility.yul\":3341:3356   */\n      revert\n\n    auxdata: 0xa2646970667358221220e840c8a6287c1247b5368f8ee39ce72fffa80a80cadabc2fd00e26ee0fdc894464736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_149": {
									"entryPoint": null,
									"id": 149,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:10"
															},
															"nodeType": "YulIf",
															"src": "220:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:10"
															},
															"nodeType": "YulIf",
															"src": "353:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:10"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:10"
															},
															"nodeType": "YulIf",
															"src": "536:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:10"
															},
															"nodeType": "YulIf",
															"src": "698:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:10"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:10"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:10",
																"statements": []
															},
															"src": "779:133:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:10",
														"type": ""
													}
												],
												"src": "146:840:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:10"
															},
															"nodeType": "YulIf",
															"src": "1119:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:10"
															},
															"nodeType": "YulIf",
															"src": "1256:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:10"
															},
															"nodeType": "YulIf",
															"src": "1429:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:10",
														"type": ""
													}
												],
												"src": "991:562:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:10"
															},
															"nodeType": "YulIf",
															"src": "1701:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:10"
															},
															"nodeType": "YulIf",
															"src": "1771:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:10",
														"type": ""
													}
												],
												"src": "1558:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:10",
														"type": ""
													}
												],
												"src": "1943:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:10",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:10"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:10"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:10"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:10"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:10"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:10",
																			"statements": []
																		},
																		"src": "2516:82:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:10"
															},
															"nodeType": "YulIf",
															"src": "2160:448:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:10",
														"type": ""
													}
												],
												"src": "2069:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:10",
														"type": ""
													}
												],
												"src": "2619:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:10"
															},
															"nodeType": "YulIf",
															"src": "2929:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:10",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:10"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:10",
																					"statements": []
																				},
																				"src": "3376:236:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:10"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:10"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:10",
														"type": ""
													}
												],
												"src": "2790:1352:10"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000bac38038062000bac83398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6108b880620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610702565b60405180910390f35b6100df6100da36600461076c565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610796565b61026f565b604051601281526020016100c3565b6100df61013136600461076c565b61031e565b6100f36101443660046107d2565b6001600160a01b031660009081526020819052604090205490565b6100b661035a565b6100df61017536600461076c565b610369565b6100df61018836600461076c565b610402565b6100f361019b3660046107f4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610827565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610827565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040f565b5060015b92915050565b600061027c848484610533565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103065760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610313853385840361040f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610355908690610861565b61040f565b6060600480546101d590610827565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103eb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fd565b6103f8338585840361040f565b5060019392505050565b6000610265338484610533565b6001600160a01b0383166104715760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fd565b6001600160a01b0382166104d25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105975760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fd565b6001600160a01b0382166105f95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fd565b6001600160a01b038316600090815260208190526040902054818110156106715760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fd565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a8908490610861565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f491815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072f57858101830151858201604001528201610713565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461076757600080fd5b919050565b6000806040838503121561077f57600080fd5b61078883610750565b946020939093013593505050565b6000806000606084860312156107ab57600080fd5b6107b484610750565b92506107c260208501610750565b9150604084013590509250925092565b6000602082840312156107e457600080fd5b6107ed82610750565b9392505050565b6000806040838503121561080757600080fd5b61081083610750565b915061081e60208401610750565b90509250929050565b600181811c9082168061083b57607f821691505b60208210810361085b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026957634e487b7160e01b600052601160045260246000fdfea2646970667358221220e840c8a6287c1247b5368f8ee39ce72fffa80a80cadabc2fd00e26ee0fdc894464736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xBAC CODESIZE SUB DUP1 PUSH3 0xBAC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8B8 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x796 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x35A JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x827 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x827 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40F JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C DUP5 DUP5 DUP5 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x313 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x355 SWAP1 DUP7 SWAP1 PUSH2 0x861 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x827 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x3F8 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A8 SWAP1 DUP5 SWAP1 PUSH2 0x861 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x713 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x788 DUP4 PUSH2 0x750 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B4 DUP5 PUSH2 0x750 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C2 PUSH1 0x20 DUP6 ADD PUSH2 0x750 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7ED DUP3 PUSH2 0x750 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x810 DUP4 PUSH2 0x750 JUMP JUMPDEST SWAP2 POP PUSH2 0x81E PUSH1 0x20 DUP5 ADD PUSH2 0x750 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x83B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x85B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x269 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 BLOCKHASH 0xC8 0xA6 0x28 PUSH29 0x1247B5368F8EE39CE72FFFA80A80CADABC2FD00E26EE0FDC894464736F PUSH13 0x63430008100033000000000000 ",
							"sourceMap": "1388:10416:1:-:0;;;1963:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2029:5;:13;2037:5;2029;:13;:::i;:::-;-1:-1:-1;2052:7:1;:17;2062:7;2052;:17;:::i;:::-;;1963:113;;1388:10416;;14:127:10;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:10;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:10;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:10:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:10;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:10;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:10;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:10;;;3992:26;3943:89;-1:-1:-1;;2747:1:10;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:10;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:10;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:10;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:10:o;:::-;1388:10416:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_649": {
									"entryPoint": null,
									"id": 649,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_627": {
									"entryPoint": 1039,
									"id": 627,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_638": {
									"entryPoint": null,
									"id": 638,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1348": {
									"entryPoint": null,
									"id": 1348,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_454": {
									"entryPoint": 1331,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_242": {
									"entryPoint": null,
									"id": 242,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_263": {
									"entryPoint": 600,
									"id": 263,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_203": {
									"entryPoint": null,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_179": {
									"entryPoint": null,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_377": {
									"entryPoint": 873,
									"id": 377,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_338": {
									"entryPoint": 798,
									"id": 338,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_159": {
									"entryPoint": 454,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_169": {
									"entryPoint": 858,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_311": {
									"entryPoint": 623,
									"id": 311,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_224": {
									"entryPoint": 1026,
									"id": 224,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5805:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:10",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:10",
																"statements": []
															},
															"src": "294:140:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:10",
														"type": ""
													}
												],
												"src": "14:548:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:10"
															},
															"nodeType": "YulIf",
															"src": "664:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:10",
														"type": ""
													}
												],
												"src": "567:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:10"
															},
															"nodeType": "YulIf",
															"src": "842:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:10",
														"type": ""
													}
												],
												"src": "745:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:10",
														"type": ""
													}
												],
												"src": "1004:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:10",
														"type": ""
													}
												],
												"src": "1196:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:10"
															},
															"nodeType": "YulIf",
															"src": "1492:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:10",
														"type": ""
													}
												],
												"src": "1378:328:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:10",
														"type": ""
													}
												],
												"src": "1711:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:10"
															},
															"nodeType": "YulIf",
															"src": "1980:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:10",
														"type": ""
													}
												],
												"src": "1900:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:10"
															},
															"nodeType": "YulIf",
															"src": "2188:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:10",
														"type": ""
													}
												],
												"src": "2091:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:10"
															},
															"nodeType": "YulIf",
															"src": "2499:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:10"
															},
															"nodeType": "YulIf",
															"src": "2569:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:10",
														"type": ""
													}
												],
												"src": "2356:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2915:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2932:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2943:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2925:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2925:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2925:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2966:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2977:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2962:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2962:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2982:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2955:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3005:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3016:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3001:18:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3021:34:10",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3076:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3087:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3072:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3072:18:10"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3092:10:10",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3065:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3112:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3124:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3135:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3120:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3120:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3112:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2892:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2906:4:10",
														"type": ""
													}
												],
												"src": "2741:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3198:174:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3208:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3219:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3222:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3215:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3215:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3208:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3255:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3276:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3283:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3288:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3279:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3279:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3269:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3269:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3269:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3320:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3323:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3313:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3313:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3313:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3348:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3351:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3341:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3341:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3341:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3239:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3242:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3236:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3236:10:10"
															},
															"nodeType": "YulIf",
															"src": "3233:133:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3181:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3184:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3190:3:10",
														"type": ""
													}
												],
												"src": "3150:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3551:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3568:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3579:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3561:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3561:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3561:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3602:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3613:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3598:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3598:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3618:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3591:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3591:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3591:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3641:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3652:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3637:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3637:18:10"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3657:34:10",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3630:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3630:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3630:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3712:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3723:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3708:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3708:18:10"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3728:7:10",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3701:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3701:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3745:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3757:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3768:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3753:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3745:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3528:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3542:4:10",
														"type": ""
													}
												],
												"src": "3377:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3957:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3974:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3985:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3967:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3967:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3967:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4008:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4019:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4004:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4004:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4024:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3997:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3997:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3997:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4047:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4058:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4043:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4043:18:10"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4063:34:10",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4036:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4036:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4036:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4118:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4129:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4114:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4114:18:10"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4134:6:10",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4107:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4107:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4107:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4150:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4162:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4173:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4158:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4158:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4150:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3934:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3948:4:10",
														"type": ""
													}
												],
												"src": "3783:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4362:224:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4379:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4390:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4372:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4372:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4372:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4413:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4424:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4409:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4409:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4429:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4402:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4402:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4452:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4463:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4448:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4448:18:10"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4468:34:10",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4441:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4441:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4441:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4534:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4519:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4519:18:10"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4539:4:10",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4512:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4512:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4512:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4553:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4565:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4576:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4561:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4553:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4339:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4353:4:10",
														"type": ""
													}
												],
												"src": "4188:398:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4765:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4782:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4793:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4775:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4775:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4816:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4827:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4812:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4812:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4832:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4805:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4805:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4805:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4855:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4866:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4851:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4851:18:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4871:34:10",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4844:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4844:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4926:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4937:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4922:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4922:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4942:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4915:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4915:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4915:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4959:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4971:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4982:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4967:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4967:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4959:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4742:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4756:4:10",
														"type": ""
													}
												],
												"src": "4591:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5171:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5188:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5199:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5181:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5181:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5181:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5222:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5233:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5218:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5218:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5238:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5211:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5211:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5211:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5261:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5272:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5257:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5257:18:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5277:34:10",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5250:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5250:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5250:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5332:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5343:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5328:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5328:18:10"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5348:5:10",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5321:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5321:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5321:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5363:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5375:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5386:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5371:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5371:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5363:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5148:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5162:4:10",
														"type": ""
													}
												],
												"src": "4997:399:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5575:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5592:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5603:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5585:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5585:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5585:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5626:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5637:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5622:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5622:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5642:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5615:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5615:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5665:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5676:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5661:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5661:18:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5681:34:10",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5654:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5654:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5654:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5736:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5747:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5732:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5732:18:10"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5752:8:10",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5725:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5725:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5725:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5770:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5782:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5793:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5778:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5778:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5770:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5552:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5566:4:10",
														"type": ""
													}
												],
												"src": "5401:402:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610702565b60405180910390f35b6100df6100da36600461076c565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610796565b61026f565b604051601281526020016100c3565b6100df61013136600461076c565b61031e565b6100f36101443660046107d2565b6001600160a01b031660009081526020819052604090205490565b6100b661035a565b6100df61017536600461076c565b610369565b6100df61018836600461076c565b610402565b6100f361019b3660046107f4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610827565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610827565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040f565b5060015b92915050565b600061027c848484610533565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103065760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610313853385840361040f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610355908690610861565b61040f565b6060600480546101d590610827565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103eb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fd565b6103f8338585840361040f565b5060019392505050565b6000610265338484610533565b6001600160a01b0383166104715760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fd565b6001600160a01b0382166104d25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105975760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fd565b6001600160a01b0382166105f95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fd565b6001600160a01b038316600090815260208190526040902054818110156106715760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fd565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a8908490610861565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f491815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072f57858101830151858201604001528201610713565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461076757600080fd5b919050565b6000806040838503121561077f57600080fd5b61078883610750565b946020939093013593505050565b6000806000606084860312156107ab57600080fd5b6107b484610750565b92506107c260208501610750565b9150604084013590509250925092565b6000602082840312156107e457600080fd5b6107ed82610750565b9392505050565b6000806040838503121561080757600080fd5b61081083610750565b915061081e60208401610750565b90509250929050565b600181811c9082168061083b57607f821691505b60208210810361085b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026957634e487b7160e01b600052601160045260246000fdfea2646970667358221220e840c8a6287c1247b5368f8ee39ce72fffa80a80cadabc2fd00e26ee0fdc894464736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x796 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x35A JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x827 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x827 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40F JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C DUP5 DUP5 DUP5 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x313 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x355 SWAP1 DUP7 SWAP1 PUSH2 0x861 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x827 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x3F8 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A8 SWAP1 DUP5 SWAP1 PUSH2 0x861 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x713 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x788 DUP4 PUSH2 0x750 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B4 DUP5 PUSH2 0x750 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C2 PUSH1 0x20 DUP6 ADD PUSH2 0x750 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7ED DUP3 PUSH2 0x750 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x810 DUP4 PUSH2 0x750 JUMP JUMPDEST SWAP2 POP PUSH2 0x81E PUSH1 0x20 DUP5 ADD PUSH2 0x750 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x83B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x85B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x269 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 BLOCKHASH 0xC8 0xA6 0x28 PUSH29 0x1247B5368F8EE39CE72FFFA80A80CADABC2FD00E26EE0FDC894464736F PUSH13 0x63430008100033000000000000 ",
							"sourceMap": "1388:10416:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4238:166;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:10;;1162:22;1144:41;;1132:2;1117:18;4238:166:1;1004:187:10;3229:106:1;3316:12;;3229:106;;;1342:25:10;;;1330:2;1315:18;3229:106:1;1196:177:10;4871:478:1;;;;;;:::i;:::-;;:::i;3078:91::-;;;3160:2;1853:36:10;;1841:2;1826:18;3078:91:1;1711:184:10;5744:212:1;;;;;;:::i;:::-;;:::i;3393:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3493:18:1;3467:7;3493:18;;;;;;;;;;;;3393:125;2352:102;;;:::i;6443:405::-;;;;;;:::i;:::-;;:::i;3721:172::-;;;;;;:::i;:::-;;:::i;3951:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4066:18:1;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149;2141:98;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4238:166::-;4321:4;4337:39;719:10:7;4360:7:1;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:1;4238:166;;;;;:::o;4871:478::-;5007:4;5023:36;5033:6;5041:9;5052:6;5023:9;:36::i;:::-;-1:-1:-1;;;;;5097:19:1;;5070:24;5097:19;;;:11;:19;;;;;;;;719:10:7;5097:33:1;;;;;;;;5148:26;;;;5140:79;;;;-1:-1:-1;;;5140:79:1;;2943:2:10;5140:79:1;;;2925:21:10;2982:2;2962:18;;;2955:30;3021:34;3001:18;;;2994:62;-1:-1:-1;;;3072:18:10;;;3065:38;3120:19;;5140:79:1;;;;;;;;;5253:57;5262:6;719:10:7;5303:6:1;5284:16;:25;5253:8;:57::i;:::-;-1:-1:-1;5338:4:1;;4871:478;-1:-1:-1;;;;4871:478:1:o;5744:212::-;719:10:7;5832:4:1;5880:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5880:34:1;;;;;;;;;;5832:4;;5848:80;;5871:7;;5880:47;;5917:10;;5880:47;:::i;:::-;5848:8;:80::i;2352:102::-;2408:13;2440:7;2433:14;;;;;:::i;6443:405::-;719:10:7;6536:4:1;6579:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6579:34:1;;;;;;;;;;6631:35;;;;6623:85;;;;-1:-1:-1;;;6623:85:1;;3579:2:10;6623:85:1;;;3561:21:10;3618:2;3598:18;;;3591:30;3657:34;3637:18;;;3630:62;-1:-1:-1;;;3708:18:10;;;3701:35;3753:19;;6623:85:1;3377:401:10;6623:85:1;6742:67;719:10:7;6765:7:1;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:1;;6443:405;-1:-1:-1;;;6443:405:1:o;3721:172::-;3807:4;3823:42;719:10:7;3847:9:1;3858:6;3823:9;:42::i;10019:370::-;-1:-1:-1;;;;;10150:19:1;;10142:68;;;;-1:-1:-1;;;10142:68:1;;3985:2:10;10142:68:1;;;3967:21:10;4024:2;4004:18;;;3997:30;4063:34;4043:18;;;4036:62;-1:-1:-1;;;4114:18:10;;;4107:34;4158:19;;10142:68:1;3783:400:10;10142:68:1;-1:-1:-1;;;;;10228:21:1;;10220:68;;;;-1:-1:-1;;;10220:68:1;;4390:2:10;10220:68:1;;;4372:21:10;4429:2;4409:18;;;4402:30;4468:34;4448:18;;;4441:62;-1:-1:-1;;;4519:18:10;;;4512:32;4561:19;;10220:68:1;4188:398:10;10220:68:1;-1:-1:-1;;;;;10299:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10350:32;;1342:25:10;;;10350:32:1;;1315:18:10;10350:32:1;;;;;;;10019:370;;;:::o;7322:713::-;-1:-1:-1;;;;;7457:20:1;;7449:70;;;;-1:-1:-1;;;7449:70:1;;4793:2:10;7449:70:1;;;4775:21:10;4832:2;4812:18;;;4805:30;4871:34;4851:18;;;4844:62;-1:-1:-1;;;4922:18:10;;;4915:35;4967:19;;7449:70:1;4591:401:10;7449:70:1;-1:-1:-1;;;;;7537:23:1;;7529:71;;;;-1:-1:-1;;;7529:71:1;;5199:2:10;7529:71:1;;;5181:21:10;5238:2;5218:18;;;5211:30;5277:34;5257:18;;;5250:62;-1:-1:-1;;;5328:18:10;;;5321:33;5371:19;;7529:71:1;4997:399:10;7529:71:1;-1:-1:-1;;;;;7693:17:1;;7669:21;7693:17;;;;;;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:1;;5603:2:10;7720:74:1;;;5585:21:10;5642:2;5622:18;;;5615:30;5681:34;5661:18;;;5654:62;-1:-1:-1;;;5732:18:10;;;5725:36;5778:19;;7720:74:1;5401:402:10;7720:74:1;-1:-1:-1;;;;;7828:17:1;;;:9;:17;;;;;;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:9;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:1;7945:6;-1:-1:-1;;;;;7936:35:1;;7964:6;7936:35;;;;1342:25:10;;1330:2;1315:18;;1196:177;7936:35:1;;;;;;;;7439:596;7322:713;;;:::o;14:548:10:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:10;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:10:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:10:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3150:222::-;3215:9;;;3236:10;;;3233:133;;;3288:10;3283:3;3279:20;3276:1;3269:31;3323:4;3320:1;3313:15;3351:4;3348:1;3341:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "446400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24620",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26954",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1963,
									"end": 2076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2034,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2037,
									"end": 2042,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2034,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2029,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2052,
									"end": 2059,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2062,
									"end": 2069,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2059,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2052,
									"end": 2069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e840c8a6287c1247b5368f8ee39ce72fffa80a80cadabc2fd00e26ee0fdc894464736f6c63430008100033",
									".code": [
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2141,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2141,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4238,
											"end": 4404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4238,
											"end": 4404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4871,
											"end": 5349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4871,
											"end": 5349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3162,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5744,
											"end": 5956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5744,
											"end": 5956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3393,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2352,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6443,
											"end": 6848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6443,
											"end": 6848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3721,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3721,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3951,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2227,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2220,
											"end": 2232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2220,
											"end": 2232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4375,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4337,
											"end": 4376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4393,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5023,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5108,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2945,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2946,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2984,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3055,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2994,
											"end": 3056,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3139,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 3120,
											"end": 3139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5262,
											"end": 5268,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5309,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5300,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5253,
											"end": 5310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 5349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5891,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5848,
											"end": 5928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5878,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5927,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5880,
											"end": 5927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5848,
											"end": 5928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2440,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2433,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6536,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6590,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3581,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3620,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3591,
											"end": 3621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3691,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3637,
											"end": 3655,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3637,
											"end": 3655,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3637,
											"end": 3655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3701,
											"end": 3736,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3753,
											"end": 3772,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 3753,
											"end": 3772,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3377,
											"end": 3778,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6772,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6793,
											"end": 6808,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6790,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6742,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6742,
											"end": 6809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6443,
											"end": 6848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3847,
											"end": 3856,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3823,
											"end": 3865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10150,
											"end": 10169,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10169,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 3987,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 3988,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4026,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3997,
											"end": 4027,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4036,
											"end": 4098,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4114,
											"end": 4132,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4114,
											"end": 4132,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4132,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4107,
											"end": 4141,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4158,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4158,
											"end": 4177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3783,
											"end": 4183,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10228,
											"end": 10249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10228,
											"end": 10249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4390,
											"end": 4392,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4393,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4429,
											"end": 4431,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4402,
											"end": 4432,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 4502,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4448,
											"end": 4466,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4448,
											"end": 4466,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 4466,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4503,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4512,
											"end": 4544,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4561,
											"end": 4580,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4561,
											"end": 4580,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4188,
											"end": 4586,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4795,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4796,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4832,
											"end": 4834,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4805,
											"end": 4835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4905,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4851,
											"end": 4869,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4851,
											"end": 4869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4851,
											"end": 4869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4906,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4950,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4986,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4967,
											"end": 4986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4591,
											"end": 4992,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7537,
											"end": 7560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7537,
											"end": 7560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5201,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5240,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 5218,
											"end": 5236,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5218,
											"end": 5236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5211,
											"end": 5241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5277,
											"end": 5311,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5257,
											"end": 5275,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5257,
											"end": 5275,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5250,
											"end": 5312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5354,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 5390,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5371,
											"end": 5390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4997,
											"end": 5396,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5603,
											"end": 5605,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5606,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5644,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5622,
											"end": 5640,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5622,
											"end": 5640,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5622,
											"end": 5640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5681,
											"end": 5715,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5661,
											"end": 5679,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5661,
											"end": 5679,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5661,
											"end": 5679,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5716,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5732,
											"end": 5750,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5732,
											"end": 5750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5732,
											"end": 5750,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5761,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5778,
											"end": 5797,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5778,
											"end": 5797,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5401,
											"end": 5803,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7870,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7890,
											"end": 7920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 7962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7945,
											"end": 7951,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7964,
											"end": 7970,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 8035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 8035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3372,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 3150,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3224,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3224,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3224,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3246,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3366,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 3233,
											"end": 3366,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3298,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 3283,
											"end": 3286,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3279,
											"end": 3299,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3276,
											"end": 3277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3327,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3313,
											"end": 3328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3355,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3348,
											"end": 3349,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3356,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/maximus.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":201},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 126,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":201},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":201},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0707ddb033e6bbb36546b9d58bb6f043076ceac7a10792a71dfd957583acde09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f16258ce35ab9409430a2213b3a76845c06f01cbf2e6c2f5229d5efad1367b2\",\"dweb:/ipfs/QmTKeY9WgozRyDAQuX3zgLRbS1maWGuA5VJZL6n3GcptJo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 126,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":201},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220adbc14b6955ae3c1f18292d043480aa85e766c3e088ba41edfa48d776737468264736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220adbc14b6955ae3c1f18292d043480aa85e766c3e088ba41edfa48d776737468264736f6c63430008100033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xBC EQ 0xB6 SWAP6 GAS 0xE3 0xC1 CALL DUP3 SWAP3 0xD0 NUMBER BASEFEE EXP 0xA8 0x5E PUSH23 0x6C3E088BA41EDFA48D776737468264736F6C6343000810 STOP CALLER ",
							"sourceMap": "645:3270:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;645:3270:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220adbc14b6955ae3c1f18292d043480aa85e766c3e088ba41edfa48d776737468264736f6c63430008100033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xBC EQ 0xB6 SWAP6 GAS 0xE3 0xC1 CALL DUP3 SWAP3 0xD0 NUMBER BASEFEE EXP 0xA8 0x5E PUSH23 0x6C3E088BA41EDFA48D776737468264736F6C6343000810 STOP CALLER ",
							"sourceMap": "645:3270:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220adbc14b6955ae3c1f18292d043480aa85e766c3e088ba41edfa48d776737468264736f6c63430008100033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/maximus.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":201},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122067251c9bbb06c33ad826c61977e5fc86fe1fad727570dd79134b326dc5ed43a064736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122067251c9bbb06c33ad826c61977e5fc86fe1fad727570dd79134b326dc5ed43a064736f6c63430008100033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x251C9BBB06C33AD8 0x26 0xC6 NOT PUSH24 0xE5FC86FE1FAD727570DD79134B326DC5ED43A064736F6C63 NUMBER STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "179:7729:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:7729:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122067251c9bbb06c33ad826c61977e5fc86fe1fad727570dd79134b326dc5ed43a064736f6c63430008100033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x251C9BBB06C33AD8 0x26 0xC6 NOT PUSH24 0xE5FC86FE1FAD727570DD79134B326DC5ED43A064736F6C63 NUMBER STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "179:7729:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122067251c9bbb06c33ad826c61977e5fc86fe1fad727570dd79134b326dc5ed43a064736f6c63430008100033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/maximus.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":201},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":201},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202c409362b4d1e7b6210c2f86ce5d6222d736ce0a38303df1d69a3e505a49fa5f64736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c409362b4d1e7b6210c2f86ce5d6222d736ce0a38303df1d69a3e505a49fa5f64736f6c63430008100033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C BLOCKHASH SWAP4 PUSH3 0xB4D1E7 0xB6 0x21 0xC 0x2F DUP7 0xCE 0x5D PUSH3 0x22D736 0xCE EXP CODESIZE ADDRESS RETURNDATASIZE CALL 0xD6 SWAP11 RETURNDATACOPY POP GAS 0x49 STATICCALL 0x5F PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "467:6301:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c409362b4d1e7b6210c2f86ce5d6222d736ce0a38303df1d69a3e505a49fa5f64736f6c63430008100033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C BLOCKHASH SWAP4 PUSH3 0xB4D1E7 0xB6 0x21 0xC 0x2F DUP7 0xCE 0x5D PUSH3 0x22D736 0xCE EXP CODESIZE ADDRESS RETURNDATASIZE CALL 0xD6 SWAP11 RETURNDATACOPY POP GAS 0x49 STATICCALL 0x5F PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "467:6301:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c409362b4d1e7b6210c2f86ce5d6222d736ce0a38303df1d69a3e505a49fa5f64736f6c63430008100033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/maximus.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":201},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/maximus.sol": {
				"HEXToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentDay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakerAddr",
									"type": "address"
								}
							],
							"name": "stakeCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint40",
									"name": "stakeIdParam",
									"type": "uint40"
								}
							],
							"name": "stakeEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newStakedHearts",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newStakedDays",
									"type": "uint256"
								}
							],
							"name": "stakeStart",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Tanto Nomini",
						"details": "see HEX_CONTRACT_ADDRESS",
						"kind": "dev",
						"methods": {},
						"title": "HEX Contract Proxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/maximus.sol\":585:1056  contract HEXToken {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/maximus.sol\":585:1056  contract HEXToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x33060d90\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x343009a2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x52a438b8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5c9302c9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/maximus.sol\":747:823  function approve(address spender, uint256 amount) external returns (bool) {} */\n    tag_3:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n        /* \"contracts/maximus.sol\":815:819  bool */\n      0x00\n        /* \"contracts/maximus.sol\":747:823  function approve(address spender, uint256 amount) external returns (bool) {} */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n    tag_9:\n      mload(0x40)\n        /* \"#utility.yul\":616:630   */\n      swap1\n      iszero\n        /* \"#utility.yul\":609:631   */\n      iszero\n        /* \"#utility.yul\":591:632   */\n      dup2\n      mstore\n        /* \"#utility.yul\":579:581   */\n      0x20\n        /* \"#utility.yul\":564:582   */\n      add\n        /* \"contracts/maximus.sol\":747:823  function approve(address spender, uint256 amount) external returns (bool) {} */\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/maximus.sol\":977:1051  function stakeCount(address stakerAddr) external view returns (uint256) {} */\n    tag_4:\n      tag_15\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      pop\n        /* \"contracts/maximus.sol\":1040:1047  uint256 */\n      0x00\n      swap1\n        /* \"contracts/maximus.sol\":977:1051  function stakeCount(address stakerAddr) external view returns (uint256) {} */\n      jump\n    tag_15:\n      mload(0x40)\n        /* \"#utility.yul\":980:1005   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":968:970   */\n      0x20\n        /* \"#utility.yul\":953:971   */\n      add\n        /* \"contracts/maximus.sol\":977:1051  function stakeCount(address stakerAddr) external view returns (uint256) {} */\n      tag_13\n        /* \"#utility.yul\":834:1011   */\n      jump\n        /* \"contracts/maximus.sol\":906:974  function stakeEnd(uint256 stakeIndex, uint40 stakeIdParam) public {} */\n    tag_5:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      pop\n      pop\n      jump\n    tag_21:\n      stop\n        /* \"contracts/maximus.sol\":665:744  function stakeStart(uint256 newStakedHearts, uint256 newStakedDays) external {} */\n    tag_6:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n        /* \"contracts/maximus.sol\":607:662  function currentDay() external view returns (uint256){} */\n    tag_7:\n        /* \"contracts/maximus.sol\":652:659  uint256 */\n      0x00\n        /* \"contracts/maximus.sol\":607:662  function currentDay() external view returns (uint256){} */\n      jump(tag_15)\n        /* \"#utility.yul\":14:187   */\n    tag_42:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_45\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_45:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_11:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_47:\n        /* \"#utility.yul\":360:389   */\n      tag_48\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_42\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":643:829   */\n    tag_17:\n        /* \"#utility.yul\":702:708   */\n      0x00\n        /* \"#utility.yul\":755:757   */\n      0x20\n        /* \"#utility.yul\":743:752   */\n      dup3\n        /* \"#utility.yul\":734:741   */\n      dup5\n        /* \"#utility.yul\":730:753   */\n      sub\n        /* \"#utility.yul\":726:758   */\n      slt\n        /* \"#utility.yul\":723:775   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":771:772   */\n      0x00\n        /* \"#utility.yul\":768:769   */\n      dup1\n        /* \"#utility.yul\":761:773   */\n      revert\n        /* \"#utility.yul\":723:775   */\n    tag_51:\n        /* \"#utility.yul\":794:823   */\n      tag_52\n        /* \"#utility.yul\":813:822   */\n      dup3\n        /* \"#utility.yul\":794:823   */\n      tag_42\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":784:823   */\n      swap4\n        /* \"#utility.yul\":643:829   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1016:1362   */\n    tag_23:\n        /* \"#utility.yul\":1083:1089   */\n      0x00\n        /* \"#utility.yul\":1091:1097   */\n      dup1\n        /* \"#utility.yul\":1144:1146   */\n      0x40\n        /* \"#utility.yul\":1132:1141   */\n      dup4\n        /* \"#utility.yul\":1123:1130   */\n      dup6\n        /* \"#utility.yul\":1119:1142   */\n      sub\n        /* \"#utility.yul\":1115:1147   */\n      slt\n        /* \"#utility.yul\":1112:1164   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":1160:1161   */\n      0x00\n        /* \"#utility.yul\":1157:1158   */\n      dup1\n        /* \"#utility.yul\":1150:1162   */\n      revert\n        /* \"#utility.yul\":1112:1164   */\n    tag_55:\n        /* \"#utility.yul\":1196:1205   */\n      dup3\n        /* \"#utility.yul\":1183:1206   */\n      calldataload\n        /* \"#utility.yul\":1173:1206   */\n      swap2\n      pop\n        /* \"#utility.yul\":1256:1258   */\n      0x20\n        /* \"#utility.yul\":1245:1254   */\n      dup4\n        /* \"#utility.yul\":1241:1259   */\n      add\n        /* \"#utility.yul\":1228:1260   */\n      calldataload\n        /* \"#utility.yul\":1300:1312   */\n      0xffffffffff\n        /* \"#utility.yul\":1293:1298   */\n      dup2\n        /* \"#utility.yul\":1289:1313   */\n      and\n        /* \"#utility.yul\":1282:1287   */\n      dup2\n        /* \"#utility.yul\":1279:1314   */\n      eq\n        /* \"#utility.yul\":1269:1332   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1328:1329   */\n      0x00\n        /* \"#utility.yul\":1325:1326   */\n      dup1\n        /* \"#utility.yul\":1318:1330   */\n      revert\n        /* \"#utility.yul\":1269:1332   */\n    tag_56:\n        /* \"#utility.yul\":1351:1356   */\n      dup1\n        /* \"#utility.yul\":1341:1356   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1016:1362   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1367:1615   */\n    tag_27:\n        /* \"#utility.yul\":1435:1441   */\n      0x00\n        /* \"#utility.yul\":1443:1449   */\n      dup1\n        /* \"#utility.yul\":1496:1498   */\n      0x40\n        /* \"#utility.yul\":1484:1493   */\n      dup4\n        /* \"#utility.yul\":1475:1482   */\n      dup6\n        /* \"#utility.yul\":1471:1494   */\n      sub\n        /* \"#utility.yul\":1467:1499   */\n      slt\n        /* \"#utility.yul\":1464:1516   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1509:1510   */\n      dup1\n        /* \"#utility.yul\":1502:1514   */\n      revert\n        /* \"#utility.yul\":1464:1516   */\n    tag_58:\n      pop\n      pop\n        /* \"#utility.yul\":1535:1558   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1605:1607   */\n      0x20\n        /* \"#utility.yul\":1590:1608   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1577:1609   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1367:1615   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a174160564614890f2e0884b720f65b73d08041628a3ba532e77f66346a495c964736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101d7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063095ea7b31461006757806333060d9014610092578063343009a2146100b457806352a438b8146100c85780635c9302c9146100d6578063a9059cbb14610067575b600080fd5b61007d6100753660046100f9565b600092915050565b60405190151581526020015b60405180910390f35b6100a66100a0366004610123565b50600090565b604051908152602001610089565b6100c66100c2366004610145565b5050565b005b6100c66100c236600461017f565b60006100a6565b80356001600160a01b03811681146100f457600080fd5b919050565b6000806040838503121561010c57600080fd5b610115836100dd565b946020939093013593505050565b60006020828403121561013557600080fd5b61013e826100dd565b9392505050565b6000806040838503121561015857600080fd5b82359150602083013564ffffffffff8116811461017457600080fd5b809150509250929050565b6000806040838503121561019257600080fd5b5050803592602090910135915056fea2646970667358221220a174160564614890f2e0884b720f65b73d08041628a3ba532e77f66346a495c964736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x33060D90 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x343009A2 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x52A438B8 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x5C9302C9 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x67 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH2 0xA0 CALLDATASIZE PUSH1 0x4 PUSH2 0x123 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x89 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x145 JUMP JUMPDEST POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC6 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x17F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x115 DUP4 PUSH2 0xDD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E DUP3 PUSH2 0xDD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 PUSH21 0x160564614890F2E0884B720F65B73D08041628A3BA MSTORE8 0x2E PUSH24 0xF66346A495C964736F6C6343000810003300000000000000 ",
							"sourceMap": "585:471:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@approve_1703": {
									"entryPoint": null,
									"id": 1703,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@currentDay_1685": {
									"entryPoint": null,
									"id": 1685,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@stakeCount_1729": {
									"entryPoint": null,
									"id": 1729,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@stakeEnd_1721": {
									"entryPoint": null,
									"id": 1721,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakeStart_1693": {
									"entryPoint": null,
									"id": 1693,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transfer_1713": {
									"entryPoint": null,
									"id": 1713,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint40": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1617:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:10"
															},
															"nodeType": "YulIf",
															"src": "289:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:10",
														"type": ""
													}
												],
												"src": "192:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "556:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "568:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "564:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "564:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "556:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "598:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "623:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "616:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "616:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "609:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "591:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "591:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "515:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "526:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "537:4:10",
														"type": ""
													}
												],
												"src": "451:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "713:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "759:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "768:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "771:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "761:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "761:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "761:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "734:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "743:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "730:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "730:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "726:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:32:10"
															},
															"nodeType": "YulIf",
															"src": "723:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "784:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "813:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "794:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "794:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "784:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "679:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "690:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "702:6:10",
														"type": ""
													}
												],
												"src": "643:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "935:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "945:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "957:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "968:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "953:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "953:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "945:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "987:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "998:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "980:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "904:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "926:4:10",
														"type": ""
													}
												],
												"src": "834:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1102:260:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1148:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1157:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1160:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1150:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1150:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1150:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1123:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1132:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1119:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1115:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:32:10"
															},
															"nodeType": "YulIf",
															"src": "1112:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1173:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1196:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1183:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1173:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1215:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1245:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1256:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1241:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1241:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1228:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1219:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1316:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1325:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1318:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1318:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1318:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1282:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1293:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1300:12:10",
																						"type": "",
																						"value": "0xffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1289:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1289:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1279:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1279:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:43:10"
															},
															"nodeType": "YulIf",
															"src": "1269:63:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1341:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1351:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint40",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1060:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1071:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1083:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1091:6:10",
														"type": ""
													}
												],
												"src": "1016:346:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1454:161:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1500:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1509:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1512:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1502:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1502:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1502:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1475:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1484:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1471:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1471:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1496:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1467:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1467:32:10"
															},
															"nodeType": "YulIf",
															"src": "1464:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1525:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1548:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1535:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1535:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1567:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1594:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1605:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1590:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1590:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1577:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1567:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1412:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1423:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1435:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1443:6:10",
														"type": ""
													}
												],
												"src": "1367:248:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint40(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063095ea7b31461006757806333060d9014610092578063343009a2146100b457806352a438b8146100c85780635c9302c9146100d6578063a9059cbb14610067575b600080fd5b61007d6100753660046100f9565b600092915050565b60405190151581526020015b60405180910390f35b6100a66100a0366004610123565b50600090565b604051908152602001610089565b6100c66100c2366004610145565b5050565b005b6100c66100c236600461017f565b60006100a6565b80356001600160a01b03811681146100f457600080fd5b919050565b6000806040838503121561010c57600080fd5b610115836100dd565b946020939093013593505050565b60006020828403121561013557600080fd5b61013e826100dd565b9392505050565b6000806040838503121561015857600080fd5b82359150602083013564ffffffffff8116811461017457600080fd5b809150509250929050565b6000806040838503121561019257600080fd5b5050803592602090910135915056fea2646970667358221220a174160564614890f2e0884b720f65b73d08041628a3ba532e77f66346a495c964736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x33060D90 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x343009A2 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x52A438B8 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x5C9302C9 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x67 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH2 0xA0 CALLDATASIZE PUSH1 0x4 PUSH2 0x123 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x89 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x145 JUMP JUMPDEST POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC6 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x17F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x115 DUP4 PUSH2 0xDD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E DUP3 PUSH2 0xDD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 PUSH21 0x160564614890F2E0884B720F65B73D08041628A3BA MSTORE8 0x2E PUSH24 0xF66346A495C964736F6C6343000810003300000000000000 ",
							"sourceMap": "585:471:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;747:76;;;;;;:::i;:::-;815:4;747:76;;;;;;;;616:14:10;;609:22;591:41;;579:2;564:18;747:76:9;;;;;;;;977:74;;;;;;:::i;:::-;-1:-1:-1;1040:7:9;;977:74;;;;980:25:10;;;968:2;953:18;977:74:9;834:177:10;906:68:9;;;;;;:::i;:::-;;;;;;665:79;;;;;;:::i;607:55::-;652:7;607:55;;14:173:10;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:10:o;643:186::-;702:6;755:2;743:9;734:7;730:23;726:32;723:52;;;771:1;768;761:12;723:52;794:29;813:9;794:29;:::i;:::-;784:39;643:186;-1:-1:-1;;;643:186:10:o;1016:346::-;1083:6;1091;1144:2;1132:9;1123:7;1119:23;1115:32;1112:52;;;1160:1;1157;1150:12;1112:52;1196:9;1183:23;1173:33;;1256:2;1245:9;1241:18;1228:32;1300:12;1293:5;1289:24;1282:5;1279:35;1269:63;;1328:1;1325;1318:12;1269:63;1351:5;1341:15;;;1016:346;;;;;:::o;1367:248::-;1435:6;1443;1496:2;1484:9;1475:7;1471:23;1467:32;1464:52;;;1512:1;1509;1502:12;1464:52;-1:-1:-1;;1535:23:10;;;1605:2;1590:18;;;1577:32;;-1:-1:-1;1367:248:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "94200",
								"executionCost": "141",
								"totalCost": "94341"
							},
							"external": {
								"approve(address,uint256)": "354",
								"currentDay()": "258",
								"stakeCount(address)": "355",
								"stakeEnd(uint256,uint40)": "300",
								"stakeStart(uint256,uint256)": "280",
								"transfer(address,uint256)": "464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 585,
									"end": 1056,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 1056,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a174160564614890f2e0884b720f65b73d08041628a3ba532e77f66346a495c964736f6c63430008100033",
									".code": [
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "33060D90"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "343009A2"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "52A438B8"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "5C9302C9"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 1056,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 747,
											"end": 823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 747,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 747,
											"end": 823,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 747,
											"end": 823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 747,
											"end": 823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 815,
											"end": 819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 823,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 747,
											"end": 823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 616,
											"end": 630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 616,
											"end": 630,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 609,
											"end": 631,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 591,
											"end": 632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 591,
											"end": 632,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 579,
											"end": 581,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 564,
											"end": 582,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 747,
											"end": 823,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 747,
											"end": 823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 823,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 977,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1040,
											"end": 1047,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1047,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 980,
											"end": 1005,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 980,
											"end": 1005,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 980,
											"end": 1005,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 968,
											"end": 970,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 834,
											"end": 1011,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 906,
											"end": 974,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 906,
											"end": 974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 906,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 906,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 906,
											"end": 974,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 906,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 906,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 906,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 906,
											"end": 974,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 906,
											"end": 974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 906,
											"end": 974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 906,
											"end": 974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 906,
											"end": 974,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 906,
											"end": 974,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 906,
											"end": 974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 906,
											"end": 974,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 665,
											"end": 744,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 665,
											"end": 744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 665,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 665,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 665,
											"end": 744,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 665,
											"end": 744,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 665,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 665,
											"end": 744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 652,
											"end": 659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 643,
											"end": 829,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 643,
											"end": 829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 702,
											"end": 708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 757,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 734,
											"end": 741,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 730,
											"end": 753,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 726,
											"end": 758,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 723,
											"end": 775,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 723,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 723,
											"end": 775,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 771,
											"end": 772,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 769,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 761,
											"end": 773,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 723,
											"end": 775,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 723,
											"end": 775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 794,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 813,
											"end": 822,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 794,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 794,
											"end": 823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 794,
											"end": 823,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 794,
											"end": 823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 643,
											"end": 829,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 643,
											"end": 829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1362,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1016,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1141,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1130,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1119,
											"end": 1142,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1147,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1164,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1112,
											"end": 1164,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1160,
											"end": 1161,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1150,
											"end": 1162,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1164,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1112,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1196,
											"end": 1205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1206,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1206,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 1259,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1298,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1282,
											"end": 1287,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1314,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1269,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1269,
											"end": 1332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1326,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1269,
											"end": 1332,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1269,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1362,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1362,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1615,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1367,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1484,
											"end": 1493,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1475,
											"end": 1482,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1471,
											"end": 1494,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1499,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1502,
											"end": 1514,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1605,
											"end": 1607,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1590,
											"end": 1608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1590,
											"end": 1608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1577,
											"end": 1609,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1577,
											"end": 1609,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1367,
											"end": 1615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/maximus.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"currentDay()": "5c9302c9",
							"stakeCount(address)": "33060d90",
							"stakeEnd(uint256,uint40)": "343009a2",
							"stakeStart(uint256,uint256)": "52a438b8",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddr\",\"type\":\"address\"}],\"name\":\"stakeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"stakeIdParam\",\"type\":\"uint40\"}],\"name\":\"stakeEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newStakedHearts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newStakedDays\",\"type\":\"uint256\"}],\"name\":\"stakeStart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Tanto Nomini\",\"details\":\"see HEX_CONTRACT_ADDRESS\",\"kind\":\"dev\",\"methods\":{},\"title\":\"HEX Contract Proxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"You can use this contract for only the most basic simulation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/maximus.sol\":\"HEXToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":201},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0707ddb033e6bbb36546b9d58bb6f043076ceac7a10792a71dfd957583acde09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f16258ce35ab9409430a2213b3a76845c06f01cbf2e6c2f5229d5efad1367b2\",\"dweb:/ipfs/QmTKeY9WgozRyDAQuX3zgLRbS1maWGuA5VJZL6n3GcptJo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/maximus.sol\":{\"keccak256\":\"0x022ea901d4e7e2ca90d49a80197826cb526925ebcb8b2cc74ce83b82f60f7278\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b42f7f475f01ae96e838e95df3410b2b062fdd819b4279c9bca28dbb3a2527a1\",\"dweb:/ipfs/QmQYAcvyFGhVG2aDiM6vUeXQBJYp6iEQ5KpPmb2LhEpyDm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "You can use this contract for only the most basic simulation",
						"version": 1
					}
				},
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start_day",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint40",
									"name": "stakeIdParam",
									"type": "uint40"
								}
							],
							"name": "endStakeHEX",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllowanceHEX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalanceHEX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMintingPhaseEndDay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMintingPhaseStartDay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRedemptionRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakeEndDay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakeStartDay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amt",
									"type": "uint256"
								}
							],
							"name": "get_amount_redeem_hex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_hex_day",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasStakeStarted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "denominator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "precision",
									"type": "uint256"
								}
							],
							"name": "percent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "quotient",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "pledgeHEX",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount_MAXI",
									"type": "uint256"
								}
							],
							"name": "redeemHEX",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeHEX",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/maximus.sol\":1057:6782  contract MyToken is ERC20, ERC20Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/maximus.sol\":2754:2793  address CONTRACT_ADDRESS =address(this) */\n  0x0e\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"contracts/maximus.sol\":2788:2792  this */\n  address\n    /* \"contracts/maximus.sol\":2754:2793  address CONTRACT_ADDRESS =address(this) */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/maximus.sol\":2799:2863  address HEX_ADDRESS = 0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39 */\n  0x0f\n  dup1\n  sload\n  dup3\n  and\n    /* \"contracts/maximus.sol\":2821:2863  0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39 */\n  0x2b591e99afe9f32eaa6214f7b7629768c40eeb39\n    /* \"contracts/maximus.sol\":2799:2863  address HEX_ADDRESS = 0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39 */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/maximus.sol\":2915:2956  IERC20 hex_contract = IERC20(HEX_ADDRESS) */\n  0x10\n  dup1\n  sload\n  dup4\n  and\n  dup3\n  or\n  swap1\n  sstore\n    /* \"contracts/maximus.sol\":2962:3000  HEXToken token = HEXToken(HEX_ADDRESS) */\n  0x11\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/maximus.sol\":1439:1742  constructor(uint256 start_day, uint256 duration) ERC20(\"MyToken\", \"MTK\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1963:2076  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc9, 0x26bcaa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4d544b)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2037:2042  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2034  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2042  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2059  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2069  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2062:2069  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2059  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2069  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1963:2076  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"contracts/maximus.sol\":1531:1550  MINTING_PHASE_START */\n  0x06\n    /* \"contracts/maximus.sol\":1531:1562  MINTING_PHASE_START = start_day */\n  dup3\n  swap1\n  sstore\n    /* \"contracts/maximus.sol\":1592:1610  start_day+duration */\n  tag_17\n    /* \"contracts/maximus.sol\":1602:1610  duration */\n  dup2\n    /* \"contracts/maximus.sol\":1553:1562  start_day */\n  dup4\n    /* \"contracts/maximus.sol\":1592:1610  start_day+duration */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"contracts/maximus.sol\":1572:1589  MINTING_PHASE_END */\n  0x07\n    /* \"contracts/maximus.sol\":1572:1610  MINTING_PHASE_END = start_day+duration */\n  sstore\n  pop\n  pop\n    /* \"contracts/maximus.sol\":1620:1637  HAS_STAKE_STARTED */\n  0x08\n    /* \"contracts/maximus.sol\":1620:1643  HAS_STAKE_STARTED=false */\n  dup1\n  sload\n  not(0xffff)\n    /* \"contracts/maximus.sol\":1653:1676  HAS_STAKE_ENDED = false */\n  and\n  swap1\n  sstore\n    /* \"contracts/maximus.sol\":1620:1643  HAS_STAKE_STARTED=false */\n  0x01\n    /* \"contracts/maximus.sol\":1686:1701  REDEMPTION_RATE */\n  0x0b\n    /* \"contracts/maximus.sol\":1686:1703  REDEMPTION_RATE=1 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/maximus.sol\":1713:1725  STAKE_LENGTH */\n  0x0c\n    /* \"contracts/maximus.sol\":1713:1727  STAKE_LENGTH=1 */\n  sstore\n    /* \"contracts/maximus.sol\":1057:6782  contract MyToken is ERC20, ERC20Burnable, Ownable {... */\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:259   */\ntag_3:\n    /* \"#utility.yul\":93:99   */\n  0x00\n    /* \"#utility.yul\":101:107   */\n  dup1\n    /* \"#utility.yul\":154:156   */\n  0x40\n    /* \"#utility.yul\":142:151   */\n  dup4\n    /* \"#utility.yul\":133:140   */\n  dup6\n    /* \"#utility.yul\":129:152   */\n  sub\n    /* \"#utility.yul\":125:157   */\n  slt\n    /* \"#utility.yul\":122:174   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":170:171   */\n  0x00\n    /* \"#utility.yul\":167:168   */\n  dup1\n    /* \"#utility.yul\":160:172   */\n  revert\n    /* \"#utility.yul\":122:174   */\ntag_29:\n  pop\n  pop\n    /* \"#utility.yul\":193:209   */\n  dup1\n  mload\n    /* \"#utility.yul\":249:251   */\n  0x20\n    /* \"#utility.yul\":234:252   */\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":228:253   */\n  mload\n    /* \"#utility.yul\":193:209   */\n  swap1\n  swap3\n    /* \"#utility.yul\":228:253   */\n  swap1\n  swap2\n  pop\n    /* \"#utility.yul\":14:259   */\n  jump\t// out\n    /* \"#utility.yul\":264:391   */\ntag_22:\n    /* \"#utility.yul\":325:335   */\n  0x4e487b71\n    /* \"#utility.yul\":320:323   */\n  0xe0\n    /* \"#utility.yul\":316:336   */\n  shl\n    /* \"#utility.yul\":313:314   */\n  0x00\n    /* \"#utility.yul\":306:337   */\n  mstore\n    /* \"#utility.yul\":356:360   */\n  0x41\n    /* \"#utility.yul\":353:354   */\n  0x04\n    /* \"#utility.yul\":346:361   */\n  mstore\n    /* \"#utility.yul\":380:384   */\n  0x24\n    /* \"#utility.yul\":377:378   */\n  0x00\n    /* \"#utility.yul\":370:385   */\n  revert\n    /* \"#utility.yul\":396:776   */\ntag_23:\n    /* \"#utility.yul\":475:476   */\n  0x01\n    /* \"#utility.yul\":471:483   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":518:530   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":539:600   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":593:597   */\n  0x7f\n    /* \"#utility.yul\":585:591   */\n  dup3\n    /* \"#utility.yul\":581:598   */\n  and\n    /* \"#utility.yul\":571:598   */\n  swap2\n  pop\n    /* \"#utility.yul\":539:600   */\ntag_32:\n    /* \"#utility.yul\":646:648   */\n  0x20\n    /* \"#utility.yul\":638:644   */\n  dup3\n    /* \"#utility.yul\":635:649   */\n  lt\n    /* \"#utility.yul\":615:633   */\n  dup2\n    /* \"#utility.yul\":612:650   */\n  sub\n    /* \"#utility.yul\":609:770   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":692:702   */\n  0x4e487b71\n    /* \"#utility.yul\":687:690   */\n  0xe0\n    /* \"#utility.yul\":683:703   */\n  shl\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":673:704   */\n  mstore\n    /* \"#utility.yul\":727:731   */\n  0x22\n    /* \"#utility.yul\":724:725   */\n  0x04\n    /* \"#utility.yul\":717:732   */\n  mstore\n    /* \"#utility.yul\":755:759   */\n  0x24\n    /* \"#utility.yul\":752:753   */\n  0x00\n    /* \"#utility.yul\":745:760   */\n  revert\n    /* \"#utility.yul\":609:770   */\ntag_33:\n  pop\n    /* \"#utility.yul\":396:776   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":907:1452   */\ntag_25:\n    /* \"#utility.yul\":1009:1011   */\n  0x1f\n    /* \"#utility.yul\":1004:1007   */\n  dup3\n    /* \"#utility.yul\":1001:1012   */\n  gt\n    /* \"#utility.yul\":998:1446   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1045:1046   */\n  0x00\n    /* \"#utility.yul\":1070:1075   */\n  dup2\n    /* \"#utility.yul\":1066:1068   */\n  dup2\n    /* \"#utility.yul\":1059:1076   */\n  mstore\n    /* \"#utility.yul\":1115:1119   */\n  0x20\n    /* \"#utility.yul\":1111:1113   */\n  dup2\n    /* \"#utility.yul\":1101:1120   */\n  keccak256\n    /* \"#utility.yul\":1185:1187   */\n  0x1f\n    /* \"#utility.yul\":1173:1183   */\n  dup6\n    /* \"#utility.yul\":1169:1188   */\n  add\n    /* \"#utility.yul\":1166:1167   */\n  0x05\n    /* \"#utility.yul\":1162:1189   */\n  shr\n    /* \"#utility.yul\":1156:1160   */\n  dup2\n    /* \"#utility.yul\":1152:1190   */\n  add\n    /* \"#utility.yul\":1221:1225   */\n  0x20\n    /* \"#utility.yul\":1209:1219   */\n  dup7\n    /* \"#utility.yul\":1206:1226   */\n  lt\n    /* \"#utility.yul\":1203:1250   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":1244:1248   */\n  dup1\n    /* \"#utility.yul\":1203:1250   */\ntag_37:\n    /* \"#utility.yul\":1299:1301   */\n  0x1f\n    /* \"#utility.yul\":1294:1297   */\n  dup6\n    /* \"#utility.yul\":1290:1302   */\n  add\n    /* \"#utility.yul\":1287:1288   */\n  0x05\n    /* \"#utility.yul\":1283:1303   */\n  shr\n    /* \"#utility.yul\":1277:1281   */\n  dup3\n    /* \"#utility.yul\":1273:1304   */\n  add\n    /* \"#utility.yul\":1263:1304   */\n  swap2\n  pop\n    /* \"#utility.yul\":1354:1436   */\ntag_38:\n    /* \"#utility.yul\":1372:1374   */\n  dup2\n    /* \"#utility.yul\":1365:1370   */\n  dup2\n    /* \"#utility.yul\":1362:1375   */\n  lt\n    /* \"#utility.yul\":1354:1436   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1417:1434   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1398:1399   */\n  0x01\n    /* \"#utility.yul\":1387:1400   */\n  add\n    /* \"#utility.yul\":1354:1436   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":1358:1361   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":998:1446   */\ntag_36:\n    /* \"#utility.yul\":907:1452   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1628:2980   */\ntag_9:\n    /* \"#utility.yul\":1748:1758   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1770:1800   */\n  dup2\n  gt\n    /* \"#utility.yul\":1767:1823   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1803:1821   */\n  tag_44\n  tag_22\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1832:1929   */\n  tag_45\n    /* \"#utility.yul\":1922:1928   */\n  dup2\n    /* \"#utility.yul\":1882:1920   */\n  tag_46\n    /* \"#utility.yul\":1914:1918   */\n  dup5\n    /* \"#utility.yul\":1908:1919   */\n  sload\n    /* \"#utility.yul\":1882:1920   */\n  tag_23\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1876:1880   */\n  dup5\n    /* \"#utility.yul\":1832:1929   */\n  tag_25\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1984:1988   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2048:2050   */\n  0x1f\n    /* \"#utility.yul\":2037:2051   */\n  dup4\n  gt\n    /* \"#utility.yul\":2065:2066   */\n  0x01\n    /* \"#utility.yul\":2060:2723   */\n  dup2\n  eq\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2767:2768   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup5\n    /* \"#utility.yul\":2781:2870   */\n  iszero\n  tag_49\n  jumpi\n  pop\n    /* \"#utility.yul\":2836:2855   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2830:2856   */\n  mload\n    /* \"#utility.yul\":2781:2870   */\ntag_49:\n  not(0x00)\n    /* \"#utility.yul\":1585:1586   */\n  0x03\n    /* \"#utility.yul\":1581:1592   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1577:1601   */\n  shr\n    /* \"#utility.yul\":1573:1602   */\n  not\n    /* \"#utility.yul\":1563:1603   */\n  and\n    /* \"#utility.yul\":1609:1610   */\n  0x01\n    /* \"#utility.yul\":1605:1616   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1560:1617   */\n  or\n    /* \"#utility.yul\":2883:2964   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2030:2974   */\n  jump(tag_40)\n    /* \"#utility.yul\":2060:2723   */\ntag_48:\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:861   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":891:895   */\n  0x20\n    /* \"#utility.yul\":878:896   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2096:2116   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2214:2450   */\ntag_52:\n    /* \"#utility.yul\":2228:2235   */\n  dup3\n    /* \"#utility.yul\":2225:2226   */\n  dup2\n    /* \"#utility.yul\":2222:2236   */\n  lt\n    /* \"#utility.yul\":2214:2450   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":2317:2336   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2311:2337   */\n  mload\n    /* \"#utility.yul\":2296:2338   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2409:2436   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2377:2378   */\n  0x01\n    /* \"#utility.yul\":2365:2379   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2244:2263   */\n  dup5\n  add\n    /* \"#utility.yul\":2214:2450   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":2218:2221   */\n  pop\n    /* \"#utility.yul\":2478:2484   */\n  dup6\n    /* \"#utility.yul\":2469:2476   */\n  dup3\n    /* \"#utility.yul\":2466:2485   */\n  lt\n    /* \"#utility.yul\":2463:2664   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2539:2558   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2533:2559   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2622:2623   */\n  0x03\n    /* \"#utility.yul\":2618:2632   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2634:2637   */\n  0xf8\n    /* \"#utility.yul\":2614:2638   */\n  and\n    /* \"#utility.yul\":2610:2647   */\n  shr\n    /* \"#utility.yul\":2606:2648   */\n  not\n    /* \"#utility.yul\":2591:2649   */\n  and\n    /* \"#utility.yul\":2576:2650   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2463:2664   */\ntag_55:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2710:2711   */\n  0x01\n    /* \"#utility.yul\":2694:2708   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2690:2712   */\n  add\n    /* \"#utility.yul\":2677:2713   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1628:2980   */\n  jump\t// out\n    /* \"#utility.yul\":2985:3207   */\ntag_18:\n    /* \"#utility.yul\":3050:3059   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3071:3081   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3068:3201   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3123:3133   */\n  0x4e487b71\n    /* \"#utility.yul\":3118:3121   */\n  0xe0\n    /* \"#utility.yul\":3114:3134   */\n  shl\n    /* \"#utility.yul\":3111:3112   */\n  0x00\n    /* \"#utility.yul\":3104:3135   */\n  mstore\n    /* \"#utility.yul\":3158:3162   */\n  0x11\n    /* \"#utility.yul\":3155:3156   */\n  0x04\n    /* \"#utility.yul\":3148:3163   */\n  mstore\n    /* \"#utility.yul\":3186:3190   */\n  0x24\n    /* \"#utility.yul\":3183:3184   */\n  0x00\n    /* \"#utility.yul\":3176:3191   */\n  revert\n    /* \"#utility.yul\":3068:3201   */\ntag_57:\n    /* \"#utility.yul\":2985:3207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_27:\n    /* \"contracts/maximus.sol\":1057:6782  contract MyToken is ERC20, ERC20Burnable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/maximus.sol\":1057:6782  contract MyToken is ERC20, ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xdb141222\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xdb141222\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xe7644fb9\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xba777bcc\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd2dea365\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd720d871\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x88b022c6\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x88b022c6\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x751279b9\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x79f82bde\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x39509351\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x488b4783\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x488b4783\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4953a509\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x669d751e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4537523c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x46cbbe9e\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x18160ddd\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2b11551a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x2c1a9e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x037c3f5d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/maximus.sol\":2399:2749  function percent(uint numerator, uint denominator, uint precision) public view returns(uint quotient) {... */\n    tag_3:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n        /* \"#utility.yul\":481:506   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":469:471   */\n      0x20\n        /* \"#utility.yul\":454:472   */\n      add\n        /* \"contracts/maximus.sol\":2399:2749  function percent(uint numerator, uint denominator, uint precision) public view returns(uint quotient) {... */\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/maximus.sol\":3134:3224  function getMintingPhaseEndDay() public view returns (uint256) {return MINTING_PHASE_END;} */\n    tag_4:\n        /* \"contracts/maximus.sol\":3205:3222  MINTING_PHASE_END */\n      sload(0x07)\n        /* \"contracts/maximus.sol\":3134:3224  function getMintingPhaseEndDay() public view returns (uint256) {return MINTING_PHASE_END;} */\n      jump(tag_42)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n        /* \"#utility.yul\":1672:1686   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1665:1687   */\n      iszero\n        /* \"#utility.yul\":1647:1688   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1635:1637   */\n      0x20\n        /* \"#utility.yul\":1620:1638   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_46\n        /* \"#utility.yul\":1507:1694   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3335  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3316:3328  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3335  function totalSupply() public view virtual override returns (uint256) {... */\n      jump(tag_42)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n    tag_8:\n      tag_55\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n        /* \"contracts/maximus.sol\":3493:3577  function getRedemptionRate() public view returns (uint256) {return REDEMPTION_RATE;} */\n    tag_9:\n        /* \"contracts/maximus.sol\":3560:3575  REDEMPTION_RATE */\n      sload(0x0b)\n        /* \"contracts/maximus.sol\":3493:3577  function getRedemptionRate() public view returns (uint256) {return REDEMPTION_RATE;} */\n      jump(tag_42)\n        /* \"contracts/maximus.sol\":1747:1879  function decimals() public view override returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"contracts/maximus.sol\":1874:1875  8 */\n      0x08\n        /* \"#utility.yul\":2174:2210   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2162:2164   */\n      0x20\n        /* \"#utility.yul\":2147:2165   */\n      add\n        /* \"contracts/maximus.sol\":1747:1879  function decimals() public view override returns (uint8) {... */\n      tag_46\n        /* \"#utility.yul\":2032:2216   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5744:5956  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_55\n      tag_77\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":563:652  function burn(uint256 amount) public virtual {... */\n    tag_12:\n      tag_80\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/maximus.sol\":4172:4596  function pledgeHEX(uint256 amount) public {... */\n    tag_13:\n      tag_80\n      tag_85\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"contracts/maximus.sol\":3582:3703  function get_hex_day() public view returns (uint256){... */\n    tag_14:\n      tag_42\n      tag_88\n      jump\t// in\n        /* \"contracts/maximus.sol\":3035:3129  function getMintingPhaseStartDay() public view returns (uint256) {return MINTING_PHASE_START;} */\n    tag_15:\n        /* \"contracts/maximus.sol\":3108:3127  MINTING_PHASE_START */\n      sload(0x06)\n        /* \"contracts/maximus.sol\":3035:3129  function getMintingPhaseStartDay() public view returns (uint256) {return MINTING_PHASE_START;} */\n      jump(tag_42)\n        /* \"contracts/maximus.sol\":6129:6769  function endStakeHEX(uint256 stakeIndex,uint40 stakeIdParam ) public {... */\n    tag_16:\n      tag_80\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n        /* \"contracts/maximus.sol\":3708:3807  function getBalanceHEX() public view returns (uint256) {return hex_contract.balanceOf(msg.sender);} */\n    tag_17:\n      tag_42\n      tag_98\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3393:3518  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_18:\n      tag_42\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3511  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3467:3474  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3511  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3393:3518  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      tag_80\n      tag_106\n      jump\t// in\n        /* \"contracts/maximus.sol\":3318:3397  function getStakeEndDay() public view returns (uint256) {return STAKE_END_DAY;} */\n    tag_20:\n        /* \"contracts/maximus.sol\":3382:3395  STAKE_END_DAY */\n      sload(0x0a)\n        /* \"contracts/maximus.sol\":3318:3397  function getStakeEndDay() public view returns (uint256) {return STAKE_END_DAY;} */\n      jump(tag_42)\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":958:1319  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_21:\n      tag_80\n      tag_111\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n        /* \"contracts/maximus.sol\":3936:4051  function getNumStake() public view returns(uint256) {... */\n    tag_22:\n      tag_42\n      tag_114\n      jump\t// in\n        /* \"contracts/maximus.sol\":3407:3488  function hasStakeStarted() public view returns (bool) {return HAS_STAKE_STARTED;} */\n    tag_23:\n        /* \"contracts/maximus.sol\":3469:3486  HAS_STAKE_STARTED */\n      and(0xff, sload(0x08))\n        /* \"contracts/maximus.sol\":3407:3488  function hasStakeStarted() public view returns (bool) {return HAS_STAKE_STARTED;} */\n      jump(tag_55)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3094:3145   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x20\n        /* \"#utility.yul\":3067:3085   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      tag_46\n        /* \"#utility.yul\":2948:3151   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2352:2454  function symbol() public view virtual override returns (string memory) {... */\n    tag_25:\n      tag_51\n      tag_124\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_26:\n      tag_55\n      tag_127\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3893  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_27:\n      tag_55\n      tag_131\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n        /* \"contracts/maximus.sol\":5267:5868  function stakeHEX() public {... */\n    tag_28:\n      tag_80\n      tag_135\n      jump\t// in\n        /* \"contracts/maximus.sol\":1884:2111  function get_amount_redeem_hex(uint amt) public view returns (uint256){... */\n    tag_29:\n      tag_42\n      tag_137\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n        /* \"contracts/maximus.sol\":3812:3931  function getAllowanceHEX() public view returns (uint256) {return hex_contract.allowance(msg.sender, CONTRACT_ADDRESS);} */\n    tag_30:\n      tag_42\n      tag_141\n      jump\t// in\n        /* \"contracts/maximus.sol\":3230:3313  function getStakeStartDay() public view returns (uint256) {return STAKE_START_DAY;} */\n    tag_31:\n        /* \"contracts/maximus.sol\":3296:3311  STAKE_START_DAY */\n      sload(0x09)\n        /* \"contracts/maximus.sol\":3230:3313  function getStakeStartDay() public view returns (uint256) {return STAKE_START_DAY;} */\n      jump(tag_42)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3951:4100  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_32:\n      tag_42\n      tag_147\n      calldatasize\n      0x04\n      tag_148\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4040:4047  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4077  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4093  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3951:4100  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/maximus.sol\":4601:5022  function redeemHEX(uint256 amount_MAXI) public {... */\n    tag_33:\n      tag_80\n      tag_152\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n      tag_80\n      tag_155\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n        /* \"contracts/maximus.sol\":2399:2749  function percent(uint numerator, uint denominator, uint precision) public view returns(uint quotient) {... */\n    tag_45:\n        /* \"contracts/maximus.sol\":2486:2499  uint quotient */\n      0x00\n      dup1\n        /* \"contracts/maximus.sol\":2599:2610  precision+1 */\n      tag_158\n        /* \"contracts/maximus.sol\":2599:2608  precision */\n      dup4\n        /* \"contracts/maximus.sol\":2609:2610  1 */\n      0x01\n        /* \"contracts/maximus.sol\":2599:2610  precision+1 */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"contracts/maximus.sol\":2592:2611  10 ** (precision+1) */\n      tag_160\n      swap1\n        /* \"contracts/maximus.sol\":2592:2594  10 */\n      0x0a\n        /* \"contracts/maximus.sol\":2592:2611  10 ** (precision+1) */\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"contracts/maximus.sol\":2580:2611  numerator * 10 ** (precision+1) */\n      tag_162\n      swap1\n        /* \"contracts/maximus.sol\":2580:2589  numerator */\n      dup7\n        /* \"contracts/maximus.sol\":2580:2611  numerator * 10 ** (precision+1) */\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"contracts/maximus.sol\":2561:2611  uint _numerator  = numerator * 10 ** (precision+1) */\n      swap1\n      pop\n        /* \"contracts/maximus.sol\":2660:2674  uint _quotient */\n      0x00\n        /* \"contracts/maximus.sol\":2713:2715  10 */\n      0x0a\n        /* \"contracts/maximus.sol\":2680:2704  _numerator / denominator */\n      tag_164\n        /* \"contracts/maximus.sol\":2693:2704  denominator */\n      dup7\n        /* \"contracts/maximus.sol\":2561:2611  uint _numerator  = numerator * 10 ** (precision+1) */\n      dup5\n        /* \"contracts/maximus.sol\":2680:2704  _numerator / denominator */\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"contracts/maximus.sol\":2679:2709  (_numerator / denominator) + 5 */\n      tag_166\n      swap1\n        /* \"contracts/maximus.sol\":2708:2709  5 */\n      0x05\n        /* \"contracts/maximus.sol\":2679:2709  (_numerator / denominator) + 5 */\n      tag_159\n      jump\t// in\n    tag_166:\n        /* \"contracts/maximus.sol\":2678:2715  ((_numerator / denominator) + 5) / 10 */\n      tag_167\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_167:\n        /* \"contracts/maximus.sol\":2660:2715  uint _quotient =  ((_numerator / denominator) + 5) / 10 */\n      swap7\n        /* \"contracts/maximus.sol\":2399:2749  function percent(uint numerator, uint denominator, uint precision) public view returns(uint quotient) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2195:2208  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2227:2232  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2220:2232  return _name */\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_172\n      swap1\n      tag_171\n      jump\t// in\n    tag_172:\n      dup1\n      iszero\n      tag_173\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_174\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_173)\n    tag_174:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_175:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_175\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4321:4325  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4376  _approve(_msgSender(), spender, amount) */\n      tag_177\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4360:4367  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4369:4375  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4345  _approve */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4376  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_177:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4393:4397  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_176:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5007:5011  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5059  _transfer(sender, recipient, amount) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5033:5039  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5041:5050  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5052:5058  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5032  _transfer */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5059  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5070:5094  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5108  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5130  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5148:5174  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6039:6041   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6021:6042   */\n      mstore\n        /* \"#utility.yul\":6078:6080   */\n      0x28\n        /* \"#utility.yul\":6058:6076   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6051:6081   */\n      mstore\n        /* \"#utility.yul\":6117:6151   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":6097:6115   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6090:6152   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":6168:6186   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6161:6199   */\n      mstore\n        /* \"#utility.yul\":6216:6235   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5310  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5262:5268  sender */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5303:5309  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5284:5300  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5284:5309  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5261  _approve */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5310  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_189:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5338:5342  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5744:5956  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5832:5836  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5905  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5891  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5905  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5914  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5832:5836  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5928  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_177\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:5878  spender */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5927  _allowances[_msgSender()][spender] + addedValue */\n      tag_197\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5917:5927  addedValue */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5927  _allowances[_msgSender()][spender] + addedValue */\n      tag_159\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5856  _approve */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5928  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":563:652  function burn(uint256 amount) public virtual {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:645  _burn(_msgSender(), amount) */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":638:644  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:623  _burn */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:645  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":563:652  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/maximus.sol\":4172:4596  function pledgeHEX(uint256 amount) public {... */\n    tag_86:\n        /* \"contracts/maximus.sol\":4268:4285  MINTING_PHASE_END */\n      sload(0x07)\n        /* \"contracts/maximus.sol\":4241:4252  HEX_ADDRESS */\n      0x0f\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":4232:4264  HEXToken(HEX_ADDRESS).currentDay */\n      and\n      0x5c9302c9\n        /* \"contracts/maximus.sol\":4232:4266  HEXToken(HEX_ADDRESS).currentDay() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_204\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_204:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"contracts/maximus.sol\":4232:4285  HEXToken(HEX_ADDRESS).currentDay()<=MINTING_PHASE_END */\n      gt\n      iszero\n        /* \"contracts/maximus.sol\":4224:4311  require(HEXToken(HEX_ADDRESS).currentDay()<=MINTING_PHASE_END, \"Minting Phase is Done\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6637:6639   */\n      0x20\n        /* \"contracts/maximus.sol\":4224:4311  require(HEXToken(HEX_ADDRESS).currentDay()<=MINTING_PHASE_END, \"Minting Phase is Done\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6619:6640   */\n      mstore\n        /* \"#utility.yul\":6676:6678   */\n      0x15\n        /* \"#utility.yul\":6656:6674   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6649:6679   */\n      mstore\n      shl(0x58, 0x4d696e74696e6720506861736520697320446f6e65)\n        /* \"#utility.yul\":6695:6713   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6688:6739   */\n      mstore\n        /* \"#utility.yul\":6756:6774   */\n      0x64\n      add\n        /* \"contracts/maximus.sol\":4224:4311  require(HEXToken(HEX_ADDRESS).currentDay()<=MINTING_PHASE_END, \"Minting Phase is Done\") */\n      tag_187\n        /* \"#utility.yul\":6435:6780   */\n      jump\n        /* \"contracts/maximus.sol\":4224:4311  require(HEXToken(HEX_ADDRESS).currentDay()<=MINTING_PHASE_END, \"Minting Phase is Done\") */\n    tag_207:\n        /* \"contracts/maximus.sol\":4329:4341  hex_contract */\n      sload(0x10)\n        /* \"contracts/maximus.sol\":4364:4380  CONTRACT_ADDRESS */\n      sload(0x0e)\n        /* \"contracts/maximus.sol\":4329:4381  hex_contract.allowance(msg.sender, CONTRACT_ADDRESS) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"contracts/maximus.sol\":4352:4362  msg.sender */\n      caller\n        /* \"contracts/maximus.sol\":4329:4381  hex_contract.allowance(msg.sender, CONTRACT_ADDRESS) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6997:7031   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":4364:4380  CONTRACT_ADDRESS */\n      swap2\n      dup3\n      and\n        /* \"#utility.yul\":7047:7065   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7040:7083   */\n      mstore\n        /* \"contracts/maximus.sol\":4383:4389  amount */\n      dup4\n      swap3\n        /* \"contracts/maximus.sol\":4329:4341  hex_contract */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/maximus.sol\":4329:4351  hex_contract.allowance */\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":6932:6950   */\n      0x44\n      add\n        /* \"contracts/maximus.sol\":4329:4381  hex_contract.allowance(msg.sender, CONTRACT_ADDRESS) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_214\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_214:\n        /* \"contracts/maximus.sol\":4329:4389  hex_contract.allowance(msg.sender, CONTRACT_ADDRESS)>=amount */\n      lt\n      iszero\n        /* \"contracts/maximus.sol\":4321:4465  require(hex_contract.allowance(msg.sender, CONTRACT_ADDRESS)>=amount, \"Please approve contract address as allowed spender in the hex contract.\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7296:7298   */\n      0x20\n        /* \"contracts/maximus.sol\":4321:4465  require(hex_contract.allowance(msg.sender, CONTRACT_ADDRESS)>=amount, \"Please approve contract address as allowed spender in the hex contract.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7278:7299   */\n      mstore\n        /* \"#utility.yul\":7335:7337   */\n      0x47\n        /* \"#utility.yul\":7315:7333   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7308:7338   */\n      mstore\n        /* \"#utility.yul\":7374:7408   */\n      0x506c6561736520617070726f766520636f6e7472616374206164647265737320\n        /* \"#utility.yul\":7354:7372   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7347:7409   */\n      mstore\n        /* \"#utility.yul\":7445:7479   */\n      0x617320616c6c6f776564207370656e64657220696e207468652068657820636f\n        /* \"#utility.yul\":7425:7443   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7418:7480   */\n      mstore\n      shl(0xc9, 0x373a3930b1ba17)\n        /* \"#utility.yul\":7496:7515   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":7489:7527   */\n      mstore\n        /* \"#utility.yul\":7544:7563   */\n      0xa4\n      add\n        /* \"contracts/maximus.sol\":4321:4465  require(hex_contract.allowance(msg.sender, CONTRACT_ADDRESS)>=amount, \"Please approve contract address as allowed spender in the hex contract.\") */\n      tag_187\n        /* \"#utility.yul\":7094:7569   */\n      jump\n        /* \"contracts/maximus.sol\":4321:4465  require(hex_contract.allowance(msg.sender, CONTRACT_ADDRESS)>=amount, \"Please approve contract address as allowed spender in the hex contract.\") */\n    tag_215:\n        /* \"contracts/maximus.sol\":4510:4522  hex_contract */\n      sload(0x10)\n        /* \"contracts/maximus.sol\":4542:4558  CONTRACT_ADDRESS */\n      sload(0x0e)\n        /* \"contracts/maximus.sol\":4510:4567  hex_contract.transferFrom(from, CONTRACT_ADDRESS, amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/maximus.sol\":4490:4500  msg.sender */\n      caller\n        /* \"contracts/maximus.sol\":4510:4567  hex_contract.transferFrom(from, CONTRACT_ADDRESS, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7814:7848   */\n      dup2\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":4542:4558  CONTRACT_ADDRESS */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":7864:7882   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":7857:7900   */\n      mstore\n        /* \"#utility.yul\":7916:7934   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7909:7943   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/maximus.sol\":4490:4500  msg.sender */\n      swap3\n        /* \"contracts/maximus.sol\":4510:4522  hex_contract */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/maximus.sol\":4510:4535  hex_contract.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":7749:7767   */\n      0x64\n      add\n        /* \"contracts/maximus.sol\":4510:4567  hex_contract.transferFrom(from, CONTRACT_ADDRESS, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_221:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_222\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      pop\n        /* \"contracts/maximus.sol\":4577:4589  mint(amount) */\n      tag_224\n        /* \"contracts/maximus.sol\":4582:4588  amount */\n      dup3\n        /* \"contracts/maximus.sol\":4577:4581  mint */\n      tag_225\n        /* \"contracts/maximus.sol\":4577:4589  mint(amount) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/maximus.sol\":4214:4596  {... */\n      pop\n        /* \"contracts/maximus.sol\":4172:4596  function pledgeHEX(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/maximus.sol\":3582:3703  function get_hex_day() public view returns (uint256){... */\n    tag_88:\n        /* \"contracts/maximus.sol\":3626:3633  uint256 */\n      0x00\n        /* \"contracts/maximus.sol\":3644:3655  uint256 day */\n      dup1\n        /* \"contracts/maximus.sol\":3658:3663  token */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":3658:3674  token.currentDay */\n      and\n      0x5c9302c9\n        /* \"contracts/maximus.sol\":3658:3676  token.currentDay() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n        /* \"contracts/maximus.sol\":6129:6769  function endStakeHEX(uint256 stakeIndex,uint40 stakeIdParam ) public {... */\n    tag_96:\n        /* \"contracts/maximus.sol\":6344:6357  STAKE_END_DAY */\n      sload(0x0a)\n        /* \"contracts/maximus.sol\":6318:6329  HEX_ADDRESS */\n      0x0f\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":6309:6341  HEXToken(HEX_ADDRESS).currentDay */\n      and\n      0x5c9302c9\n        /* \"contracts/maximus.sol\":6309:6343  HEXToken(HEX_ADDRESS).currentDay() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_233\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_233:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_234\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_234:\n        /* \"contracts/maximus.sol\":6309:6357  HEXToken(HEX_ADDRESS).currentDay()>STAKE_END_DAY */\n      gt\n        /* \"contracts/maximus.sol\":6301:6388  require(HEXToken(HEX_ADDRESS).currentDay()>STAKE_END_DAY, \"Stake is not complete yet.\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8438:8440   */\n      0x20\n        /* \"contracts/maximus.sol\":6301:6388  require(HEXToken(HEX_ADDRESS).currentDay()>STAKE_END_DAY, \"Stake is not complete yet.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8420:8441   */\n      mstore\n        /* \"#utility.yul\":8477:8479   */\n      0x1a\n        /* \"#utility.yul\":8457:8475   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8450:8480   */\n      mstore\n        /* \"#utility.yul\":8516:8544   */\n      0x5374616b65206973206e6f7420636f6d706c657465207965742e000000000000\n        /* \"#utility.yul\":8496:8514   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8489:8545   */\n      mstore\n        /* \"#utility.yul\":8562:8580   */\n      0x64\n      add\n        /* \"contracts/maximus.sol\":6301:6388  require(HEXToken(HEX_ADDRESS).currentDay()>STAKE_END_DAY, \"Stake is not complete yet.\") */\n      tag_187\n        /* \"#utility.yul\":8236:8586   */\n      jump\n        /* \"contracts/maximus.sol\":6301:6388  require(HEXToken(HEX_ADDRESS).currentDay()>STAKE_END_DAY, \"Stake is not complete yet.\") */\n    tag_235:\n        /* \"contracts/maximus.sol\":6406:6423  HAS_STAKE_STARTED */\n      and(0xff, sload(0x08))\n        /* \"contracts/maximus.sol\":6406:6429  HAS_STAKE_STARTED==true */\n      iszero\n      iszero\n        /* \"contracts/maximus.sol\":6406:6423  HAS_STAKE_STARTED */\n      0x01\n        /* \"contracts/maximus.sol\":6406:6429  HAS_STAKE_STARTED==true */\n      eq\n        /* \"contracts/maximus.sol\":6406:6455  HAS_STAKE_STARTED==true && HAS_STAKE_ENDED==false */\n      dup1\n      iszero\n      tag_238\n      jumpi\n      pop\n        /* \"contracts/maximus.sol\":6433:6448  HAS_STAKE_ENDED */\n      sload(0x08)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/maximus.sol\":6433:6455  HAS_STAKE_ENDED==false */\n      iszero\n        /* \"contracts/maximus.sol\":6406:6455  HAS_STAKE_STARTED==true && HAS_STAKE_ENDED==false */\n    tag_238:\n        /* \"contracts/maximus.sol\":6398:6491  require(HAS_STAKE_STARTED==true && HAS_STAKE_ENDED==false, \"Stake has already been started.\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8793:8795   */\n      0x20\n        /* \"contracts/maximus.sol\":6398:6491  require(HAS_STAKE_STARTED==true && HAS_STAKE_ENDED==false, \"Stake has already been started.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8775:8796   */\n      mstore\n        /* \"#utility.yul\":8832:8834   */\n      0x1f\n        /* \"#utility.yul\":8812:8830   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8805:8835   */\n      mstore\n        /* \"#utility.yul\":8871:8904   */\n      0x5374616b652068617320616c7265616479206265656e20737461727465642e00\n        /* \"#utility.yul\":8851:8869   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8844:8905   */\n      mstore\n        /* \"#utility.yul\":8922:8940   */\n      0x64\n      add\n        /* \"contracts/maximus.sol\":6398:6491  require(HAS_STAKE_STARTED==true && HAS_STAKE_ENDED==false, \"Stake has already been started.\") */\n      tag_187\n        /* \"#utility.yul\":8591:8946   */\n      jump\n        /* \"contracts/maximus.sol\":6398:6491  require(HAS_STAKE_STARTED==true && HAS_STAKE_ENDED==false, \"Stake has already been started.\") */\n    tag_239:\n        /* \"contracts/maximus.sol\":6501:6539  _endStakeHEX(stakeIndex, stakeIdParam) */\n      tag_242\n        /* \"contracts/maximus.sol\":6514:6524  stakeIndex */\n      dup3\n        /* \"contracts/maximus.sol\":6526:6538  stakeIdParam */\n      dup3\n        /* \"contracts/maximus.sol\":6501:6513  _endStakeHEX */\n      tag_243\n        /* \"contracts/maximus.sol\":6501:6539  _endStakeHEX(stakeIndex, stakeIdParam) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/maximus.sol\":6549:6564  HAS_STAKE_ENDED */\n      0x08\n        /* \"contracts/maximus.sol\":6549:6569  HAS_STAKE_ENDED=true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"contracts/maximus.sol\":6601:6613  hex_contract */\n      sload(0x10)\n        /* \"contracts/maximus.sol\":6601:6638  hex_contract.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/maximus.sol\":6632:6636  this */\n      address\n        /* \"contracts/maximus.sol\":6601:6638  hex_contract.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3094:3145   */\n      mstore\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":6601:6613  hex_contract */\n      and\n      swap1\n        /* \"contracts/maximus.sol\":6601:6623  hex_contract.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3067:3085   */\n      0x24\n      add\n        /* \"contracts/maximus.sol\":6601:6638  hex_contract.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_246\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_246:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_247\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_247:\n        /* \"contracts/maximus.sol\":6579:6638  uint256 hex_balance = hex_contract.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/maximus.sol\":6648:6666  uint256 total_maxi */\n      0x00\n        /* \"contracts/maximus.sol\":6684:6688  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":6669:6702  IERC20(address(this)).totalSupply */\n      and\n      0x18160ddd\n        /* \"contracts/maximus.sol\":6669:6704  IERC20(address(this)).totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_249:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_250\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_250:\n        /* \"contracts/maximus.sol\":6648:6704  uint256 total_maxi = IERC20(address(this)).totalSupply() */\n      swap1\n      pop\n        /* \"contracts/maximus.sol\":6732:6753  get_redemption_rate() */\n      tag_251\n        /* \"contracts/maximus.sol\":6732:6751  get_redemption_rate */\n      tag_252\n        /* \"contracts/maximus.sol\":6732:6753  get_redemption_rate() */\n      jump\t// in\n    tag_251:\n        /* \"contracts/maximus.sol\":6714:6729  REDEMPTION_RATE */\n      0x0b\n        /* \"contracts/maximus.sol\":6714:6753  REDEMPTION_RATE = get_redemption_rate() */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/maximus.sol\":6129:6769  function endStakeHEX(uint256 stakeIndex,uint40 stakeIdParam ) public {... */\n      jump\t// out\n        /* \"contracts/maximus.sol\":3708:3807  function getBalanceHEX() public view returns (uint256) {return hex_contract.balanceOf(msg.sender);} */\n    tag_98:\n        /* \"contracts/maximus.sol\":3771:3783  hex_contract */\n      sload(0x10)\n        /* \"contracts/maximus.sol\":3771:3805  hex_contract.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/maximus.sol\":3794:3804  msg.sender */\n      caller\n        /* \"contracts/maximus.sol\":3771:3805  hex_contract.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3094:3145   */\n      mstore\n        /* \"contracts/maximus.sol\":3754:3761  uint256 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":3771:3783  hex_contract */\n      and\n      swap1\n        /* \"contracts/maximus.sol\":3771:3793  hex_contract.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3067:3085   */\n      0x24\n      add\n        /* \"contracts/maximus.sol\":3771:3805  hex_contract.balanceOf(msg.sender) */\n    tag_254:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_256:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_257\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_257:\n        /* \"contracts/maximus.sol\":3764:3805  return hex_contract.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/maximus.sol\":3708:3807  function getBalanceHEX() public view returns (uint256) {return hex_contract.balanceOf(msg.sender);} */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9153:9155   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9135:9156   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9172:9190   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9165:9195   */\n      mstore\n        /* \"#utility.yul\":9231:9265   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9211:9229   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9204:9266   */\n      mstore\n        /* \"#utility.yul\":9283:9301   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_187\n        /* \"#utility.yul\":8951:9307   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_262:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":958:1319  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1034:1058  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1061:1093  allowance(account, _msgSender()) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1071:1078  account */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3951:4100  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      tag_147\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1061:1093  allowance(account, _msgSender()) */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1034:1093  uint256 currentAllowance = allowance(account, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1131:1137  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1111:1127  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1111:1137  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1103:1178  require(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9514:9516   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1103:1178  require(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9496:9517   */\n      mstore\n        /* \"#utility.yul\":9553:9555   */\n      0x24\n        /* \"#utility.yul\":9533:9551   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9526:9556   */\n      mstore\n        /* \"#utility.yul\":9592:9626   */\n      0x45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77\n        /* \"#utility.yul\":9572:9590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9565:9627   */\n      mstore\n      shl(0xe0, 0x616e6365)\n        /* \"#utility.yul\":9643:9661   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9636:9670   */\n      mstore\n        /* \"#utility.yul\":9687:9706   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1103:1178  require(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\") */\n      tag_187\n        /* \"#utility.yul\":9312:9712   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1103:1178  require(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\") */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1212:1270  _approve(account, _msgSender(), currentAllowance - amount) */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1221:1228  account */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1263:1269  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1244:1260  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1244:1269  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1212:1220  _approve */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1212:1270  _approve(account, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1290:1312  _burn(account, amount) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1296:1303  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1305:1311  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1290:1295  _burn */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1290:1312  _burn(account, amount) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1024:1319  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":958:1319  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/maximus.sol\":3936:4051  function getNumStake() public view returns(uint256) {... */\n    tag_114:\n        /* \"contracts/maximus.sol\":4009:4014  token */\n      sload(0x11)\n        /* \"contracts/maximus.sol\":4009:4040  token.stakeCount(address(this)) */\n      mload(0x40)\n      shl(0xe4, 0x033060d9)\n      dup2\n      mstore\n        /* \"contracts/maximus.sol\":4034:4038  this */\n      address\n        /* \"contracts/maximus.sol\":4009:4040  token.stakeCount(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3094:3145   */\n      mstore\n        /* \"contracts/maximus.sol\":3979:3986  uint256 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":4009:4014  token */\n      and\n      swap1\n        /* \"contracts/maximus.sol\":4009:4025  token.stakeCount */\n      0x33060d90\n      swap1\n        /* \"#utility.yul\":3067:3085   */\n      0x24\n      add\n        /* \"contracts/maximus.sol\":4009:4040  token.stakeCount(address(this)) */\n      tag_254\n        /* \"#utility.yul\":2948:3151   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2352:2454  function symbol() public view virtual override returns (string memory) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2408:2421  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2440:2447  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2433:2447  return _symbol */\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6536:6540  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6604  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6590  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6604  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6613  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6631:6666  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9919:9921   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9901:9922   */\n      mstore\n        /* \"#utility.yul\":9958:9960   */\n      0x25\n        /* \"#utility.yul\":9938:9956   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9931:9961   */\n      mstore\n        /* \"#utility.yul\":9997:10031   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":9977:9995   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9970:10032   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":10048:10066   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10041:10076   */\n      mstore\n        /* \"#utility.yul\":10093:10112   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_187\n        /* \"#utility.yul\":9717:10118   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6809  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_296\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6765:6772  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6793:6808  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6774:6790  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6774:6808  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6750  _approve */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6809  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_296:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6837:6841  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3893  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3807:3811  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3865  _transfer(_msgSender(), recipient, amount) */\n      tag_177\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3847:3856  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3858:3864  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3832  _transfer */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3865  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/maximus.sol\":5267:5868  function stakeHEX() public {... */\n    tag_135:\n        /* \"contracts/maximus.sol\":5312:5329  HAS_STAKE_STARTED */\n      and(0xff, sload(0x08))\n        /* \"contracts/maximus.sol\":5312:5336  HAS_STAKE_STARTED==false */\n      iszero\n        /* \"contracts/maximus.sol\":5304:5372  require(HAS_STAKE_STARTED==false, \"Stake has already been started.\") */\n      tag_302\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8793:8795   */\n      0x20\n        /* \"contracts/maximus.sol\":5304:5372  require(HAS_STAKE_STARTED==false, \"Stake has already been started.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8775:8796   */\n      mstore\n        /* \"#utility.yul\":8832:8834   */\n      0x1f\n        /* \"#utility.yul\":8812:8830   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8805:8835   */\n      mstore\n        /* \"#utility.yul\":8871:8904   */\n      0x5374616b652068617320616c7265616479206265656e20737461727465642e00\n        /* \"#utility.yul\":8851:8869   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8844:8905   */\n      mstore\n        /* \"#utility.yul\":8922:8940   */\n      0x64\n      add\n        /* \"contracts/maximus.sol\":5304:5372  require(HAS_STAKE_STARTED==false, \"Stake has already been started.\") */\n      tag_187\n        /* \"#utility.yul\":8591:8946   */\n      jump\n        /* \"contracts/maximus.sol\":5304:5372  require(HAS_STAKE_STARTED==false, \"Stake has already been started.\") */\n    tag_302:\n        /* \"contracts/maximus.sol\":5413:5424  HEX_ADDRESS */\n      sload(0x0f)\n        /* \"contracts/maximus.sol\":5404:5438  HEXToken(HEX_ADDRESS).currentDay() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x5c9302c9)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/maximus.sol\":5382:5401  uint256 current_day */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":5413:5424  HEX_ADDRESS */\n      and\n      swap2\n        /* \"contracts/maximus.sol\":5404:5436  HEXToken(HEX_ADDRESS).currentDay */\n      0x5c9302c9\n      swap2\n        /* \"contracts/maximus.sol\":5404:5438  HEXToken(HEX_ADDRESS).currentDay() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/maximus.sol\":5413:5424  HEX_ADDRESS */\n      dup7\n        /* \"contracts/maximus.sol\":5404:5438  HEXToken(HEX_ADDRESS).currentDay() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_305\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_305:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_306\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_306:\n        /* \"contracts/maximus.sol\":5382:5438  uint256 current_day = HEXToken(HEX_ADDRESS).currentDay() */\n      swap1\n      pop\n        /* \"contracts/maximus.sol\":5468:5485  MINTING_PHASE_END */\n      sload(0x07)\n        /* \"contracts/maximus.sol\":5456:5467  current_day */\n      dup2\n        /* \"contracts/maximus.sol\":5456:5485  current_day>MINTING_PHASE_END */\n      gt\n        /* \"contracts/maximus.sol\":5448:5549  require(current_day>MINTING_PHASE_END, \"Minting Phase is still ongoing - see MINTING_PHASE_END day.\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10325:10327   */\n      0x20\n        /* \"contracts/maximus.sol\":5448:5549  require(current_day>MINTING_PHASE_END, \"Minting Phase is still ongoing - see MINTING_PHASE_END day.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10307:10328   */\n      mstore\n        /* \"#utility.yul\":10364:10366   */\n      0x3b\n        /* \"#utility.yul\":10344:10362   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10337:10367   */\n      mstore\n        /* \"#utility.yul\":10403:10437   */\n      0x4d696e74696e67205068617365206973207374696c6c206f6e676f696e67202d\n        /* \"#utility.yul\":10383:10401   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10376:10438   */\n      mstore\n        /* \"#utility.yul\":10474:10503   */\n      0x20736565204d494e54494e475f50484153455f454e44206461792e0000000000\n        /* \"#utility.yul\":10454:10472   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10447:10504   */\n      mstore\n        /* \"#utility.yul\":10521:10540   */\n      0x84\n      add\n        /* \"contracts/maximus.sol\":5448:5549  require(current_day>MINTING_PHASE_END, \"Minting Phase is still ongoing - see MINTING_PHASE_END day.\") */\n      tag_187\n        /* \"#utility.yul\":10123:10546   */\n      jump\n        /* \"contracts/maximus.sol\":5448:5549  require(current_day>MINTING_PHASE_END, \"Minting Phase is still ongoing - see MINTING_PHASE_END day.\") */\n    tag_307:\n        /* \"contracts/maximus.sol\":5576:5588  hex_contract */\n      sload(0x10)\n        /* \"contracts/maximus.sol\":5576:5613  hex_contract.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/maximus.sol\":5607:5611  this */\n      address\n        /* \"contracts/maximus.sol\":5576:5613  hex_contract.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3094:3145   */\n      mstore\n        /* \"contracts/maximus.sol\":5559:5573  uint256 amount */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":5576:5588  hex_contract */\n      and\n      swap1\n        /* \"contracts/maximus.sol\":5576:5598  hex_contract.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3067:3085   */\n      0x24\n      add\n        /* \"contracts/maximus.sol\":5576:5613  hex_contract.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_312\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_312:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_313\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_313:\n        /* \"contracts/maximus.sol\":5559:5613  uint256 amount = hex_contract.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/maximus.sol\":5727:5744  _stakeHEX(amount) */\n      tag_314\n        /* \"contracts/maximus.sol\":5737:5743  amount */\n      dup2\n        /* \"contracts/maximus.sol\":5727:5736  _stakeHEX */\n      tag_315\n        /* \"contracts/maximus.sol\":5727:5744  _stakeHEX(amount) */\n      jump\t// in\n    tag_314:\n        /* \"contracts/maximus.sol\":5754:5771  HAS_STAKE_STARTED */\n      0x08\n        /* \"contracts/maximus.sol\":5754:5776  HAS_STAKE_STARTED=true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/maximus.sol\":5772:5776  true */\n      0x01\n        /* \"contracts/maximus.sol\":5754:5776  HAS_STAKE_STARTED=true */\n      or\n      swap1\n      sstore\n        /* \"contracts/maximus.sol\":5786:5801  STAKE_START_DAY */\n      0x09\n        /* \"contracts/maximus.sol\":5786:5813  STAKE_START_DAY=current_day */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/maximus.sol\":5849:5861  STAKE_LENGTH */\n      sload(0x0c)\n        /* \"contracts/maximus.sol\":5837:5861  current_day+STAKE_LENGTH */\n      tag_316\n      swap1\n        /* \"contracts/maximus.sol\":5802:5813  current_day */\n      dup4\n        /* \"contracts/maximus.sol\":5837:5861  current_day+STAKE_LENGTH */\n      tag_159\n      jump\t// in\n    tag_316:\n        /* \"contracts/maximus.sol\":5823:5836  STAKE_END_DAY */\n      0x0a\n        /* \"contracts/maximus.sol\":5823:5861  STAKE_END_DAY=current_day+STAKE_LENGTH */\n      sstore\n      pop\n      pop\n        /* \"contracts/maximus.sol\":5267:5868  function stakeHEX() public {... */\n      jump\t// out\n        /* \"contracts/maximus.sol\":1884:2111  function get_amount_redeem_hex(uint amt) public view returns (uint256){... */\n    tag_138:\n        /* \"contracts/maximus.sol\":1977:1992  REDEMPTION_RATE */\n      sload(0x0b)\n        /* \"contracts/maximus.sol\":1946:1953  uint256 */\n      0x00\n      swap1\n      dup2\n        /* \"contracts/maximus.sol\":2020:2026  amt*RR */\n      tag_318\n        /* \"contracts/maximus.sol\":1977:1992  REDEMPTION_RATE */\n      dup3\n        /* \"contracts/maximus.sol\":2020:2023  amt */\n      dup6\n        /* \"contracts/maximus.sol\":2020:2026  amt*RR */\n      tag_163\n      jump\t// in\n    tag_318:\n        /* \"contracts/maximus.sol\":2002:2026  uint256 raw_amt = amt*RR */\n      swap1\n      pop\n        /* \"contracts/maximus.sol\":2036:2051  uint256 num_hex */\n      0x00\n        /* \"contracts/maximus.sol\":2054:2080  percent(raw_amt, 10000, 4) */\n      tag_319\n        /* \"contracts/maximus.sol\":2062:2069  raw_amt */\n      dup3\n        /* \"contracts/maximus.sol\":2071:2076  10000 */\n      0x2710\n        /* \"contracts/maximus.sol\":2078:2079  4 */\n      0x04\n        /* \"contracts/maximus.sol\":2054:2061  percent */\n      tag_45\n        /* \"contracts/maximus.sol\":2054:2080  percent(raw_amt, 10000, 4) */\n      jump\t// in\n    tag_319:\n        /* \"contracts/maximus.sol\":2036:2080  uint256 num_hex = percent(raw_amt, 10000, 4) */\n      swap6\n        /* \"contracts/maximus.sol\":1884:2111  function get_amount_redeem_hex(uint amt) public view returns (uint256){... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/maximus.sol\":3812:3931  function getAllowanceHEX() public view returns (uint256) {return hex_contract.allowance(msg.sender, CONTRACT_ADDRESS);} */\n    tag_141:\n        /* \"contracts/maximus.sol\":3877:3889  hex_contract */\n      sload(0x10)\n        /* \"contracts/maximus.sol\":3912:3928  CONTRACT_ADDRESS */\n      sload(0x0e)\n        /* \"contracts/maximus.sol\":3877:3929  hex_contract.allowance(msg.sender, CONTRACT_ADDRESS) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"contracts/maximus.sol\":3900:3910  msg.sender */\n      caller\n        /* \"contracts/maximus.sol\":3877:3929  hex_contract.allowance(msg.sender, CONTRACT_ADDRESS) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6997:7031   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":3912:3928  CONTRACT_ADDRESS */\n      swap2\n      dup3\n      and\n        /* \"#utility.yul\":7047:7065   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7040:7083   */\n      mstore\n        /* \"contracts/maximus.sol\":3860:3867  uint256 */\n      0x00\n      swap3\n        /* \"contracts/maximus.sol\":3877:3889  hex_contract */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/maximus.sol\":3877:3899  hex_contract.allowance */\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":6932:6950   */\n      0x44\n      add\n        /* \"contracts/maximus.sol\":3877:3929  hex_contract.allowance(msg.sender, CONTRACT_ADDRESS) */\n      tag_254\n        /* \"#utility.yul\":6785:7089   */\n      jump\n        /* \"contracts/maximus.sol\":4601:5022  function redeemHEX(uint256 amount_MAXI) public {... */\n    tag_153:\n        /* \"contracts/maximus.sol\":4662:4679  HAS_STAKE_STARTED */\n      and(0xff, sload(0x08))\n        /* \"contracts/maximus.sol\":4662:4686  HAS_STAKE_STARTED==false */\n      iszero\n      dup1\n        /* \"contracts/maximus.sol\":4662:4711  HAS_STAKE_STARTED==false || HAS_STAKE_ENDED==true */\n      tag_328\n      jumpi\n      pop\n        /* \"contracts/maximus.sol\":4690:4705  HAS_STAKE_ENDED */\n      sload(0x08)\n      0xff\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"contracts/maximus.sol\":4690:4711  HAS_STAKE_ENDED==true */\n      iszero\n      iszero\n        /* \"contracts/maximus.sol\":4690:4705  HAS_STAKE_ENDED */\n      0x01\n        /* \"contracts/maximus.sol\":4690:4711  HAS_STAKE_ENDED==true */\n      eq\n        /* \"contracts/maximus.sol\":4662:4711  HAS_STAKE_STARTED==false || HAS_STAKE_ENDED==true */\n    tag_328:\n        /* \"contracts/maximus.sol\":4658:5016  if (HAS_STAKE_STARTED==false || HAS_STAKE_ENDED==true) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"contracts/maximus.sol\":4756:4766  msg.sender */\n      caller\n        /* \"contracts/maximus.sol\":4727:4743  uint256 yourMAXI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3511  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/maximus.sol\":4789:4810  yourMAXI>=amount_MAXI */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/maximus.sol\":4781:4846  require(yourMAXI>=amount_MAXI, \"You do not have that much MAXI.\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10753:10755   */\n      0x20\n        /* \"contracts/maximus.sol\":4781:4846  require(yourMAXI>=amount_MAXI, \"You do not have that much MAXI.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10735:10756   */\n      mstore\n        /* \"#utility.yul\":10792:10794   */\n      0x1f\n        /* \"#utility.yul\":10772:10790   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10765:10795   */\n      mstore\n        /* \"#utility.yul\":10831:10864   */\n      0x596f7520646f206e6f7420686176652074686174206d756368204d4158492e00\n        /* \"#utility.yul\":10811:10829   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10804:10865   */\n      mstore\n        /* \"#utility.yul\":10882:10900   */\n      0x64\n      add\n        /* \"contracts/maximus.sol\":4781:4846  require(yourMAXI>=amount_MAXI, \"You do not have that much MAXI.\") */\n      tag_187\n        /* \"#utility.yul\":10551:10906   */\n      jump\n        /* \"contracts/maximus.sol\":4781:4846  require(yourMAXI>=amount_MAXI, \"You do not have that much MAXI.\") */\n    tag_331:\n        /* \"contracts/maximus.sol\":4860:4885  uint256 redeemable_amount */\n      0x00\n        /* \"contracts/maximus.sol\":4900:4915  REDEMPTION_RATE */\n      sload(0x0b)\n        /* \"contracts/maximus.sol\":4888:4899  amount_MAXI */\n      dup4\n        /* \"contracts/maximus.sol\":4888:4915  amount_MAXI*REDEMPTION_RATE */\n      tag_334\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_334:\n        /* \"contracts/maximus.sol\":4860:4915  uint256 redeemable_amount = amount_MAXI*REDEMPTION_RATE */\n      swap1\n      pop\n        /* \"contracts/maximus.sol\":4929:4946  burn(amount_MAXI) */\n      tag_335\n        /* \"contracts/maximus.sol\":4934:4945  amount_MAXI */\n      dup4\n        /* \"contracts/maximus.sol\":4929:4933  burn */\n      tag_83\n        /* \"contracts/maximus.sol\":4929:4946  burn(amount_MAXI) */\n      jump\t// in\n    tag_335:\n        /* \"contracts/maximus.sol\":4960:4965  token */\n      sload(0x11)\n        /* \"contracts/maximus.sol\":4960:5005  token.transfer(msg.sender, redeemable_amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/maximus.sol\":4975:4985  msg.sender */\n      caller\n        /* \"contracts/maximus.sol\":4960:5005  token.transfer(msg.sender, redeemable_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11085:11136   */\n      mstore\n        /* \"#utility.yul\":11152:11170   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":11145:11179   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":4960:4965  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/maximus.sol\":4960:4974  token.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":11058:11076   */\n      0x44\n      add\n        /* \"contracts/maximus.sol\":4960:5005  token.transfer(msg.sender, redeemable_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_339\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_339:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_340\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_340:\n      pop\n        /* \"contracts/maximus.sol\":4713:5016  {... */\n      pop\n      pop\n        /* \"contracts/maximus.sol\":4601:5022  function redeemHEX(uint256 amount_MAXI) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9153:9155   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9135:9156   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9172:9190   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9165:9195   */\n      mstore\n        /* \"#utility.yul\":9231:9265   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9211:9229   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9204:9266   */\n      mstore\n        /* \"#utility.yul\":9283:9301   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_187\n        /* \"#utility.yul\":8951:9307   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_344:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_347\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11392:11394   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11374:11395   */\n      mstore\n        /* \"#utility.yul\":11431:11433   */\n      0x26\n        /* \"#utility.yul\":11411:11429   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11404:11434   */\n      mstore\n        /* \"#utility.yul\":11470:11504   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11450:11468   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11443:11505   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":11521:11539   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11514:11550   */\n      mstore\n        /* \"#utility.yul\":11567:11586   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_187\n        /* \"#utility.yul\":11190:11592   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_347:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10019:10389  function _approve(... */\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10150:10169  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11799:11801   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11781:11802   */\n      mstore\n        /* \"#utility.yul\":11838:11840   */\n      0x24\n        /* \"#utility.yul\":11818:11836   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11811:11841   */\n      mstore\n        /* \"#utility.yul\":11877:11911   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":11857:11875   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11850:11912   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":11928:11946   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11921:11955   */\n      mstore\n        /* \"#utility.yul\":11972:11991   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_187\n        /* \"#utility.yul\":11597:11997   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_353:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10228:10249  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_356\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12204:12206   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12186:12207   */\n      mstore\n        /* \"#utility.yul\":12243:12245   */\n      0x22\n        /* \"#utility.yul\":12223:12241   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12216:12246   */\n      mstore\n        /* \"#utility.yul\":12282:12316   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":12262:12280   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12255:12317   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":12333:12351   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12326:12358   */\n      mstore\n        /* \"#utility.yul\":12375:12394   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_187\n        /* \"#utility.yul\":12002:12400   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_356:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10317  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10310  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10317  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10326  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10335  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":481:506   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":454:472   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10019:10389  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7322:8035  function _transfer(... */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7457:7477  sender != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_361\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12607:12609   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12589:12610   */\n      mstore\n        /* \"#utility.yul\":12646:12648   */\n      0x25\n        /* \"#utility.yul\":12626:12644   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12619:12649   */\n      mstore\n        /* \"#utility.yul\":12685:12719   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":12665:12683   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12658:12720   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":12736:12754   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12729:12764   */\n      mstore\n        /* \"#utility.yul\":12781:12800   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_187\n        /* \"#utility.yul\":12405:12806   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_361:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7537:7560  recipient != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_364\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13013:13015   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12995:13016   */\n      mstore\n        /* \"#utility.yul\":13052:13054   */\n      0x23\n        /* \"#utility.yul\":13032:13050   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13025:13055   */\n      mstore\n        /* \"#utility.yul\":13091:13125   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":13071:13089   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13064:13126   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":13142:13160   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13135:13168   */\n      mstore\n        /* \"#utility.yul\":13185:13204   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_187\n        /* \"#utility.yul\":12811:13210   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_364:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7693:7710  _balances[sender] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7690  uint256 senderBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7693:7710  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7728:7751  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13417:13419   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13399:13420   */\n      mstore\n        /* \"#utility.yul\":13456:13458   */\n      0x26\n        /* \"#utility.yul\":13436:13454   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13429:13459   */\n      mstore\n        /* \"#utility.yul\":13495:13529   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":13475:13493   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13468:13530   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":13546:13564   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13539:13575   */\n      mstore\n        /* \"#utility.yul\":13592:13611   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_187\n        /* \"#utility.yul\":13215:13617   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_369:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7845  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7837  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7845  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7870  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7870  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7910  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7870  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7837  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      tag_372\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7870  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      tag_159\n      jump\t// in\n    tag_372:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7953:7962  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7945:7951  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7970  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_373\n      swap2\n        /* \"#utility.yul\":481:506   */\n      dup2\n      mstore\n        /* \"#utility.yul\":469:471   */\n      0x20\n        /* \"#utility.yul\":454:472   */\n      add\n      swap1\n        /* \"#utility.yul\":335:512   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n    tag_373:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7982:8028  _afterTokenTransfer(sender, recipient, amount) */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":958:1319  function burnFrom(address account, uint256 amount) public virtual {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9020:9596  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9103:9124  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9095:9162  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_377\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13824:13826   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9095:9162  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13806:13827   */\n      mstore\n        /* \"#utility.yul\":13863:13865   */\n      0x21\n        /* \"#utility.yul\":13843:13861   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13836:13866   */\n      mstore\n        /* \"#utility.yul\":13902:13936   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":13882:13900   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13875:13937   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":13953:13971   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13946:13977   */\n      mstore\n        /* \"#utility.yul\":13994:14013   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9095:9162  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_187\n        /* \"#utility.yul\":13622:14019   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9095:9162  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_377:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9258:9276  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9233:9255  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9258:9276  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9294:9318  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9286:9357  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_381\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14226:14228   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9286:9357  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14208:14229   */\n      mstore\n        /* \"#utility.yul\":14265:14267   */\n      0x22\n        /* \"#utility.yul\":14245:14263   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14238:14268   */\n      mstore\n        /* \"#utility.yul\":14304:14338   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":14284:14302   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14277:14339   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":14355:14373   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14348:14380   */\n      mstore\n        /* \"#utility.yul\":14397:14416   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9286:9357  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_187\n        /* \"#utility.yul\":14024:14422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9286:9357  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_381:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9391:9409  _balances[account] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9391:9400  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9391:9409  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9412:9435  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9391:9435  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9455:9467  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9455:9477  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9429:9435  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9391:9400  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9455:9477  _totalSupply -= amount */\n      tag_384\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9429:9435  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9455:9477  _totalSupply -= amount */\n      tag_385\n      jump\t// in\n    tag_384:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9493:9530  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":481:506   */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9519:9520  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9493:9530  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":469:471   */\n      0x20\n        /* \"#utility.yul\":454:472   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9493:9530  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1024:1319  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":958:1319  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/maximus.sol\":4078:4167  function mint(uint256 amount) private {... */\n    tag_225:\n        /* \"contracts/maximus.sol\":4135:4160  _mint(msg.sender, amount) */\n      tag_199\n        /* \"contracts/maximus.sol\":4141:4151  msg.sender */\n      caller\n        /* \"contracts/maximus.sol\":4153:4159  amount */\n      dup3\n        /* \"contracts/maximus.sol\":4135:4140  _mint */\n      tag_390\n        /* \"contracts/maximus.sol\":4135:4160  _mint(msg.sender, amount) */\n      jump\t// in\n        /* \"contracts/maximus.sol\":5990:6123  function _endStakeHEX(uint256 stakeIndex,uint40 stakeIdParam ) private  {... */\n    tag_243:\n        /* \"contracts/maximus.sol\":6072:6077  token */\n      sload(0x11)\n        /* \"contracts/maximus.sol\":6072:6112  token.stakeEnd(stakeIndex, stakeIdParam) */\n      mload(0x40)\n      shl(0xe1, 0x1a1804d1)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":14732:14757   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":14805:14817   */\n      0xffffffffff\n        /* \"#utility.yul\":14793:14818   */\n      dup4\n      and\n        /* \"#utility.yul\":14773:14791   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14766:14819   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":6072:6077  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/maximus.sol\":6072:6086  token.stakeEnd */\n      0x343009a2\n      swap1\n        /* \"#utility.yul\":14705:14723   */\n      0x44\n      add\n        /* \"contracts/maximus.sol\":6072:6112  token.stakeEnd(stakeIndex, stakeIdParam) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_394\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_394:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_396\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_396:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/maximus.sol\":5990:6123  function _endStakeHEX(uint256 stakeIndex,uint40 stakeIdParam ) private  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/maximus.sol\":2116:2394  function get_redemption_rate() private view returns (uint256){... */\n    tag_252:\n        /* \"contracts/maximus.sol\":2209:2221  hex_contract */\n      sload(0x10)\n        /* \"contracts/maximus.sol\":2209:2246  hex_contract.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/maximus.sol\":2240:2244  this */\n      address\n        /* \"contracts/maximus.sol\":2209:2246  hex_contract.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3094:3145   */\n      mstore\n        /* \"contracts/maximus.sol\":2169:2176  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":2209:2221  hex_contract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/maximus.sol\":2209:2231  hex_contract.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3067:3085   */\n      0x24\n      add\n        /* \"contracts/maximus.sol\":2209:2246  hex_contract.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_400\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_400:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_401\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_401:\n        /* \"contracts/maximus.sol\":2187:2246  uint256 hex_balance = hex_contract.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/maximus.sol\":2256:2274  uint256 total_maxi */\n      0x00\n        /* \"contracts/maximus.sol\":2292:2296  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":2277:2310  IERC20(address(this)).totalSupply */\n      and\n      0x18160ddd\n        /* \"contracts/maximus.sol\":2277:2312  IERC20(address(this)).totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_403\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_403:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_404\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_404:\n        /* \"contracts/maximus.sol\":2256:2312  uint256 total_maxi = IERC20(address(this)).totalSupply() */\n      swap1\n      pop\n        /* \"contracts/maximus.sol\":2322:2332  uint256 RR */\n      0x00\n        /* \"contracts/maximus.sol\":2335:2368  percent(hex_balance,total_maxi,8) */\n      tag_405\n        /* \"contracts/maximus.sol\":2343:2354  hex_balance */\n      dup4\n        /* \"contracts/maximus.sol\":2355:2365  total_maxi */\n      dup4\n        /* \"contracts/maximus.sol\":2366:2367  8 */\n      0x08\n        /* \"contracts/maximus.sol\":2335:2342  percent */\n      tag_45\n        /* \"contracts/maximus.sol\":2335:2368  percent(hex_balance,total_maxi,8) */\n      jump\t// in\n    tag_405:\n        /* \"contracts/maximus.sol\":2322:2368  uint256 RR = percent(hex_balance,total_maxi,8) */\n      swap5\n        /* \"contracts/maximus.sol\":2116:2394  function get_redemption_rate() private view returns (uint256){... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/maximus.sol\":5873:5975  function _stakeHEX(uint256 amount) private  {... */\n    tag_315:\n        /* \"contracts/maximus.sol\":5927:5932  token */\n      sload(0x11)\n        /* \"contracts/maximus.sol\":5951:5963  STAKE_LENGTH */\n      sload(0x0c)\n        /* \"contracts/maximus.sol\":5927:5964  token.stakeStart(amount,STAKE_LENGTH) */\n      mload(0x40)\n      shl(0xe3, 0x0a548717)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":15004:15029   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":15045:15063   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":15038:15072   */\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/maximus.sol\":5927:5932  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/maximus.sol\":5927:5943  token.stakeStart */\n      0x52a438b8\n      swap1\n        /* \"#utility.yul\":14977:14995   */\n      0x44\n      add\n        /* \"contracts/maximus.sol\":5927:5964  token.stakeStart(amount,STAKE_LENGTH) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_410\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_410:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_412\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_412:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/maximus.sol\":5873:5975  function _stakeHEX(uint256 amount) private  {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8311:8700  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_390:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8394:8415  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8386:8451  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_416\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15285:15287   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8386:8451  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15267:15288   */\n      mstore\n        /* \"#utility.yul\":15324:15326   */\n      0x1f\n        /* \"#utility.yul\":15304:15322   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15297:15327   */\n      mstore\n        /* \"#utility.yul\":15363:15396   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":15343:15361   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15336:15397   */\n      mstore\n        /* \"#utility.yul\":15414:15432   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8386:8451  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_187\n        /* \"#utility.yul\":15083:15438   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8386:8451  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_416:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8538:8544  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8522:8534  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8522:8544  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_420\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_420:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8554:8572  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8554:8563  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8554:8572  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8554:8582  _balances[account] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8576:8582  amount */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8554:8563  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8554:8582  _balances[account] += amount */\n      tag_421\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8576:8582  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8554:8582  _balances[account] += amount */\n      tag_159\n      jump\t// in\n    tag_421:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8597:8634  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":481:506   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8597:8634  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8614:8615  0 */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8597:8634  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":469:471   */\n      0x20\n        /* \"#utility.yul\":454:472   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8597:8634  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/maximus.sol\":4214:4596  {... */\n      pop\n        /* \"contracts/maximus.sol\":4172:4596  function pledgeHEX(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:330   */\n    tag_44:\n        /* \"#utility.yul\":91:97   */\n      0x00\n        /* \"#utility.yul\":99:105   */\n      dup1\n        /* \"#utility.yul\":107:113   */\n      0x00\n        /* \"#utility.yul\":160:162   */\n      0x60\n        /* \"#utility.yul\":148:157   */\n      dup5\n        /* \"#utility.yul\":139:146   */\n      dup7\n        /* \"#utility.yul\":135:158   */\n      sub\n        /* \"#utility.yul\":131:163   */\n      slt\n        /* \"#utility.yul\":128:180   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":176:177   */\n      0x00\n        /* \"#utility.yul\":173:174   */\n      dup1\n        /* \"#utility.yul\":166:178   */\n      revert\n        /* \"#utility.yul\":128:180   */\n    tag_430:\n      pop\n      pop\n        /* \"#utility.yul\":199:222   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":269:271   */\n      0x20\n        /* \"#utility.yul\":254:272   */\n      dup4\n      add\n        /* \"#utility.yul\":241:273   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":320:322   */\n      0x40\n        /* \"#utility.yul\":305:323   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":292:324   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:330   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":517:1065   */\n    tag_54:\n        /* \"#utility.yul\":629:633   */\n      0x00\n        /* \"#utility.yul\":658:660   */\n      0x20\n        /* \"#utility.yul\":687:689   */\n      dup1\n        /* \"#utility.yul\":676:685   */\n      dup4\n        /* \"#utility.yul\":669:690   */\n      mstore\n        /* \"#utility.yul\":719:725   */\n      dup4\n        /* \"#utility.yul\":713:726   */\n      mload\n        /* \"#utility.yul\":762:768   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      dup3\n        /* \"#utility.yul\":746:755   */\n      dup6\n        /* \"#utility.yul\":742:760   */\n      add\n        /* \"#utility.yul\":735:769   */\n      mstore\n        /* \"#utility.yul\":787:788   */\n      0x00\n        /* \"#utility.yul\":797:937   */\n    tag_433:\n        /* \"#utility.yul\":811:817   */\n      dup2\n        /* \"#utility.yul\":808:809   */\n      dup2\n        /* \"#utility.yul\":805:818   */\n      lt\n        /* \"#utility.yul\":797:937   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":906:920   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":902:925   */\n      dup4\n      add\n        /* \"#utility.yul\":896:926   */\n      mload\n        /* \"#utility.yul\":872:889   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":891:893   */\n      0x40\n        /* \"#utility.yul\":868:894   */\n      add\n        /* \"#utility.yul\":861:927   */\n      mstore\n        /* \"#utility.yul\":826:836   */\n      dup3\n      add\n        /* \"#utility.yul\":797:937   */\n      jump(tag_433)\n    tag_435:\n        /* \"#utility.yul\":801:804   */\n      pop\n        /* \"#utility.yul\":986:987   */\n      0x00\n        /* \"#utility.yul\":981:983   */\n      0x40\n        /* \"#utility.yul\":972:978   */\n      dup3\n        /* \"#utility.yul\":961:970   */\n      dup7\n        /* \"#utility.yul\":957:979   */\n      add\n        /* \"#utility.yul\":953:984   */\n      add\n        /* \"#utility.yul\":946:988   */\n      mstore\n        /* \"#utility.yul\":1056:1058   */\n      0x40\n        /* \"#utility.yul\":1049:1051   */\n      0x1f\n        /* \"#utility.yul\":1045:1052   */\n      not\n        /* \"#utility.yul\":1040:1042   */\n      0x1f\n        /* \"#utility.yul\":1032:1038   */\n      dup4\n        /* \"#utility.yul\":1028:1043   */\n      add\n        /* \"#utility.yul\":1024:1053   */\n      and\n        /* \"#utility.yul\":1013:1022   */\n      dup6\n        /* \"#utility.yul\":1009:1054   */\n      add\n        /* \"#utility.yul\":1005:1059   */\n      add\n        /* \"#utility.yul\":997:1059   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":517:1065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:1243   */\n    tag_424:\n        /* \"#utility.yul\":1138:1158   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1187:1218   */\n      dup2\n      and\n        /* \"#utility.yul\":1177:1219   */\n      dup2\n      eq\n        /* \"#utility.yul\":1167:1237   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":1233:1234   */\n      0x00\n        /* \"#utility.yul\":1230:1231   */\n      dup1\n        /* \"#utility.yul\":1223:1235   */\n      revert\n        /* \"#utility.yul\":1167:1237   */\n    tag_437:\n        /* \"#utility.yul\":1070:1243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1248:1502   */\n    tag_57:\n        /* \"#utility.yul\":1316:1322   */\n      0x00\n        /* \"#utility.yul\":1324:1330   */\n      dup1\n        /* \"#utility.yul\":1377:1379   */\n      0x40\n        /* \"#utility.yul\":1365:1374   */\n      dup4\n        /* \"#utility.yul\":1356:1363   */\n      dup6\n        /* \"#utility.yul\":1352:1375   */\n      sub\n        /* \"#utility.yul\":1348:1380   */\n      slt\n        /* \"#utility.yul\":1345:1397   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":1393:1394   */\n      0x00\n        /* \"#utility.yul\":1390:1391   */\n      dup1\n        /* \"#utility.yul\":1383:1395   */\n      revert\n        /* \"#utility.yul\":1345:1397   */\n    tag_439:\n        /* \"#utility.yul\":1416:1445   */\n      tag_440\n        /* \"#utility.yul\":1435:1444   */\n      dup4\n        /* \"#utility.yul\":1416:1445   */\n      tag_424\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":1406:1445   */\n      swap5\n        /* \"#utility.yul\":1492:1494   */\n      0x20\n        /* \"#utility.yul\":1477:1495   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1464:1496   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1248:1502   */\n      jump\t// out\n        /* \"#utility.yul\":1699:2027   */\n    tag_66:\n        /* \"#utility.yul\":1776:1782   */\n      0x00\n        /* \"#utility.yul\":1784:1790   */\n      dup1\n        /* \"#utility.yul\":1792:1798   */\n      0x00\n        /* \"#utility.yul\":1845:1847   */\n      0x60\n        /* \"#utility.yul\":1833:1842   */\n      dup5\n        /* \"#utility.yul\":1824:1831   */\n      dup7\n        /* \"#utility.yul\":1820:1843   */\n      sub\n        /* \"#utility.yul\":1816:1848   */\n      slt\n        /* \"#utility.yul\":1813:1865   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":1861:1862   */\n      0x00\n        /* \"#utility.yul\":1858:1859   */\n      dup1\n        /* \"#utility.yul\":1851:1863   */\n      revert\n        /* \"#utility.yul\":1813:1865   */\n    tag_443:\n        /* \"#utility.yul\":1884:1913   */\n      tag_444\n        /* \"#utility.yul\":1903:1912   */\n      dup5\n        /* \"#utility.yul\":1884:1913   */\n      tag_424\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":1874:1913   */\n      swap3\n      pop\n        /* \"#utility.yul\":1932:1970   */\n      tag_445\n        /* \"#utility.yul\":1966:1968   */\n      0x20\n        /* \"#utility.yul\":1955:1964   */\n      dup6\n        /* \"#utility.yul\":1951:1969   */\n      add\n        /* \"#utility.yul\":1932:1970   */\n      tag_424\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":1922:1970   */\n      swap2\n      pop\n        /* \"#utility.yul\":2017:2019   */\n      0x40\n        /* \"#utility.yul\":2006:2015   */\n      dup5\n        /* \"#utility.yul\":2002:2020   */\n      add\n        /* \"#utility.yul\":1989:2021   */\n      calldataload\n        /* \"#utility.yul\":1979:2021   */\n      swap1\n      pop\n        /* \"#utility.yul\":1699:2027   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2221:2401   */\n    tag_82:\n        /* \"#utility.yul\":2280:2286   */\n      0x00\n        /* \"#utility.yul\":2333:2335   */\n      0x20\n        /* \"#utility.yul\":2321:2330   */\n      dup3\n        /* \"#utility.yul\":2312:2319   */\n      dup5\n        /* \"#utility.yul\":2308:2331   */\n      sub\n        /* \"#utility.yul\":2304:2336   */\n      slt\n        /* \"#utility.yul\":2301:2353   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":2349:2350   */\n      0x00\n        /* \"#utility.yul\":2346:2347   */\n      dup1\n        /* \"#utility.yul\":2339:2351   */\n      revert\n        /* \"#utility.yul\":2301:2353   */\n    tag_448:\n      pop\n        /* \"#utility.yul\":2372:2395   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2221:2401   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2406:2752   */\n    tag_95:\n        /* \"#utility.yul\":2473:2479   */\n      0x00\n        /* \"#utility.yul\":2481:2487   */\n      dup1\n        /* \"#utility.yul\":2534:2536   */\n      0x40\n        /* \"#utility.yul\":2522:2531   */\n      dup4\n        /* \"#utility.yul\":2513:2520   */\n      dup6\n        /* \"#utility.yul\":2509:2532   */\n      sub\n        /* \"#utility.yul\":2505:2537   */\n      slt\n        /* \"#utility.yul\":2502:2554   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":2550:2551   */\n      0x00\n        /* \"#utility.yul\":2547:2548   */\n      dup1\n        /* \"#utility.yul\":2540:2552   */\n      revert\n        /* \"#utility.yul\":2502:2554   */\n    tag_450:\n        /* \"#utility.yul\":2586:2595   */\n      dup3\n        /* \"#utility.yul\":2573:2596   */\n      calldataload\n        /* \"#utility.yul\":2563:2596   */\n      swap2\n      pop\n        /* \"#utility.yul\":2646:2648   */\n      0x20\n        /* \"#utility.yul\":2635:2644   */\n      dup4\n        /* \"#utility.yul\":2631:2649   */\n      add\n        /* \"#utility.yul\":2618:2650   */\n      calldataload\n        /* \"#utility.yul\":2690:2702   */\n      0xffffffffff\n        /* \"#utility.yul\":2683:2688   */\n      dup2\n        /* \"#utility.yul\":2679:2703   */\n      and\n        /* \"#utility.yul\":2672:2677   */\n      dup2\n        /* \"#utility.yul\":2669:2704   */\n      eq\n        /* \"#utility.yul\":2659:2722   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":2718:2719   */\n      0x00\n        /* \"#utility.yul\":2715:2716   */\n      dup1\n        /* \"#utility.yul\":2708:2720   */\n      revert\n        /* \"#utility.yul\":2659:2722   */\n    tag_451:\n        /* \"#utility.yul\":2741:2746   */\n      dup1\n        /* \"#utility.yul\":2731:2746   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2406:2752   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2757:2943   */\n    tag_102:\n        /* \"#utility.yul\":2816:2822   */\n      0x00\n        /* \"#utility.yul\":2869:2871   */\n      0x20\n        /* \"#utility.yul\":2857:2866   */\n      dup3\n        /* \"#utility.yul\":2848:2855   */\n      dup5\n        /* \"#utility.yul\":2844:2867   */\n      sub\n        /* \"#utility.yul\":2840:2872   */\n      slt\n        /* \"#utility.yul\":2837:2889   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":2885:2886   */\n      0x00\n        /* \"#utility.yul\":2882:2883   */\n      dup1\n        /* \"#utility.yul\":2875:2887   */\n      revert\n        /* \"#utility.yul\":2837:2889   */\n    tag_453:\n        /* \"#utility.yul\":2908:2937   */\n      tag_454\n        /* \"#utility.yul\":2927:2936   */\n      dup3\n        /* \"#utility.yul\":2908:2937   */\n      tag_424\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":2898:2937   */\n      swap4\n        /* \"#utility.yul\":2757:2943   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3156:3416   */\n    tag_148:\n        /* \"#utility.yul\":3224:3230   */\n      0x00\n        /* \"#utility.yul\":3232:3238   */\n      dup1\n        /* \"#utility.yul\":3285:3287   */\n      0x40\n        /* \"#utility.yul\":3273:3282   */\n      dup4\n        /* \"#utility.yul\":3264:3271   */\n      dup6\n        /* \"#utility.yul\":3260:3283   */\n      sub\n        /* \"#utility.yul\":3256:3288   */\n      slt\n        /* \"#utility.yul\":3253:3305   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":3301:3302   */\n      0x00\n        /* \"#utility.yul\":3298:3299   */\n      dup1\n        /* \"#utility.yul\":3291:3303   */\n      revert\n        /* \"#utility.yul\":3253:3305   */\n    tag_457:\n        /* \"#utility.yul\":3324:3353   */\n      tag_458\n        /* \"#utility.yul\":3343:3352   */\n      dup4\n        /* \"#utility.yul\":3324:3353   */\n      tag_424\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":3314:3353   */\n      swap2\n      pop\n        /* \"#utility.yul\":3372:3410   */\n      tag_459\n        /* \"#utility.yul\":3406:3408   */\n      0x20\n        /* \"#utility.yul\":3395:3404   */\n      dup5\n        /* \"#utility.yul\":3391:3409   */\n      add\n        /* \"#utility.yul\":3372:3410   */\n      tag_424\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":3362:3410   */\n      swap1\n      pop\n        /* \"#utility.yul\":3156:3416   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3421:3548   */\n    tag_425:\n        /* \"#utility.yul\":3482:3492   */\n      0x4e487b71\n        /* \"#utility.yul\":3477:3480   */\n      0xe0\n        /* \"#utility.yul\":3473:3493   */\n      shl\n        /* \"#utility.yul\":3470:3471   */\n      0x00\n        /* \"#utility.yul\":3463:3494   */\n      mstore\n        /* \"#utility.yul\":3513:3517   */\n      0x11\n        /* \"#utility.yul\":3510:3511   */\n      0x04\n        /* \"#utility.yul\":3503:3518   */\n      mstore\n        /* \"#utility.yul\":3537:3541   */\n      0x24\n        /* \"#utility.yul\":3534:3535   */\n      0x00\n        /* \"#utility.yul\":3527:3542   */\n      revert\n        /* \"#utility.yul\":3553:3678   */\n    tag_159:\n        /* \"#utility.yul\":3618:3627   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3639:3649   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3636:3672   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":3652:3670   */\n      tag_176\n      tag_425\n      jump\t// in\n        /* \"#utility.yul\":3683:4105   */\n    tag_426:\n        /* \"#utility.yul\":3772:3773   */\n      0x01\n        /* \"#utility.yul\":3815:3820   */\n      dup2\n        /* \"#utility.yul\":3772:3773   */\n      dup2\n        /* \"#utility.yul\":3829:4099   */\n    tag_465:\n        /* \"#utility.yul\":3850:3857   */\n      dup1\n        /* \"#utility.yul\":3840:3848   */\n      dup6\n        /* \"#utility.yul\":3837:3858   */\n      gt\n        /* \"#utility.yul\":3829:4099   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":3909:3913   */\n      dup2\n        /* \"#utility.yul\":3905:3906   */\n      0x00\n        /* \"#utility.yul\":3901:3907   */\n      not\n        /* \"#utility.yul\":3897:3914   */\n      div\n        /* \"#utility.yul\":3891:3895   */\n      dup3\n        /* \"#utility.yul\":3888:3915   */\n      gt\n        /* \"#utility.yul\":3885:3938   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":3918:3936   */\n      tag_469\n      tag_425\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":3968:3975   */\n      dup1\n        /* \"#utility.yul\":3958:3966   */\n      dup6\n        /* \"#utility.yul\":3954:3976   */\n      and\n        /* \"#utility.yul\":3951:4006   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":3988:4004   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":3951:4006   */\n    tag_470:\n        /* \"#utility.yul\":4067:4089   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":4027:4042   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":3829:4099   */\n      jump(tag_465)\n    tag_467:\n        /* \"#utility.yul\":3833:3836   */\n      pop\n        /* \"#utility.yul\":3683:4105   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4110:4916   */\n    tag_427:\n        /* \"#utility.yul\":4159:4164   */\n      0x00\n        /* \"#utility.yul\":4189:4197   */\n      dup3\n        /* \"#utility.yul\":4179:4259   */\n      tag_472\n      jumpi\n      pop\n        /* \"#utility.yul\":4230:4231   */\n      0x01\n        /* \"#utility.yul\":4244:4249   */\n      jump(tag_176)\n        /* \"#utility.yul\":4179:4259   */\n    tag_472:\n        /* \"#utility.yul\":4278:4282   */\n      dup2\n        /* \"#utility.yul\":4268:4344   */\n      tag_473\n      jumpi\n      pop\n        /* \"#utility.yul\":4315:4316   */\n      0x00\n        /* \"#utility.yul\":4329:4334   */\n      jump(tag_176)\n        /* \"#utility.yul\":4268:4344   */\n    tag_473:\n        /* \"#utility.yul\":4360:4364   */\n      dup2\n        /* \"#utility.yul\":4378:4379   */\n      0x01\n        /* \"#utility.yul\":4373:4432   */\n      dup2\n      eq\n      tag_475\n      jumpi\n        /* \"#utility.yul\":4446:4447   */\n      0x02\n        /* \"#utility.yul\":4441:4571   */\n      dup2\n      eq\n      tag_476\n      jumpi\n        /* \"#utility.yul\":4353:4571   */\n      jump(tag_474)\n        /* \"#utility.yul\":4373:4432   */\n    tag_475:\n        /* \"#utility.yul\":4403:4404   */\n      0x01\n        /* \"#utility.yul\":4394:4404   */\n      swap2\n      pop\n        /* \"#utility.yul\":4417:4422   */\n      pop\n      jump(tag_176)\n        /* \"#utility.yul\":4441:4571   */\n    tag_476:\n        /* \"#utility.yul\":4478:4481   */\n      0xff\n        /* \"#utility.yul\":4468:4476   */\n      dup5\n        /* \"#utility.yul\":4465:4482   */\n      gt\n        /* \"#utility.yul\":4462:4505   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":4485:4503   */\n      tag_478\n      tag_425\n      jump\t// in\n    tag_478:\n      pop\n      pop\n        /* \"#utility.yul\":4541:4542   */\n      0x01\n        /* \"#utility.yul\":4527:4543   */\n      dup3\n      shl\n        /* \"#utility.yul\":4556:4561   */\n      jump(tag_176)\n        /* \"#utility.yul\":4353:4571   */\n    tag_474:\n      pop\n        /* \"#utility.yul\":4655:4657   */\n      0x20\n        /* \"#utility.yul\":4645:4653   */\n      dup4\n        /* \"#utility.yul\":4642:4658   */\n      lt\n        /* \"#utility.yul\":4636:4639   */\n      0x0133\n        /* \"#utility.yul\":4630:4634   */\n      dup4\n        /* \"#utility.yul\":4627:4640   */\n      lt\n        /* \"#utility.yul\":4623:4659   */\n      and\n        /* \"#utility.yul\":4617:4619   */\n      0x4e\n        /* \"#utility.yul\":4607:4615   */\n      dup5\n        /* \"#utility.yul\":4604:4620   */\n      lt\n        /* \"#utility.yul\":4599:4601   */\n      0x0b\n        /* \"#utility.yul\":4593:4597   */\n      dup5\n        /* \"#utility.yul\":4590:4602   */\n      lt\n        /* \"#utility.yul\":4586:4621   */\n      and\n        /* \"#utility.yul\":4583:4660   */\n      or\n        /* \"#utility.yul\":4580:4739   */\n      iszero\n      tag_479\n      jumpi\n      pop\n        /* \"#utility.yul\":4692:4711   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":4724:4729   */\n      jump(tag_176)\n        /* \"#utility.yul\":4580:4739   */\n    tag_479:\n        /* \"#utility.yul\":4771:4805   */\n      tag_480\n        /* \"#utility.yul\":4796:4804   */\n      dup4\n        /* \"#utility.yul\":4790:4794   */\n      dup4\n        /* \"#utility.yul\":4771:4805   */\n      tag_426\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":4841:4847   */\n      dup1\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4833:4839   */\n      not\n        /* \"#utility.yul\":4829:4848   */\n      div\n        /* \"#utility.yul\":4820:4827   */\n      dup3\n        /* \"#utility.yul\":4817:4849   */\n      gt\n        /* \"#utility.yul\":4814:4872   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":4852:4870   */\n      tag_482\n      tag_425\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":4890:4910   */\n      mul\n      swap4\n        /* \"#utility.yul\":4110:4916   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4921:5052   */\n    tag_161:\n        /* \"#utility.yul\":4981:4986   */\n      0x00\n        /* \"#utility.yul\":5010:5046   */\n      tag_454\n        /* \"#utility.yul\":5037:5045   */\n      dup4\n        /* \"#utility.yul\":5031:5035   */\n      dup4\n        /* \"#utility.yul\":5010:5046   */\n      tag_427\n      jump\t// in\n        /* \"#utility.yul\":5057:5225   */\n    tag_163:\n        /* \"#utility.yul\":5097:5104   */\n      0x00\n        /* \"#utility.yul\":5163:5164   */\n      dup2\n        /* \"#utility.yul\":5159:5160   */\n      0x00\n        /* \"#utility.yul\":5155:5161   */\n      not\n        /* \"#utility.yul\":5151:5165   */\n      div\n        /* \"#utility.yul\":5148:5149   */\n      dup4\n        /* \"#utility.yul\":5145:5166   */\n      gt\n        /* \"#utility.yul\":5140:5141   */\n      dup3\n        /* \"#utility.yul\":5133:5142   */\n      iszero\n        /* \"#utility.yul\":5126:5143   */\n      iszero\n        /* \"#utility.yul\":5122:5167   */\n      and\n        /* \"#utility.yul\":5119:5190   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":5170:5188   */\n      tag_487\n      tag_425\n      jump\t// in\n    tag_487:\n      pop\n        /* \"#utility.yul\":5210:5219   */\n      mul\n      swap1\n        /* \"#utility.yul\":5057:5225   */\n      jump\t// out\n        /* \"#utility.yul\":5230:5447   */\n    tag_165:\n        /* \"#utility.yul\":5270:5271   */\n      0x00\n        /* \"#utility.yul\":5296:5297   */\n      dup3\n        /* \"#utility.yul\":5286:5418   */\n      tag_489\n      jumpi\n        /* \"#utility.yul\":5340:5350   */\n      0x4e487b71\n        /* \"#utility.yul\":5335:5338   */\n      0xe0\n        /* \"#utility.yul\":5331:5351   */\n      shl\n        /* \"#utility.yul\":5328:5329   */\n      0x00\n        /* \"#utility.yul\":5321:5352   */\n      mstore\n        /* \"#utility.yul\":5375:5379   */\n      0x12\n        /* \"#utility.yul\":5372:5373   */\n      0x04\n        /* \"#utility.yul\":5365:5380   */\n      mstore\n        /* \"#utility.yul\":5403:5407   */\n      0x24\n        /* \"#utility.yul\":5400:5401   */\n      0x00\n        /* \"#utility.yul\":5393:5408   */\n      revert\n        /* \"#utility.yul\":5286:5418   */\n    tag_489:\n      pop\n        /* \"#utility.yul\":5432:5441   */\n      div\n      swap1\n        /* \"#utility.yul\":5230:5447   */\n      jump\t// out\n        /* \"#utility.yul\":5452:5832   */\n    tag_171:\n        /* \"#utility.yul\":5531:5532   */\n      0x01\n        /* \"#utility.yul\":5527:5539   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5574:5586   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5595:5656   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":5649:5653   */\n      0x7f\n        /* \"#utility.yul\":5641:5647   */\n      dup3\n        /* \"#utility.yul\":5637:5654   */\n      and\n        /* \"#utility.yul\":5627:5654   */\n      swap2\n      pop\n        /* \"#utility.yul\":5595:5656   */\n    tag_491:\n        /* \"#utility.yul\":5702:5704   */\n      0x20\n        /* \"#utility.yul\":5694:5700   */\n      dup3\n        /* \"#utility.yul\":5691:5705   */\n      lt\n        /* \"#utility.yul\":5671:5689   */\n      dup2\n        /* \"#utility.yul\":5668:5706   */\n      sub\n        /* \"#utility.yul\":5665:5826   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":5748:5758   */\n      0x4e487b71\n        /* \"#utility.yul\":5743:5746   */\n      0xe0\n        /* \"#utility.yul\":5739:5759   */\n      shl\n        /* \"#utility.yul\":5736:5737   */\n      0x00\n        /* \"#utility.yul\":5729:5760   */\n      mstore\n        /* \"#utility.yul\":5783:5787   */\n      0x22\n        /* \"#utility.yul\":5780:5781   */\n      0x04\n        /* \"#utility.yul\":5773:5788   */\n      mstore\n        /* \"#utility.yul\":5811:5815   */\n      0x24\n        /* \"#utility.yul\":5808:5809   */\n      0x00\n        /* \"#utility.yul\":5801:5816   */\n      revert\n        /* \"#utility.yul\":5665:5826   */\n    tag_492:\n      pop\n        /* \"#utility.yul\":5452:5832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6246:6430   */\n    tag_206:\n        /* \"#utility.yul\":6316:6322   */\n      0x00\n        /* \"#utility.yul\":6369:6371   */\n      0x20\n        /* \"#utility.yul\":6357:6366   */\n      dup3\n        /* \"#utility.yul\":6348:6355   */\n      dup5\n        /* \"#utility.yul\":6344:6367   */\n      sub\n        /* \"#utility.yul\":6340:6372   */\n      slt\n        /* \"#utility.yul\":6337:6389   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":6385:6386   */\n      0x00\n        /* \"#utility.yul\":6382:6383   */\n      dup1\n        /* \"#utility.yul\":6375:6387   */\n      revert\n        /* \"#utility.yul\":6337:6389   */\n    tag_495:\n      pop\n        /* \"#utility.yul\":6408:6424   */\n      mload\n      swap2\n        /* \"#utility.yul\":6246:6430   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7954:8231   */\n    tag_223:\n        /* \"#utility.yul\":8021:8027   */\n      0x00\n        /* \"#utility.yul\":8074:8076   */\n      0x20\n        /* \"#utility.yul\":8062:8071   */\n      dup3\n        /* \"#utility.yul\":8053:8060   */\n      dup5\n        /* \"#utility.yul\":8049:8072   */\n      sub\n        /* \"#utility.yul\":8045:8077   */\n      slt\n        /* \"#utility.yul\":8042:8094   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":8090:8091   */\n      0x00\n        /* \"#utility.yul\":8087:8088   */\n      dup1\n        /* \"#utility.yul\":8080:8092   */\n      revert\n        /* \"#utility.yul\":8042:8094   */\n    tag_501:\n        /* \"#utility.yul\":8122:8131   */\n      dup2\n        /* \"#utility.yul\":8116:8132   */\n      mload\n        /* \"#utility.yul\":8175:8180   */\n      dup1\n        /* \"#utility.yul\":8168:8181   */\n      iszero\n        /* \"#utility.yul\":8161:8182   */\n      iszero\n        /* \"#utility.yul\":8154:8159   */\n      dup2\n        /* \"#utility.yul\":8151:8183   */\n      eq\n        /* \"#utility.yul\":8141:8201   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":8197:8198   */\n      0x00\n        /* \"#utility.yul\":8194:8195   */\n      dup1\n        /* \"#utility.yul\":8187:8199   */\n      revert\n        /* \"#utility.yul\":14427:14555   */\n    tag_385:\n        /* \"#utility.yul\":14494:14503   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":14515:14526   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":14512:14549   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":14529:14547   */\n      tag_176\n      tag_425\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220d67b42144c868f9a23d0f7e24499c0f24e0beec6fd74910a75bf8a23c9df4fcc64736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_149": {
									"entryPoint": null,
									"id": 149,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_1792": {
									"entryPoint": null,
									"id": 1792,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1348": {
									"entryPoint": 296,
									"id": 1348,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 300,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 419,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3209:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "112:147:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "158:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "167:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "170:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "160:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "160:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "160:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "133:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "142:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "129:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "129:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "154:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "125:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:32:10"
															},
															"nodeType": "YulIf",
															"src": "122:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "183:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "199:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "193:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "193:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "218:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "238:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "249:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "234:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "234:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "228:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:25:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "70:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "81:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "93:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "101:6:10",
														"type": ""
													}
												],
												"src": "14:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "296:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "313:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "320:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "325:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "316:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "316:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "306:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "306:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "353:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "356:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "346:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "346:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "346:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "377:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "380:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "370:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "264:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "451:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "461:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "478:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "471:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "471:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "461:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "492:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "522:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "518:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "518:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "496:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "569:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "571:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "585:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "593:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "581:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "581:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "571:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "549:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "542:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:26:10"
															},
															"nodeType": "YulIf",
															"src": "539:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "659:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "687:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "692:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "683:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "683:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "673:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "673:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "724:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "717:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "717:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "717:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "752:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "755:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "745:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "745:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "745:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "615:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "638:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "646:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "635:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "635:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "612:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "612:38:10"
															},
															"nodeType": "YulIf",
															"src": "609:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "431:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "440:6:10",
														"type": ""
													}
												],
												"src": "396:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "837:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "857:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "870:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "888:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "891:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "878:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "870:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "820:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "828:4:10",
														"type": ""
													}
												],
												"src": "781:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "988:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1021:425:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1035:11:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1045:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1039:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1066:2:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1070:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1059:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1059:17:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1059:17:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1089:31:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1111:2:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1115:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "1101:9:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1101:19:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "1093:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1133:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1156:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1166:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "1173:10:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1185:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1169:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1169:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1162:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1162:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1152:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1152:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "1137:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1227:23:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1229:19:10",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "1244:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "1229:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "1209:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1221:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1206:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1206:20:10"
																		},
																		"nodeType": "YulIf",
																		"src": "1203:47:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1263:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1277:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1287:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1294:3:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1299:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1290:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1290:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1283:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1283:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1273:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1273:31:10"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1267:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1317:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1330:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1321:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1415:21:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1424:5:10"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1431:2:10"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1417:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1417:17:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1417:17:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1365:5:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1372:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1362:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1362:13:10"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1376:26:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1378:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1391:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1398:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1387:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1387:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1378:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1358:3:10",
																			"statements": []
																		},
																		"src": "1354:82:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1004:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1009:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1001:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1001:11:10"
															},
															"nodeType": "YulIf",
															"src": "998:448:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "960:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "967:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "972:10:10",
														"type": ""
													}
												],
												"src": "907:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1542:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1552:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1567:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1585:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1588:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1581:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1581:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1598:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1594:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1594:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1577:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1577:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1573:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1573:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1563:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1563:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1609:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1612:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1605:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1605:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1560:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1560:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1552:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1519:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1525:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1533:4:10",
														"type": ""
													}
												],
												"src": "1457:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1724:1256:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1734:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1754:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1748:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1748:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1738:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1801:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1803:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1803:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1803:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1773:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1789:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1793:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1785:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1785:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1797:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1781:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1781:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1770:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1770:30:10"
															},
															"nodeType": "YulIf",
															"src": "1767:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1876:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1914:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1908:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1908:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1882:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1882:38:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1922:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1832:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:97:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1832:97:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1938:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1955:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1942:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1965:23:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1984:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1969:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1997:24:10",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "2010:11:10"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1997:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2067:656:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2081:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2100:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2112:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2108:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2108:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2096:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2096:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "2085:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2129:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2173:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "2143:29:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2143:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "2133:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2191:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2200:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "2195:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2278:172:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2303:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2321:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2326:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2317:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2317:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2311:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2311:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2296:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2296:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2296:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2355:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2369:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2377:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2365:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2365:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2355:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2396:40:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2413:9:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2424:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2409:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2409:27:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2396:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2225:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2228:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2222:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2222:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "2237:28:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2239:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "2248:1:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2251:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2244:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2244:19:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2239:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "2218:3:10",
																					"statements": []
																				},
																				"src": "2214:236:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2498:166:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2516:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2543:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2548:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2539:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2539:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2533:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2533:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2520:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2583:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2622:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2625:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2618:3:10"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2618:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2634:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2614:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2614:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2644:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2640:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2640:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2610:3:10"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2610:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2606:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2606:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2591:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2591:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2576:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2576:74:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2576:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2469:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2478:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2466:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2466:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "2463:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2684:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2698:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2701:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2694:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2694:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2710:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2690:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2690:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2677:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2677:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2677:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2060:663:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2065:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2740:234:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2754:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2767:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2758:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2803:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2821:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2840:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2845:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2836:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2836:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2830:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2830:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2821:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2784:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "2781:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2890:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2949:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2956:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2896:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2896:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2883:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2883:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2883:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2732:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2040:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2037:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "2030:944:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1709:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1715:3:10",
														"type": ""
													}
												],
												"src": "1628:1352:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3033:174:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3043:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3054:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3057:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3050:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3043:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3090:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3111:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3118:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3123:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3114:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3114:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3104:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3104:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3104:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3155:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3158:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3148:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3148:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3148:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3183:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3186:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3176:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3176:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3176:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3074:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3077:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3071:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3071:10:10"
															},
															"nodeType": "YulIf",
															"src": "3068:133:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3016:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3019:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3025:3:10",
														"type": ""
													}
												],
												"src": "2985:222:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600e80546001600160a01b03199081163017909155600f80548216732b591e99afe9f32eaa6214f7b7629768c40eeb3990811790915560108054831682179055601180549092161790553480156200005b57600080fd5b5060405162001fc938038062001fc98339810160408190526200007e916200017e565b6040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b8152508160039081620000cb919062000248565b506004620000da828262000248565b505050620000f7620000f16200012860201b60201c565b6200012c565b600682905562000108818362000314565b60075550506008805461ffff191690556001600b819055600c556200033c565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080604083850312156200019257600080fd5b505080516020909101519092909150565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001ce57607f821691505b602082108103620001ef57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024357600081815260208120601f850160051c810160208610156200021e5750805b601f850160051c820191505b818110156200023f578281556001016200022a565b5050505b505050565b81516001600160401b03811115620002645762000264620001a3565b6200027c81620002758454620001b9565b84620001f5565b602080601f831160018114620002b457600084156200029b5750858301515b600019600386901b1c1916600185901b1785556200023f565b600085815260208120601f198616915b82811015620002e557888601518255948401946001909101908401620002c4565b5085821015620003045787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200033657634e487b7160e01b600052601160045260246000fd5b92915050565b611c7d806200034c6000396000f3fe608060405234801561001057600080fd5b50600436106101ef5760003560e01c8063715018a61161010f578063a9059cbb116100a2578063db14122211610071578063db141222146103bd578063dd62ed3e146103c5578063e7644fb9146103fe578063f2fde38b1461041157600080fd5b8063a9059cbb14610387578063ba777bcc1461039a578063d2dea365146103a2578063d720d871146103b557600080fd5b806388b022c6116100de57806388b022c6146103465780638da5cb5b1461035157806395d89b411461036c578063a457c2d71461037457600080fd5b8063715018a61461031b578063751279b91461032357806379cc67901461032b57806379f82bde1461033e57600080fd5b80633950935111610187578063488b478311610156578063488b4783146102cf5780634953a509146102d7578063669d751e146102ea57806370a08231146102f257600080fd5b8063395093511461028c57806342966c681461029f5780634537523c146102b457806346cbbe9e146102c757600080fd5b806318160ddd116101c357806318160ddd1461025a57806323b872dd146102625780632b11551a14610275578063313ce5671461027d57600080fd5b80622c1a9e146101f4578063037c3f5d1461021a57806306fdde0314610222578063095ea7b314610237575b600080fd5b6102076102023660046118c1565b610424565b6040519081526020015b60405180910390f35b600754610207565b61022a610476565b60405161021191906118ed565b61024a610245366004611957565b610508565b6040519015158152602001610211565b600254610207565b61024a610270366004611981565b61051f565b600b54610207565b60405160088152602001610211565b61024a61029a366004611957565b6105ce565b6102b26102ad3660046119bd565b61060a565b005b6102b26102c23660046119bd565b610617565b610207610867565b600654610207565b6102b26102e53660046119d6565b6108e1565b610207610b12565b610207610300366004611a10565b6001600160a01b031660009081526020819052604090205490565b6102b2610b85565b600a54610207565b6102b2610339366004611957565b610beb565b610207610c71565b60085460ff1661024a565b6005546040516001600160a01b039091168152602001610211565b61022a610ca2565b61024a610382366004611957565b610cb1565b61024a610395366004611957565b610d4a565b6102b2610d57565b6102076103b03660046119bd565b610f2f565b610207610f5b565b600954610207565b6102076103d3366004611a32565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102b261040c3660046119bd565b610f9a565b6102b261041f366004611a10565b6110b4565b600080610432836001611a7b565b61043d90600a611b72565b6104479086611b7e565b90506000600a6104578684611b9d565b610462906005611a7b565b61046c9190611b9d565b9695505050505050565b60606003805461048590611bbf565b80601f01602080910402602001604051908101604052809291908181526020018280546104b190611bbf565b80156104fe5780601f106104d3576101008083540402835291602001916104fe565b820191906000526020600020905b8154815290600101906020018083116104e157829003601f168201915b5050505050905090565b600061051533848461117c565b5060015b92915050565b600061052c8484846112a0565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105b65760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6105c3853385840361117c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610515918590610605908690611a7b565b61117c565b610614338261146e565b50565b600754600f60009054906101000a90046001600160a01b03166001600160a01b0316635c9302c96040518163ffffffff1660e01b8152600401602060405180830381865afa15801561066d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106919190611bf9565b11156106d75760405162461bcd60e51b81526020600482015260156024820152744d696e74696e6720506861736520697320446f6e6560581b60448201526064016105ad565b601054600e54604051636eb1769f60e11b81523360048201526001600160a01b0391821660248201528392919091169063dd62ed3e90604401602060405180830381865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190611bf9565b10156107d55760405162461bcd60e51b815260206004820152604760248201527f506c6561736520617070726f766520636f6e747261637420616464726573732060448201527f617320616c6c6f776564207370656e64657220696e207468652068657820636f606482015266373a3930b1ba1760c91b608482015260a4016105ad565b601054600e546040516323b872dd60e01b815233600482018190526001600160a01b039283166024830152604482018590529291909116906323b872dd906064016020604051808303816000875af1158015610835573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108599190611c12565b50610863826115bc565b5050565b600080601160009054906101000a90046001600160a01b03166001600160a01b0316635c9302c96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105199190611bf9565b600a54600f60009054906101000a90046001600160a01b03166001600160a01b0316635c9302c96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095b9190611bf9565b116109a85760405162461bcd60e51b815260206004820152601a60248201527f5374616b65206973206e6f7420636f6d706c657465207965742e00000000000060448201526064016105ad565b60085460ff16151560011480156109c75750600854610100900460ff16155b610a135760405162461bcd60e51b815260206004820152601f60248201527f5374616b652068617320616c7265616479206265656e20737461727465642e0060448201526064016105ad565b610a1d82826115c6565b6008805461ff0019166101001790556010546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a999190611bf9565b90506000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aff9190611bf9565b9050610b09611635565b600b5550505050565b6010546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a08231906024015b602060405180830381865afa158015610b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b809190611bf9565b905090565b6005546001600160a01b03163314610bdf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105ad565b610be96000611724565b565b6000610bf783336103d3565b905081811015610c555760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b60648201526084016105ad565b610c62833384840361117c565b610c6c838361146e565b505050565b60115460405163033060d960e41b81523060048201526000916001600160a01b0316906333060d9090602401610b3f565b60606004805461048590611bbf565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610d335760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105ad565b610d40338585840361117c565b5060019392505050565b60006105153384846112a0565b60085460ff1615610daa5760405162461bcd60e51b815260206004820152601f60248201527f5374616b652068617320616c7265616479206265656e20737461727465642e0060448201526064016105ad565b600f5460408051635c9302c960e01b815290516000926001600160a01b031691635c9302c99160048083019260209291908290030181865afa158015610df4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e189190611bf9565b90506007548111610e915760405162461bcd60e51b815260206004820152603b60248201527f4d696e74696e67205068617365206973207374696c6c206f6e676f696e67202d60448201527f20736565204d494e54494e475f50484153455f454e44206461792e000000000060648201526084016105ad565b6010546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efe9190611bf9565b9050610f0981611776565b6008805460ff191660011790556009829055600c54610f289083611a7b565b600a555050565b600b5460009081610f408285611b7e565b90506000610f52826127106004610424565b95945050505050565b601054600e54604051636eb1769f60e11b81523360048201526001600160a01b039182166024820152600092919091169063dd62ed3e90604401610b3f565b60085460ff161580610fb9575060085460ff6101009091041615156001145b1561061457336000908152602081905260409020548181101561101e5760405162461bcd60e51b815260206004820152601f60248201527f596f7520646f206e6f7420686176652074686174206d756368204d4158492e0060448201526064016105ad565b6000600b548361102e9190611b7e565b90506110398361060a565b60115460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561108a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ae9190611c12565b50505050565b6005546001600160a01b0316331461110e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105ad565b6001600160a01b0381166111735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ad565b61061481611724565b6001600160a01b0383166111de5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105ad565b6001600160a01b03821661123f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105ad565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166113045760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105ad565b6001600160a01b0382166113665760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105ad565b6001600160a01b038316600090815260208190526040902054818110156113de5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105ad565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611415908490611a7b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161146191815260200190565b60405180910390a36110ae565b6001600160a01b0382166114ce5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105ad565b6001600160a01b038216600090815260208190526040902054818110156115425760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105ad565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611571908490611c34565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b61061433826117e2565b601154604051631a1804d160e11b81526004810184905264ffffffffff831660248201526001600160a01b039091169063343009a290604401600060405180830381600087803b15801561161957600080fd5b505af115801561162d573d6000803e3d6000fd5b505050505050565b6010546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611682573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a69190611bf9565b90506000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170c9190611bf9565b9050600061171c83836008610424565b949350505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b601154600c54604051630a54871760e31b81526004810184905260248101919091526001600160a01b03909116906352a438b890604401600060405180830381600087803b1580156117c757600080fd5b505af11580156117db573d6000803e3d6000fd5b5050505050565b6001600160a01b0382166118385760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105ad565b806002600082825461184a9190611a7b565b90915550506001600160a01b03821660009081526020819052604081208054839290611877908490611a7b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000806000606084860312156118d657600080fd5b505081359360208301359350604090920135919050565b600060208083528351808285015260005b8181101561191a578581018301518582016040015282016118fe565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461195257600080fd5b919050565b6000806040838503121561196a57600080fd5b6119738361193b565b946020939093013593505050565b60008060006060848603121561199657600080fd5b61199f8461193b565b92506119ad6020850161193b565b9150604084013590509250925092565b6000602082840312156119cf57600080fd5b5035919050565b600080604083850312156119e957600080fd5b82359150602083013564ffffffffff81168114611a0557600080fd5b809150509250929050565b600060208284031215611a2257600080fd5b611a2b8261193b565b9392505050565b60008060408385031215611a4557600080fd5b611a4e8361193b565b9150611a5c6020840161193b565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561051957610519611a65565b600181815b80851115611ac9578160001904821115611aaf57611aaf611a65565b80851615611abc57918102915b93841c9390800290611a93565b509250929050565b600082611ae057506001610519565b81611aed57506000610519565b8160018114611b035760028114611b0d57611b29565b6001915050610519565b60ff841115611b1e57611b1e611a65565b50506001821b610519565b5060208310610133831016604e8410600b8410161715611b4c575081810a610519565b611b568383611a8e565b8060001904821115611b6a57611b6a611a65565b029392505050565b6000611a2b8383611ad1565b6000816000190483118215151615611b9857611b98611a65565b500290565b600082611bba57634e487b7160e01b600052601260045260246000fd5b500490565b600181811c90821680611bd357607f821691505b602082108103611bf357634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611c0b57600080fd5b5051919050565b600060208284031215611c2457600080fd5b81518015158114611a2b57600080fd5b8181038181111561051957610519611a6556fea2646970667358221220d67b42144c868f9a23d0f7e24499c0f24e0beec6fd74910a75bf8a23c9df4fcc64736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND ADDRESS OR SWAP1 SWAP2 SSTORE PUSH1 0xF DUP1 SLOAD DUP3 AND PUSH20 0x2B591E99AFE9F32EAA6214F7B7629768C40EEB39 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x10 DUP1 SLOAD DUP4 AND DUP3 OR SWAP1 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1FC9 CODESIZE SUB DUP1 PUSH3 0x1FC9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x7E SWAP2 PUSH3 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D544B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xCB SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xDA DUP3 DUP3 PUSH3 0x248 JUMP JUMPDEST POP POP POP PUSH3 0xF7 PUSH3 0xF1 PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x12C JUMP JUMPDEST PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH3 0x108 DUP2 DUP4 PUSH3 0x314 JUMP JUMPDEST PUSH1 0x7 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0xC SSTORE PUSH3 0x33C JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x243 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x21E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x23F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x22A JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x264 JUMPI PUSH3 0x264 PUSH3 0x1A3 JUMP JUMPDEST PUSH3 0x27C DUP2 PUSH3 0x275 DUP5 SLOAD PUSH3 0x1B9 JUMP JUMPDEST DUP5 PUSH3 0x1F5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2B4 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x29B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x23F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2E5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2C4 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x304 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x336 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C7D DUP1 PUSH3 0x34C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDB141222 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDB141222 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xE7644FB9 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xBA777BCC EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xD2DEA365 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xD720D871 EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88B022C6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x88B022C6 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x751279B9 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x79F82BDE EQ PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x488B4783 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x488B4783 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x4953A509 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x669D751E EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x4537523C EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x46CBBE9E EQ PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x2B11551A EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x2C1A9E EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x37C3F5D EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x207 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x22A PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x24A PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x211 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x1981 JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x211 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x19BD JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BD JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST PUSH2 0x207 PUSH2 0x867 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x207 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x207 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST PUSH2 0x207 PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH2 0x24A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x211 JUMP JUMPDEST PUSH2 0x22A PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0xCB1 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x207 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BD JUMP JUMPDEST PUSH2 0xF2F JUMP JUMPDEST PUSH2 0x207 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x207 PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x19BD JUMP JUMPDEST PUSH2 0xF9A JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x432 DUP4 PUSH1 0x1 PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0x43D SWAP1 PUSH1 0xA PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x447 SWAP1 DUP7 PUSH2 0x1B7E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH2 0x457 DUP7 DUP5 PUSH2 0x1B9D JUMP JUMPDEST PUSH2 0x462 SWAP1 PUSH1 0x5 PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x485 SWAP1 PUSH2 0x1BBF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B1 SWAP1 PUSH2 0x1BBF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x515 CALLER DUP5 DUP5 PUSH2 0x117C JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52C DUP5 DUP5 DUP5 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C3 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x117C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x515 SWAP2 DUP6 SWAP1 PUSH2 0x605 SWAP1 DUP7 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0x117C JUMP JUMPDEST PUSH2 0x614 CALLER DUP3 PUSH2 0x146E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C9302C9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x66D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x691 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST GT ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D696E74696E6720506861736520697320446F6E65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE DUP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x751 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST LT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x47 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6561736520617070726F766520636F6E7472616374206164647265737320 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x617320616C6C6F776564207370656E64657220696E207468652068657820636F PUSH1 0x64 DUP3 ADD MSTORE PUSH7 0x373A3930B1BA17 PUSH1 0xC9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x835 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST POP PUSH2 0x863 DUP3 PUSH2 0x15BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x11 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C9302C9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C9302C9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x937 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x95B SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST GT PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B65206973206E6F7420636F6D706C657465207965742E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x9C7 JUMPI POP PUSH1 0x8 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B652068617320616C7265616479206265656E20737461727465642E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH2 0xA1D DUP3 DUP3 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA99 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xADB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH2 0xB09 PUSH2 0x1635 JUMP JUMPDEST PUSH1 0xB SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH2 0xBE9 PUSH1 0x0 PUSH2 0x1724 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF7 DUP4 CALLER PUSH2 0x3D3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH2 0xC62 DUP4 CALLER DUP5 DUP5 SUB PUSH2 0x117C JUMP JUMPDEST PUSH2 0xC6C DUP4 DUP4 PUSH2 0x146E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0x33060D9 PUSH1 0xE4 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x33060D90 SWAP1 PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x485 SWAP1 PUSH2 0x1BBF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xD33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH2 0xD40 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x117C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x515 CALLER DUP5 DUP5 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B652068617320616C7265616479206265656E20737461727465642E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5C9302C9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x5C9302C9 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 GT PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E67205068617365206973207374696C6C206F6E676F696E67202D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20736565204D494E54494E475F50484153455F454E44206461792E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEFE SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH2 0xF09 DUP2 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x9 DUP3 SWAP1 SSTORE PUSH1 0xC SLOAD PUSH2 0xF28 SWAP1 DUP4 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0xA SSTORE POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP2 PUSH2 0xF40 DUP3 DUP6 PUSH2 0x1B7E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF52 DUP3 PUSH2 0x2710 PUSH1 0x4 PUSH2 0x424 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0xFB9 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0x614 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x101E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F7420686176652074686174206D756368204D4158492E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD DUP4 PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST SWAP1 POP PUSH2 0x1039 DUP4 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x108A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10AE SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH2 0x614 DUP2 PUSH2 0x1724 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x123F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1304 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1366 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x13DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1415 SWAP1 DUP5 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1461 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1571 SWAP1 DUP5 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x614 CALLER DUP3 PUSH2 0x17E2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A1804D1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH5 0xFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x343009A2 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x162D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1682 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16A6 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170C SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x171C DUP4 DUP4 PUSH1 0x8 PUSH2 0x424 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xA548717 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x52A438B8 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x184A SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1877 SWAP1 DUP5 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x191A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x18FE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x196A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1973 DUP4 PUSH2 0x193B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x199F DUP5 PUSH2 0x193B JUMP JUMPDEST SWAP3 POP PUSH2 0x19AD PUSH1 0x20 DUP6 ADD PUSH2 0x193B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1A05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A2B DUP3 PUSH2 0x193B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A4E DUP4 PUSH2 0x193B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5C PUSH1 0x20 DUP5 ADD PUSH2 0x193B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x519 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1AC9 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1AAF JUMPI PUSH2 0x1AAF PUSH2 0x1A65 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1ABC JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1A93 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1AE0 JUMPI POP PUSH1 0x1 PUSH2 0x519 JUMP JUMPDEST DUP2 PUSH2 0x1AED JUMPI POP PUSH1 0x0 PUSH2 0x519 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1B03 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1B0D JUMPI PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x519 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1B1E JUMPI PUSH2 0x1B1E PUSH2 0x1A65 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x519 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1B4C JUMPI POP DUP2 DUP2 EXP PUSH2 0x519 JUMP JUMPDEST PUSH2 0x1B56 DUP4 DUP4 PUSH2 0x1A8E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1B6A JUMPI PUSH2 0x1B6A PUSH2 0x1A65 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2B DUP4 DUP4 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B98 JUMPI PUSH2 0x1B98 PUSH2 0x1A65 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BBA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1BD3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BF3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1A2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x519 PUSH2 0x1A65 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 PUSH28 0x42144C868F9A23D0F7E24499C0F24E0BEEC6FD74910A75BF8A23C9DF 0x4F 0xCC PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "1057:5725:9:-:0;;;2754:39;;;-1:-1:-1;;;;;;2754:39:9;;;2788:4;2754:39;;;;2799:64;;;;;2821:42;2799:64;;;;;;2915:41;;;;;;;;;2962:38;;;;;;;;;1439:303;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1963:113:1;;;;;;;;;;;;;-1:-1:-1;;;1963:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1963:113:1;;;2037:5;2029;:13;;;;;;:::i;:::-;-1:-1:-1;2052:7:1;:17;2062:7;2052;:17;:::i;:::-;;1963:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;1531:19:9::1;:31:::0;;;1592:18:::1;1602:8:::0;1553:9;1592:18:::1;:::i;:::-;1572:17;:38:::0;-1:-1:-1;;1620:17:9::1;:23:::0;;-1:-1:-1;;1653:23:9;;;1620;1686:15:::1;:17:::0;;;1713:12:::1;:14:::0;1057:5725;;640:96:7;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;14:245:10:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;-1:-1:-1;;193:16:10;;249:2;234:18;;;228:25;193:16;;228:25;;-1:-1:-1;14:245:10:o;264:127::-;325:10;320:3;316:20;313:1;306:31;356:4;353:1;346:15;380:4;377:1;370:15;396:380;475:1;471:12;;;;518;;;539:61;;593:4;585:6;581:17;571:27;;539:61;646:2;638:6;635:14;615:18;612:38;609:161;;692:10;687:3;683:20;680:1;673:31;727:4;724:1;717:15;755:4;752:1;745:15;609:161;;396:380;;;:::o;907:545::-;1009:2;1004:3;1001:11;998:448;;;1045:1;1070:5;1066:2;1059:17;1115:4;1111:2;1101:19;1185:2;1173:10;1169:19;1166:1;1162:27;1156:4;1152:38;1221:4;1209:10;1206:20;1203:47;;;-1:-1:-1;1244:4:10;1203:47;1299:2;1294:3;1290:12;1287:1;1283:20;1277:4;1273:31;1263:41;;1354:82;1372:2;1365:5;1362:13;1354:82;;;1417:17;;;1398:1;1387:13;1354:82;;;1358:3;;;998:448;907:545;;;:::o;1628:1352::-;1748:10;;-1:-1:-1;;;;;1770:30:10;;1767:56;;;1803:18;;:::i;:::-;1832:97;1922:6;1882:38;1914:4;1908:11;1882:38;:::i;:::-;1876:4;1832:97;:::i;:::-;1984:4;;2048:2;2037:14;;2065:1;2060:663;;;;2767:1;2784:6;2781:89;;;-1:-1:-1;2836:19:10;;;2830:26;2781:89;-1:-1:-1;;1585:1:10;1581:11;;;1577:24;1573:29;1563:40;1609:1;1605:11;;;1560:57;2883:81;;2030:944;;2060:663;854:1;847:14;;;891:4;878:18;;-1:-1:-1;;2096:20:10;;;2214:236;2228:7;2225:1;2222:14;2214:236;;;2317:19;;;2311:26;2296:42;;2409:27;;;;2377:1;2365:14;;;;2244:19;;2214:236;;;2218:3;2478:6;2469:7;2466:19;2463:201;;;2539:19;;;2533:26;-1:-1:-1;;2622:1:10;2618:14;;;2634:3;2614:24;2610:37;2606:42;2591:58;2576:74;;2463:201;-1:-1:-1;;;;;2710:1:10;2694:14;;;2690:22;2677:36;;-1:-1:-1;1628:1352:10:o;2985:222::-;3050:9;;;3071:10;;;3068:133;;;3123:10;3118:3;3114:20;3111:1;3104:31;3158:4;3155:1;3148:15;3186:4;3183:1;3176:15;3068:133;2985:222;;;;:::o;:::-;1057:5725:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_649": {
									"entryPoint": null,
									"id": 649,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_627": {
									"entryPoint": 4476,
									"id": 627,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_638": {
									"entryPoint": null,
									"id": 638,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_582": {
									"entryPoint": 5230,
									"id": 582,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_endStakeHEX_2213": {
									"entryPoint": 5574,
									"id": 2213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_510": {
									"entryPoint": 6114,
									"id": 510,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1348": {
									"entryPoint": null,
									"id": 1348,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_stakeHEX_2198": {
									"entryPoint": 6006,
									"id": 2198,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 5924,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_454": {
									"entryPoint": 4768,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_242": {
									"entryPoint": null,
									"id": 242,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_263": {
									"entryPoint": 1288,
									"id": 263,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_203": {
									"entryPoint": null,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_789": {
									"entryPoint": 3051,
									"id": 789,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_750": {
									"entryPoint": 1546,
									"id": 750,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_1801": {
									"entryPoint": null,
									"id": 1801,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_377": {
									"entryPoint": 3249,
									"id": 377,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@endStakeHEX_2278": {
									"entryPoint": 2273,
									"id": 2278,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getAllowanceHEX_2012": {
									"entryPoint": 3931,
									"id": 2012,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBalanceHEX_1999": {
									"entryPoint": 2834,
									"id": 1999,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMintingPhaseEndDay_1941": {
									"entryPoint": null,
									"id": 1941,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMintingPhaseStartDay_1933": {
									"entryPoint": null,
									"id": 1933,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getNumStake_2026": {
									"entryPoint": 3185,
									"id": 2026,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRedemptionRate_1973": {
									"entryPoint": null,
									"id": 1973,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStakeEndDay_1957": {
									"entryPoint": null,
									"id": 1957,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStakeStartDay_1949": {
									"entryPoint": null,
									"id": 1949,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@get_amount_redeem_hex_1829": {
									"entryPoint": 3887,
									"id": 1829,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@get_hex_day_1987": {
									"entryPoint": 2151,
									"id": 1987,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@get_redemption_rate_1866": {
									"entryPoint": 5685,
									"id": 1866,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasStakeStarted_1965": {
									"entryPoint": null,
									"id": 1965,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_338": {
									"entryPoint": 1486,
									"id": 338,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_2038": {
									"entryPoint": 5564,
									"id": 2038,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_159": {
									"entryPoint": 1142,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@percent_1904": {
									"entryPoint": 1060,
									"id": 1904,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@pledgeHEX_2084": {
									"entryPoint": 1559,
									"id": 2084,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@redeemHEX_2131": {
									"entryPoint": 3994,
									"id": 2131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 2949,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeHEX_2185": {
									"entryPoint": 3415,
									"id": 2185,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_169": {
									"entryPoint": 3234,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_311": {
									"entryPoint": 1311,
									"id": 311,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_83": {
									"entryPoint": 4276,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_224": {
									"entryPoint": 3402,
									"id": 224,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 6459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 6337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint40": {
									"entryPoint": 6614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f8cbac71784fc004d90673cc3e1d66b2872505de2e8d2c627a5f5a877d516d6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48053d1b03292ac37b32556da0a537755abe6a686994a46662b9ec3b474d0995__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_769bc324a581d32bae070dd86fd2c1ab2684e2ee82e83c053cccfca6b9a3576a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a9456f43b9e93b34f701ff610e4d10b6ec2a2b593c85ec285ac8ca03dac6a317__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bdda1679ac6ed5b66ab3a9879048a48d51dab3251891d904246a4c3d339c4194__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e159ff01974a922f8bf9e534f7e0e8f9779293fae6adaa5c927dfa63de0b716d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint40__to_t_uint256_t_uint40__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 6798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 7026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 6865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6757,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15440:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "118:212:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "164:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "173:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "166:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "166:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "139:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "148:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "135:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "135:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "131:32:10"
															},
															"nodeType": "YulIf",
															"src": "128:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "189:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "212:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "199:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "199:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "189:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "231:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "258:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "269:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "254:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "254:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "241:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "241:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "282:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "320:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "305:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "305:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "292:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "282:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "68:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "79:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "91:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "99:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "107:6:10",
														"type": ""
													}
												],
												"src": "14:316:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "436:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "446:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "469:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "454:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "454:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "446:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "488:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "499:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "481:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "481:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "405:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "416:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "427:4:10",
														"type": ""
													}
												],
												"src": "335:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:427:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "648:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "658:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "652:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "676:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "687:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "669:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "669:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "669:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "699:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "719:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "713:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "703:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "746:9:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "757:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "742:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "742:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "762:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "735:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "735:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "778:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "787:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "782:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "847:90:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "876:9:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "887:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "872:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "872:17:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "891:2:10",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "868:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "868:26:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "910:6:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "918:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "906:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "906:14:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "922:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "902:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "902:23:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "896:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "896:30:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "861:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "861:66:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "861:66:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "808:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "811:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "805:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "805:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "819:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "821:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "830:1:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "833:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "826:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "826:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "821:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "801:3:10",
																"statements": []
															},
															"src": "797:140:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "961:9:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "972:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "957:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "957:22:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "981:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "953:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "953:31:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "986:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "946:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "946:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "946:42:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "997:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1013:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1032:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1040:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1028:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1028:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1049:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1045:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1045:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1024:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1024:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1009:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1009:45:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1056:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1005:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1005:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "997:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "607:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "618:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "629:4:10",
														"type": ""
													}
												],
												"src": "517:548:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1151:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1221:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1230:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1233:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1223:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1223:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1180:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1191:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1206:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1211:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1202:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1202:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1215:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1198:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1198:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1187:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1187:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1177:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1170:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1170:50:10"
															},
															"nodeType": "YulIf",
															"src": "1167:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1098:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1109:5:10",
														"type": ""
													}
												],
												"src": "1070:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1381:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1390:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1393:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1383:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1383:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1383:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1356:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1365:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1352:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1352:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1377:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:32:10"
															},
															"nodeType": "YulIf",
															"src": "1345:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1406:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1435:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1416:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1406:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1454:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1481:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1492:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1477:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1464:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1464:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1454:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1293:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1304:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1316:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1324:6:10",
														"type": ""
													}
												],
												"src": "1248:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1602:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1612:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1624:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1620:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1620:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1612:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1654:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1679:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1672:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1672:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1665:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1665:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1647:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1571:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1582:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1593:4:10",
														"type": ""
													}
												],
												"src": "1507:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1803:224:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1849:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1858:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1851:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1851:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1851:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1824:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1833:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1820:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1820:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1845:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1816:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1816:32:10"
															},
															"nodeType": "YulIf",
															"src": "1813:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1874:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1903:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1884:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1874:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1922:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1955:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1966:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1951:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1951:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1932:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1932:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1922:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1979:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2006:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2017:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2002:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2002:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1989:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1989:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1979:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1753:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1764:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1776:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1784:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1792:6:10",
														"type": ""
													}
												],
												"src": "1699:328:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2129:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2139:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2151:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2162:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2147:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2147:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2139:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2181:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2196:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2204:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2192:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2192:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2174:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2174:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2174:36:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2098:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2109:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2120:4:10",
														"type": ""
													}
												],
												"src": "2032:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2291:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2337:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2346:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2349:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2339:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2339:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2339:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2312:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2321:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2308:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2308:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2333:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2304:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2304:32:10"
															},
															"nodeType": "YulIf",
															"src": "2301:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2362:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2385:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2372:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2372:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2257:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2268:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2280:6:10",
														"type": ""
													}
												],
												"src": "2221:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2492:260:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2538:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2547:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2550:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2540:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2540:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2540:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2513:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2522:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2509:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2534:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2505:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2505:32:10"
															},
															"nodeType": "YulIf",
															"src": "2502:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2563:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2586:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2573:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2573:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2563:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2605:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2635:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2631:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2631:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2618:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2618:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2609:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2706:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2718:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2708:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2708:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2708:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2672:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2683:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2690:12:10",
																						"type": "",
																						"value": "0xffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2679:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2679:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2669:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2669:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2662:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:43:10"
															},
															"nodeType": "YulIf",
															"src": "2659:63:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2731:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2741:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2731:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint40",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2450:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2461:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2473:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2481:6:10",
														"type": ""
													}
												],
												"src": "2406:346:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2827:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2885:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2875:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2875:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2848:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2857:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2844:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2844:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2869:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2840:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2840:32:10"
															},
															"nodeType": "YulIf",
															"src": "2837:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2898:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2927:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2908:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2898:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2793:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2804:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2816:6:10",
														"type": ""
													}
												],
												"src": "2757:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3049:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3059:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3071:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3067:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3067:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3059:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3101:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3116:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3132:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3137:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3128:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3128:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3141:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3124:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3124:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3112:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3112:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3018:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3029:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3040:4:10",
														"type": ""
													}
												],
												"src": "2948:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3243:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3289:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3298:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3301:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3291:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3291:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3291:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3264:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3273:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3256:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:32:10"
															},
															"nodeType": "YulIf",
															"src": "3253:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3314:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3343:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3324:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3324:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3314:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3362:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3395:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3406:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3391:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3391:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3372:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3372:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3362:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3201:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3212:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3224:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3232:6:10",
														"type": ""
													}
												],
												"src": "3156:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3453:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3470:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3477:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3482:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3463:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3463:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3463:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3510:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3513:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3503:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3503:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3534:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3537:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3527:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3527:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3527:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3421:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3601:77:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3611:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3622:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3625:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3618:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3618:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3611:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3650:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3652:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3652:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3652:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3642:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3645:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3639:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3639:10:10"
															},
															"nodeType": "YulIf",
															"src": "3636:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3584:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3587:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3593:3:10",
														"type": ""
													}
												],
												"src": "3553:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3747:358:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3757:16:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3772:1:10",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "3761:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3782:16:10",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "3791:7:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "3782:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3807:13:10",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "3815:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "3807:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3871:228:10",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3916:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "3918:16:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3918:18:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3918:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3891:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3905:1:10",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3901:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3901:6:10"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "3909:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "3897:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3897:17:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3888:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3888:27:10"
																		},
																		"nodeType": "YulIf",
																		"src": "3885:53:10"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3977:29:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3979:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "3992:5:10"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "3999:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "3988:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3988:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "3979:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3958:8:10"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3968:7:10"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3954:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3954:22:10"
																		},
																		"nodeType": "YulIf",
																		"src": "3951:55:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4019:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4031:4:10"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4037:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "4027:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4027:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "4019:4:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4055:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "4071:7:10"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "4080:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "4067:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4067:22:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "4055:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3840:8:10"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3850:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3837:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3837:21:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3859:3:10",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3833:3:10",
																"statements": []
															},
															"src": "3829:270:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "3711:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3718:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3731:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3738:4:10",
														"type": ""
													}
												],
												"src": "3683:422:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4169:747:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4207:52:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4221:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4230:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "4221:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "4244:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4189:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4182:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:16:10"
															},
															"nodeType": "YulIf",
															"src": "4179:80:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4292:52:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4306:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4315:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "4306:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "4329:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4278:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4271:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4271:12:10"
															},
															"nodeType": "YulIf",
															"src": "4268:76:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4380:52:10",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "4394:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4403:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "4394:5:10"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "4417:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4373:59:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4378:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4448:123:10",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4483:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "4485:16:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4485:18:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4485:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "4468:8:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4478:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "4465:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4465:17:10"
																				},
																				"nodeType": "YulIf",
																				"src": "4462:43:10"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "4518:25:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "4531:8:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4541:1:10",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4527:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4527:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "4518:5:10"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "4556:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4441:130:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4446:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "4360:4:10"
															},
															"nodeType": "YulSwitch",
															"src": "4353:218:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4669:70:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4683:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4696:4:10"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "4702:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "4692:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4692:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "4683:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "4724:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "4593:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4599:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4590:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4590:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "4607:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4617:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4604:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4604:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4586:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4586:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "4630:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4636:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4627:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4627:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "4645:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4655:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4642:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4642:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4623:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4623:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4583:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4583:77:10"
															},
															"nodeType": "YulIf",
															"src": "4580:159:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4748:57:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4790:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4796:8:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "4771:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4771:34:10"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "4752:7:10",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "4761:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4850:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4852:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4852:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4852:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4820:7:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4837:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4833:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4833:6:10"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "4841:6:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4829:19:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4817:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4817:32:10"
															},
															"nodeType": "YulIf",
															"src": "4814:58:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4881:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4894:7:10"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "4903:6:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4890:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4890:20:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4881:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4140:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4146:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4159:5:10",
														"type": ""
													}
												],
												"src": "4110:806:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4991:61:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5001:45:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5031:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5037:8:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "5010:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5010:36:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5001:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4962:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4968:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4981:5:10",
														"type": ""
													}
												],
												"src": "4921:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5109:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5168:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5170:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5170:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5170:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5140:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5133:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5126:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5126:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5148:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5159:1:10",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5155:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5155:6:10"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5163:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5151:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5151:14:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5145:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5145:21:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5122:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5122:45:10"
															},
															"nodeType": "YulIf",
															"src": "5119:71:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5199:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5214:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5217:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5210:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5210:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5199:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5088:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5091:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5097:7:10",
														"type": ""
													}
												],
												"src": "5057:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5276:171:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5307:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5328:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5335:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5340:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5331:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5331:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5321:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5321:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5321:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5372:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5375:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5365:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5365:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5365:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5400:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5403:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5393:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5393:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5393:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5296:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5289:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5289:9:10"
															},
															"nodeType": "YulIf",
															"src": "5286:132:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5427:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5436:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5439:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5432:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5432:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5427:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5261:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5264:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5270:1:10",
														"type": ""
													}
												],
												"src": "5230:217:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5507:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5517:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5531:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5534:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5527:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5527:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5517:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5548:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5578:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5584:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5574:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5574:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5552:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5625:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5627:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5641:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5649:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5637:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5637:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5627:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5605:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:26:10"
															},
															"nodeType": "YulIf",
															"src": "5595:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5715:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5736:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5743:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5748:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5739:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5739:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5729:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5729:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5729:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5780:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5783:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5773:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5773:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5808:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5811:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5801:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5801:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5801:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5671:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5694:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5702:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5691:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5691:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5668:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:38:10"
															},
															"nodeType": "YulIf",
															"src": "5665:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5487:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5496:6:10",
														"type": ""
													}
												],
												"src": "5452:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6011:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6028:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6039:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6021:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6021:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6062:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6073:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6058:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6058:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6078:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6051:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6051:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6051:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6101:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6112:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6097:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6097:18:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6117:34:10",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6090:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6090:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6090:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6172:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6183:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6168:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6168:18:10"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6188:10:10",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6161:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6161:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6161:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6208:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6220:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6231:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6216:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6216:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6208:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5988:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6002:4:10",
														"type": ""
													}
												],
												"src": "5837:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6327:103:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6373:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6382:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6385:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6375:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6375:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6375:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6348:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6357:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6344:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6344:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6369:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6340:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6340:32:10"
															},
															"nodeType": "YulIf",
															"src": "6337:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6398:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6414:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6408:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6408:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6398:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6293:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6304:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6316:6:10",
														"type": ""
													}
												],
												"src": "6246:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6609:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6626:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6637:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6619:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6619:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6619:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6660:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6671:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6656:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6656:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6676:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6649:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6649:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6699:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6710:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6695:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6695:18:10"
																	},
																	{
																		"hexValue": "4d696e74696e6720506861736520697320446f6e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6715:23:10",
																		"type": "",
																		"value": "Minting Phase is Done"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6688:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6688:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6688:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6748:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6760:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6771:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6756:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6756:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6748:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e159ff01974a922f8bf9e534f7e0e8f9779293fae6adaa5c927dfa63de0b716d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6586:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6600:4:10",
														"type": ""
													}
												],
												"src": "6435:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6914:175:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6924:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6936:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6932:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6932:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6924:4:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6959:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6977:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6982:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6973:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6973:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6986:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6969:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6969:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6963:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7004:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7019:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7027:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7015:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7015:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6997:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6997:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6997:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7051:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7062:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7047:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7047:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7071:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7079:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7067:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7067:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7040:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7040:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7040:43:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6875:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6886:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6894:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6905:4:10",
														"type": ""
													}
												],
												"src": "6785:304:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:301:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7285:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7296:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7278:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7278:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7278:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7319:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7330:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7315:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7315:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7335:2:10",
																		"type": "",
																		"value": "71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7308:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7308:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7308:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7358:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7369:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7354:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7354:18:10"
																	},
																	{
																		"hexValue": "506c6561736520617070726f766520636f6e7472616374206164647265737320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7374:34:10",
																		"type": "",
																		"value": "Please approve contract address "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7347:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7347:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7347:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7429:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7440:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7425:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7425:18:10"
																	},
																	{
																		"hexValue": "617320616c6c6f776564207370656e64657220696e207468652068657820636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7445:34:10",
																		"type": "",
																		"value": "as allowed spender in the hex co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7418:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7418:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7418:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7500:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7511:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7496:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7496:19:10"
																	},
																	{
																		"hexValue": "6e74726163742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7517:9:10",
																		"type": "",
																		"value": "ntract."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7489:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7489:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7489:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7536:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7548:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7559:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7544:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7536:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_769bc324a581d32bae070dd86fd2c1ab2684e2ee82e83c053cccfca6b9a3576a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7245:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7259:4:10",
														"type": ""
													}
												],
												"src": "7094:475:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7731:218:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7741:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7753:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7764:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7749:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7749:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7741:4:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7776:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7794:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7799:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7790:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7790:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7803:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7786:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7786:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7780:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7821:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7836:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7844:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7832:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7832:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7814:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7814:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7814:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7868:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7879:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7864:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7864:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7888:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7896:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7884:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7884:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7857:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7857:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7857:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7920:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7931:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7916:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7916:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7936:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7909:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7909:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7684:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7695:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7703:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7711:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7722:4:10",
														"type": ""
													}
												],
												"src": "7574:375:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8032:199:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8078:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8087:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8090:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8080:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8080:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8080:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8053:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8062:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8049:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8049:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8074:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8045:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8045:32:10"
															},
															"nodeType": "YulIf",
															"src": "8042:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8103:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8122:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8116:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8116:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8107:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8185:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8194:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8197:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8187:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8187:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8187:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8154:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "8175:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "8168:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8168:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8161:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8161:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8151:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8151:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8144:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8144:40:10"
															},
															"nodeType": "YulIf",
															"src": "8141:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8210:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8220:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8210:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7998:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8009:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8021:6:10",
														"type": ""
													}
												],
												"src": "7954:277:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8410:176:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8427:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8438:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8420:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8420:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8420:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8461:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8472:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8457:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8457:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8477:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8450:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8450:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8450:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8500:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8511:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8496:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8496:18:10"
																	},
																	{
																		"hexValue": "5374616b65206973206e6f7420636f6d706c657465207965742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8516:28:10",
																		"type": "",
																		"value": "Stake is not complete yet."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8489:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8489:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8489:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8554:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8566:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8577:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8562:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8562:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8554:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bdda1679ac6ed5b66ab3a9879048a48d51dab3251891d904246a4c3d339c4194__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8387:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8401:4:10",
														"type": ""
													}
												],
												"src": "8236:350:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8765:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8782:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8793:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8775:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8775:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8775:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8816:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8827:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8812:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8812:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8832:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8805:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8805:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8805:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8855:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8866:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8851:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8851:18:10"
																	},
																	{
																		"hexValue": "5374616b652068617320616c7265616479206265656e20737461727465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8871:33:10",
																		"type": "",
																		"value": "Stake has already been started."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8844:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8844:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8844:61:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8914:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8926:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8937:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8922:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8922:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8914:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f8cbac71784fc004d90673cc3e1d66b2872505de2e8d2c627a5f5a877d516d6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8742:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8756:4:10",
														"type": ""
													}
												],
												"src": "8591:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9125:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9142:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9153:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9135:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9135:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9135:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9176:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9187:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9172:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9172:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9192:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9165:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9165:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9165:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9215:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9226:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9211:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9211:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9231:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9204:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9204:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9204:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9275:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9287:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9298:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9283:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9283:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9275:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9102:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9116:4:10",
														"type": ""
													}
												],
												"src": "8951:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9486:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9503:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9514:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9496:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9496:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9496:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9537:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9548:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9533:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9533:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9553:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9526:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9526:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9526:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9576:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9587:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9572:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9572:18:10"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9592:34:10",
																		"type": "",
																		"value": "ERC20: burn amount exceeds allow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9565:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9565:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9565:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9647:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9658:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9643:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9643:18:10"
																	},
																	{
																		"hexValue": "616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9663:6:10",
																		"type": "",
																		"value": "ance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9636:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9636:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9636:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9679:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9691:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9702:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9687:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9687:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9679:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9463:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9477:4:10",
														"type": ""
													}
												],
												"src": "9312:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9891:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9908:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9919:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9901:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9901:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9901:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9942:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9953:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9938:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9938:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9958:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9931:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9931:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9931:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9981:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9992:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9977:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9977:18:10"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9997:34:10",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9970:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9970:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9970:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10052:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10063:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10048:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10048:18:10"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10068:7:10",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10041:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10041:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10041:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10085:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10097:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10108:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10093:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10093:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10085:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9868:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9882:4:10",
														"type": ""
													}
												],
												"src": "9717:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10297:249:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10314:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10325:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10307:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10307:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10307:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10348:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10359:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10344:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10344:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10364:2:10",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10337:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10337:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10337:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10387:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10398:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10383:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10383:18:10"
																	},
																	{
																		"hexValue": "4d696e74696e67205068617365206973207374696c6c206f6e676f696e67202d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10403:34:10",
																		"type": "",
																		"value": "Minting Phase is still ongoing -"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10376:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10376:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10376:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10458:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10469:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10454:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10454:18:10"
																	},
																	{
																		"hexValue": "20736565204d494e54494e475f50484153455f454e44206461792e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10474:29:10",
																		"type": "",
																		"value": " see MINTING_PHASE_END day."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10447:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10447:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10447:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10513:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10525:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10536:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10521:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10521:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10513:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48053d1b03292ac37b32556da0a537755abe6a686994a46662b9ec3b474d0995__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10274:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10288:4:10",
														"type": ""
													}
												],
												"src": "10123:423:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10725:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10742:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10753:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10735:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10735:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10735:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10776:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10787:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10772:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10772:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10792:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10765:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10765:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10765:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10815:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10826:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10811:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10811:18:10"
																	},
																	{
																		"hexValue": "596f7520646f206e6f7420686176652074686174206d756368204d4158492e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10831:33:10",
																		"type": "",
																		"value": "You do not have that much MAXI."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10804:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10804:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10804:61:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10874:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10886:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10897:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10882:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10882:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10874:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a9456f43b9e93b34f701ff610e4d10b6ec2a2b593c85ec285ac8ca03dac6a317__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10702:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10716:4:10",
														"type": ""
													}
												],
												"src": "10551:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11040:145:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11050:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11062:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11073:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11058:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11058:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11050:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11092:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11107:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11123:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11128:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "11119:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11119:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11132:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "11115:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11115:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11103:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11085:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11085:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11085:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11156:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11167:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11152:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11152:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11172:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11145:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11145:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11145:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11001:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11012:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11020:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11031:4:10",
														"type": ""
													}
												],
												"src": "10911:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11364:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11381:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11392:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11374:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11374:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11374:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11415:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11426:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11411:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11411:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11431:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11404:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11404:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11404:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11454:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11465:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11450:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11450:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11470:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11443:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11443:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11443:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11525:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11536:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11521:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11521:18:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11541:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11514:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11514:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11514:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11559:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11571:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11582:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11567:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11567:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11559:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11341:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11355:4:10",
														"type": ""
													}
												],
												"src": "11190:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11771:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11788:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11799:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11781:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11781:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11781:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11822:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11833:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11818:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11818:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11838:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11811:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11811:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11811:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11861:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11872:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11857:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11857:18:10"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11877:34:10",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11850:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11850:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11850:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11932:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11943:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11928:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11928:18:10"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11948:6:10",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11921:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11921:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11921:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11964:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11976:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11987:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11972:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11972:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11964:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11748:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11762:4:10",
														"type": ""
													}
												],
												"src": "11597:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12176:224:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12193:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12204:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12186:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12186:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12186:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12227:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12238:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12223:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12223:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12243:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12216:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12216:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12216:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12266:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12277:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12262:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12262:18:10"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12282:34:10",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12255:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12255:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12255:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12337:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12348:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12333:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12333:18:10"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12353:4:10",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12326:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12326:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12326:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12367:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12379:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12390:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12375:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12375:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12367:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12153:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12167:4:10",
														"type": ""
													}
												],
												"src": "12002:398:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12579:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12596:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12607:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12589:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12589:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12589:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12630:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12641:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12626:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12626:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12646:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12619:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12619:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12619:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12669:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12680:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12665:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12665:18:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12685:34:10",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12658:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12658:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12658:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12740:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12751:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12736:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12736:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12756:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12729:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12729:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12729:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12773:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12785:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12796:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12781:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12781:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12773:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12556:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12570:4:10",
														"type": ""
													}
												],
												"src": "12405:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12985:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13002:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13013:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12995:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12995:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12995:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13036:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13047:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13032:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13032:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13052:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13025:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13025:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13025:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13075:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13086:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13071:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13071:18:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13091:34:10",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13064:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13064:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13064:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13146:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13157:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13142:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13142:18:10"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13162:5:10",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13135:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13135:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13135:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13177:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13189:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13200:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13185:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13185:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13177:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12962:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12976:4:10",
														"type": ""
													}
												],
												"src": "12811:399:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13389:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13406:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13417:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13399:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13399:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13399:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13440:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13451:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13436:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13436:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13456:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13429:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13429:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13429:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13479:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13490:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13475:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13475:18:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13495:34:10",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13468:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13468:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13468:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13550:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13561:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13546:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13546:18:10"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13566:8:10",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13539:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13539:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13539:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13584:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13596:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13607:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13592:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13592:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13584:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13366:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13380:4:10",
														"type": ""
													}
												],
												"src": "13215:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13796:223:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13813:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13824:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13806:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13806:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13806:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13847:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13858:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13843:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13843:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13863:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13836:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13836:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13836:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13886:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13897:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13882:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13882:18:10"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13902:34:10",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13875:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13875:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13875:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13957:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13968:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13953:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13953:18:10"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13973:3:10",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13946:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13946:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13946:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13986:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13998:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14009:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13994:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13994:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13986:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13773:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13787:4:10",
														"type": ""
													}
												],
												"src": "13622:397:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14198:224:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14215:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14226:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14208:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14208:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14208:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14249:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14260:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14245:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14245:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14265:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14238:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14238:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14238:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14288:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14299:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14284:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14284:18:10"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14304:34:10",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14277:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14277:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14277:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14359:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14370:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14355:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14355:18:10"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14375:4:10",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14348:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14348:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14348:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14389:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14401:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14412:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14397:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14397:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14389:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14175:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14189:4:10",
														"type": ""
													}
												],
												"src": "14024:398:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14476:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14486:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14498:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14501:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14494:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14494:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14486:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14527:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14529:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14529:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14529:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "14518:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14524:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14515:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14515:11:10"
															},
															"nodeType": "YulIf",
															"src": "14512:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14458:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14461:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14467:4:10",
														"type": ""
													}
												],
												"src": "14427:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14687:138:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14697:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14709:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14720:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14705:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14705:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14697:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14739:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14750:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14732:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14732:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14732:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14777:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14788:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14773:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14773:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14797:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14805:12:10",
																				"type": "",
																				"value": "0xffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14793:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14793:25:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14766:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14766:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14766:53:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint40__to_t_uint256_t_uint40__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14648:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14659:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14667:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14678:4:10",
														"type": ""
													}
												],
												"src": "14560:265:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14959:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14969:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14981:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14992:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14977:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14977:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14969:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15011:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15022:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15004:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15004:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15004:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15049:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15060:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15045:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15045:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15065:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15038:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15038:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15038:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14920:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14931:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14939:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14950:4:10",
														"type": ""
													}
												],
												"src": "14830:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15257:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15274:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15285:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15267:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15267:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15267:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15308:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15319:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15304:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15304:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15324:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15297:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15297:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15297:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15347:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15358:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15343:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15343:18:10"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15363:33:10",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15336:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15336:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15336:61:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15406:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15418:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15429:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15414:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15414:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15406:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15234:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15248:4:10",
														"type": ""
													}
												],
												"src": "15083:355:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint40(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_e159ff01974a922f8bf9e534f7e0e8f9779293fae6adaa5c927dfa63de0b716d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Minting Phase is Done\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_769bc324a581d32bae070dd86fd2c1ab2684e2ee82e83c053cccfca6b9a3576a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 71)\n        mstore(add(headStart, 64), \"Please approve contract address \")\n        mstore(add(headStart, 96), \"as allowed spender in the hex co\")\n        mstore(add(headStart, 128), \"ntract.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_bdda1679ac6ed5b66ab3a9879048a48d51dab3251891d904246a4c3d339c4194__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Stake is not complete yet.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f8cbac71784fc004d90673cc3e1d66b2872505de2e8d2c627a5f5a877d516d6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Stake has already been started.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds allow\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_48053d1b03292ac37b32556da0a537755abe6a686994a46662b9ec3b474d0995__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"Minting Phase is still ongoing -\")\n        mstore(add(headStart, 96), \" see MINTING_PHASE_END day.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a9456f43b9e93b34f701ff610e4d10b6ec2a2b593c85ec285ac8ca03dac6a317__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"You do not have that much MAXI.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint40__to_t_uint256_t_uint40__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101ef5760003560e01c8063715018a61161010f578063a9059cbb116100a2578063db14122211610071578063db141222146103bd578063dd62ed3e146103c5578063e7644fb9146103fe578063f2fde38b1461041157600080fd5b8063a9059cbb14610387578063ba777bcc1461039a578063d2dea365146103a2578063d720d871146103b557600080fd5b806388b022c6116100de57806388b022c6146103465780638da5cb5b1461035157806395d89b411461036c578063a457c2d71461037457600080fd5b8063715018a61461031b578063751279b91461032357806379cc67901461032b57806379f82bde1461033e57600080fd5b80633950935111610187578063488b478311610156578063488b4783146102cf5780634953a509146102d7578063669d751e146102ea57806370a08231146102f257600080fd5b8063395093511461028c57806342966c681461029f5780634537523c146102b457806346cbbe9e146102c757600080fd5b806318160ddd116101c357806318160ddd1461025a57806323b872dd146102625780632b11551a14610275578063313ce5671461027d57600080fd5b80622c1a9e146101f4578063037c3f5d1461021a57806306fdde0314610222578063095ea7b314610237575b600080fd5b6102076102023660046118c1565b610424565b6040519081526020015b60405180910390f35b600754610207565b61022a610476565b60405161021191906118ed565b61024a610245366004611957565b610508565b6040519015158152602001610211565b600254610207565b61024a610270366004611981565b61051f565b600b54610207565b60405160088152602001610211565b61024a61029a366004611957565b6105ce565b6102b26102ad3660046119bd565b61060a565b005b6102b26102c23660046119bd565b610617565b610207610867565b600654610207565b6102b26102e53660046119d6565b6108e1565b610207610b12565b610207610300366004611a10565b6001600160a01b031660009081526020819052604090205490565b6102b2610b85565b600a54610207565b6102b2610339366004611957565b610beb565b610207610c71565b60085460ff1661024a565b6005546040516001600160a01b039091168152602001610211565b61022a610ca2565b61024a610382366004611957565b610cb1565b61024a610395366004611957565b610d4a565b6102b2610d57565b6102076103b03660046119bd565b610f2f565b610207610f5b565b600954610207565b6102076103d3366004611a32565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102b261040c3660046119bd565b610f9a565b6102b261041f366004611a10565b6110b4565b600080610432836001611a7b565b61043d90600a611b72565b6104479086611b7e565b90506000600a6104578684611b9d565b610462906005611a7b565b61046c9190611b9d565b9695505050505050565b60606003805461048590611bbf565b80601f01602080910402602001604051908101604052809291908181526020018280546104b190611bbf565b80156104fe5780601f106104d3576101008083540402835291602001916104fe565b820191906000526020600020905b8154815290600101906020018083116104e157829003601f168201915b5050505050905090565b600061051533848461117c565b5060015b92915050565b600061052c8484846112a0565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105b65760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6105c3853385840361117c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610515918590610605908690611a7b565b61117c565b610614338261146e565b50565b600754600f60009054906101000a90046001600160a01b03166001600160a01b0316635c9302c96040518163ffffffff1660e01b8152600401602060405180830381865afa15801561066d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106919190611bf9565b11156106d75760405162461bcd60e51b81526020600482015260156024820152744d696e74696e6720506861736520697320446f6e6560581b60448201526064016105ad565b601054600e54604051636eb1769f60e11b81523360048201526001600160a01b0391821660248201528392919091169063dd62ed3e90604401602060405180830381865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190611bf9565b10156107d55760405162461bcd60e51b815260206004820152604760248201527f506c6561736520617070726f766520636f6e747261637420616464726573732060448201527f617320616c6c6f776564207370656e64657220696e207468652068657820636f606482015266373a3930b1ba1760c91b608482015260a4016105ad565b601054600e546040516323b872dd60e01b815233600482018190526001600160a01b039283166024830152604482018590529291909116906323b872dd906064016020604051808303816000875af1158015610835573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108599190611c12565b50610863826115bc565b5050565b600080601160009054906101000a90046001600160a01b03166001600160a01b0316635c9302c96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105199190611bf9565b600a54600f60009054906101000a90046001600160a01b03166001600160a01b0316635c9302c96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095b9190611bf9565b116109a85760405162461bcd60e51b815260206004820152601a60248201527f5374616b65206973206e6f7420636f6d706c657465207965742e00000000000060448201526064016105ad565b60085460ff16151560011480156109c75750600854610100900460ff16155b610a135760405162461bcd60e51b815260206004820152601f60248201527f5374616b652068617320616c7265616479206265656e20737461727465642e0060448201526064016105ad565b610a1d82826115c6565b6008805461ff0019166101001790556010546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a999190611bf9565b90506000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aff9190611bf9565b9050610b09611635565b600b5550505050565b6010546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a08231906024015b602060405180830381865afa158015610b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b809190611bf9565b905090565b6005546001600160a01b03163314610bdf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105ad565b610be96000611724565b565b6000610bf783336103d3565b905081811015610c555760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b60648201526084016105ad565b610c62833384840361117c565b610c6c838361146e565b505050565b60115460405163033060d960e41b81523060048201526000916001600160a01b0316906333060d9090602401610b3f565b60606004805461048590611bbf565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610d335760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105ad565b610d40338585840361117c565b5060019392505050565b60006105153384846112a0565b60085460ff1615610daa5760405162461bcd60e51b815260206004820152601f60248201527f5374616b652068617320616c7265616479206265656e20737461727465642e0060448201526064016105ad565b600f5460408051635c9302c960e01b815290516000926001600160a01b031691635c9302c99160048083019260209291908290030181865afa158015610df4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e189190611bf9565b90506007548111610e915760405162461bcd60e51b815260206004820152603b60248201527f4d696e74696e67205068617365206973207374696c6c206f6e676f696e67202d60448201527f20736565204d494e54494e475f50484153455f454e44206461792e000000000060648201526084016105ad565b6010546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efe9190611bf9565b9050610f0981611776565b6008805460ff191660011790556009829055600c54610f289083611a7b565b600a555050565b600b5460009081610f408285611b7e565b90506000610f52826127106004610424565b95945050505050565b601054600e54604051636eb1769f60e11b81523360048201526001600160a01b039182166024820152600092919091169063dd62ed3e90604401610b3f565b60085460ff161580610fb9575060085460ff6101009091041615156001145b1561061457336000908152602081905260409020548181101561101e5760405162461bcd60e51b815260206004820152601f60248201527f596f7520646f206e6f7420686176652074686174206d756368204d4158492e0060448201526064016105ad565b6000600b548361102e9190611b7e565b90506110398361060a565b60115460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561108a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ae9190611c12565b50505050565b6005546001600160a01b0316331461110e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105ad565b6001600160a01b0381166111735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ad565b61061481611724565b6001600160a01b0383166111de5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105ad565b6001600160a01b03821661123f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105ad565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166113045760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105ad565b6001600160a01b0382166113665760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105ad565b6001600160a01b038316600090815260208190526040902054818110156113de5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105ad565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611415908490611a7b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161146191815260200190565b60405180910390a36110ae565b6001600160a01b0382166114ce5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105ad565b6001600160a01b038216600090815260208190526040902054818110156115425760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105ad565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611571908490611c34565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b61061433826117e2565b601154604051631a1804d160e11b81526004810184905264ffffffffff831660248201526001600160a01b039091169063343009a290604401600060405180830381600087803b15801561161957600080fd5b505af115801561162d573d6000803e3d6000fd5b505050505050565b6010546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611682573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a69190611bf9565b90506000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170c9190611bf9565b9050600061171c83836008610424565b949350505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b601154600c54604051630a54871760e31b81526004810184905260248101919091526001600160a01b03909116906352a438b890604401600060405180830381600087803b1580156117c757600080fd5b505af11580156117db573d6000803e3d6000fd5b5050505050565b6001600160a01b0382166118385760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105ad565b806002600082825461184a9190611a7b565b90915550506001600160a01b03821660009081526020819052604081208054839290611877908490611a7b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000806000606084860312156118d657600080fd5b505081359360208301359350604090920135919050565b600060208083528351808285015260005b8181101561191a578581018301518582016040015282016118fe565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461195257600080fd5b919050565b6000806040838503121561196a57600080fd5b6119738361193b565b946020939093013593505050565b60008060006060848603121561199657600080fd5b61199f8461193b565b92506119ad6020850161193b565b9150604084013590509250925092565b6000602082840312156119cf57600080fd5b5035919050565b600080604083850312156119e957600080fd5b82359150602083013564ffffffffff81168114611a0557600080fd5b809150509250929050565b600060208284031215611a2257600080fd5b611a2b8261193b565b9392505050565b60008060408385031215611a4557600080fd5b611a4e8361193b565b9150611a5c6020840161193b565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561051957610519611a65565b600181815b80851115611ac9578160001904821115611aaf57611aaf611a65565b80851615611abc57918102915b93841c9390800290611a93565b509250929050565b600082611ae057506001610519565b81611aed57506000610519565b8160018114611b035760028114611b0d57611b29565b6001915050610519565b60ff841115611b1e57611b1e611a65565b50506001821b610519565b5060208310610133831016604e8410600b8410161715611b4c575081810a610519565b611b568383611a8e565b8060001904821115611b6a57611b6a611a65565b029392505050565b6000611a2b8383611ad1565b6000816000190483118215151615611b9857611b98611a65565b500290565b600082611bba57634e487b7160e01b600052601260045260246000fd5b500490565b600181811c90821680611bd357607f821691505b602082108103611bf357634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611c0b57600080fd5b5051919050565b600060208284031215611c2457600080fd5b81518015158114611a2b57600080fd5b8181038181111561051957610519611a6556fea2646970667358221220d67b42144c868f9a23d0f7e24499c0f24e0beec6fd74910a75bf8a23c9df4fcc64736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDB141222 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDB141222 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xE7644FB9 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xBA777BCC EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xD2DEA365 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xD720D871 EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88B022C6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x88B022C6 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x751279B9 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x79F82BDE EQ PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x488B4783 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x488B4783 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x4953A509 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x669D751E EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x4537523C EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x46CBBE9E EQ PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x2B11551A EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x2C1A9E EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x37C3F5D EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x207 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x22A PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x24A PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x211 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x1981 JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x211 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x19BD JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BD JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST PUSH2 0x207 PUSH2 0x867 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x207 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x207 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST PUSH2 0x207 PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH2 0x24A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x211 JUMP JUMPDEST PUSH2 0x22A PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0xCB1 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x207 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BD JUMP JUMPDEST PUSH2 0xF2F JUMP JUMPDEST PUSH2 0x207 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x207 JUMP JUMPDEST PUSH2 0x207 PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x19BD JUMP JUMPDEST PUSH2 0xF9A JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x432 DUP4 PUSH1 0x1 PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0x43D SWAP1 PUSH1 0xA PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x447 SWAP1 DUP7 PUSH2 0x1B7E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH2 0x457 DUP7 DUP5 PUSH2 0x1B9D JUMP JUMPDEST PUSH2 0x462 SWAP1 PUSH1 0x5 PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x485 SWAP1 PUSH2 0x1BBF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B1 SWAP1 PUSH2 0x1BBF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x515 CALLER DUP5 DUP5 PUSH2 0x117C JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52C DUP5 DUP5 DUP5 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C3 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x117C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x515 SWAP2 DUP6 SWAP1 PUSH2 0x605 SWAP1 DUP7 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0x117C JUMP JUMPDEST PUSH2 0x614 CALLER DUP3 PUSH2 0x146E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C9302C9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x66D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x691 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST GT ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D696E74696E6720506861736520697320446F6E65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE DUP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x751 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST LT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x47 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6561736520617070726F766520636F6E7472616374206164647265737320 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x617320616C6C6F776564207370656E64657220696E207468652068657820636F PUSH1 0x64 DUP3 ADD MSTORE PUSH7 0x373A3930B1BA17 PUSH1 0xC9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x835 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST POP PUSH2 0x863 DUP3 PUSH2 0x15BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x11 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C9302C9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C9302C9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x937 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x95B SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST GT PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B65206973206E6F7420636F6D706C657465207965742E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x9C7 JUMPI POP PUSH1 0x8 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B652068617320616C7265616479206265656E20737461727465642E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH2 0xA1D DUP3 DUP3 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA99 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xADB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH2 0xB09 PUSH2 0x1635 JUMP JUMPDEST PUSH1 0xB SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH2 0xBE9 PUSH1 0x0 PUSH2 0x1724 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF7 DUP4 CALLER PUSH2 0x3D3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH2 0xC62 DUP4 CALLER DUP5 DUP5 SUB PUSH2 0x117C JUMP JUMPDEST PUSH2 0xC6C DUP4 DUP4 PUSH2 0x146E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0x33060D9 PUSH1 0xE4 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x33060D90 SWAP1 PUSH1 0x24 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x485 SWAP1 PUSH2 0x1BBF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xD33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH2 0xD40 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x117C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x515 CALLER DUP5 DUP5 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B652068617320616C7265616479206265656E20737461727465642E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5C9302C9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x5C9302C9 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 GT PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E67205068617365206973207374696C6C206F6E676F696E67202D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20736565204D494E54494E475F50484153455F454E44206461792E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEFE SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH2 0xF09 DUP2 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x9 DUP3 SWAP1 SSTORE PUSH1 0xC SLOAD PUSH2 0xF28 SWAP1 DUP4 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0xA SSTORE POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP2 PUSH2 0xF40 DUP3 DUP6 PUSH2 0x1B7E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF52 DUP3 PUSH2 0x2710 PUSH1 0x4 PUSH2 0x424 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0xFB9 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0x614 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x101E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F7420686176652074686174206D756368204D4158492E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD DUP4 PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST SWAP1 POP PUSH2 0x1039 DUP4 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x108A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10AE SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH2 0x614 DUP2 PUSH2 0x1724 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x123F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1304 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1366 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x13DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1415 SWAP1 DUP5 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1461 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1571 SWAP1 DUP5 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x614 CALLER DUP3 PUSH2 0x17E2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A1804D1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH5 0xFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x343009A2 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x162D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1682 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16A6 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x170C SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x171C DUP4 DUP4 PUSH1 0x8 PUSH2 0x424 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xA548717 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x52A438B8 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5AD JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x184A SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1877 SWAP1 DUP5 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x191A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x18FE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x196A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1973 DUP4 PUSH2 0x193B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x199F DUP5 PUSH2 0x193B JUMP JUMPDEST SWAP3 POP PUSH2 0x19AD PUSH1 0x20 DUP6 ADD PUSH2 0x193B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1A05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A2B DUP3 PUSH2 0x193B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A4E DUP4 PUSH2 0x193B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5C PUSH1 0x20 DUP5 ADD PUSH2 0x193B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x519 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1AC9 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1AAF JUMPI PUSH2 0x1AAF PUSH2 0x1A65 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1ABC JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1A93 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1AE0 JUMPI POP PUSH1 0x1 PUSH2 0x519 JUMP JUMPDEST DUP2 PUSH2 0x1AED JUMPI POP PUSH1 0x0 PUSH2 0x519 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1B03 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1B0D JUMPI PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x519 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1B1E JUMPI PUSH2 0x1B1E PUSH2 0x1A65 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x519 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1B4C JUMPI POP DUP2 DUP2 EXP PUSH2 0x519 JUMP JUMPDEST PUSH2 0x1B56 DUP4 DUP4 PUSH2 0x1A8E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1B6A JUMPI PUSH2 0x1B6A PUSH2 0x1A65 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2B DUP4 DUP4 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B98 JUMPI PUSH2 0x1B98 PUSH2 0x1A65 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BBA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1BD3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BF3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1A2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x519 PUSH2 0x1A65 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 PUSH28 0x42144C868F9A23D0F7E24499C0F24E0BEEC6FD74910A75BF8A23C9DF 0x4F 0xCC PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "1057:5725:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2399:350;;;;;;:::i;:::-;;:::i;:::-;;;481:25:10;;;469:2;454:18;2399:350:9;;;;;;;;3134:90;3205:17;;3134:90;;2141:98:1;;;:::i;:::-;;;;;;;:::i;4238:166::-;;;;;;:::i;:::-;;:::i;:::-;;;1672:14:10;;1665:22;1647:41;;1635:2;1620:18;4238:166:1;1507:187:10;3229:106:1;3316:12;;3229:106;;4871:478;;;;;;:::i;:::-;;:::i;3493:84:9:-;3560:15;;3493:84;;1747:132;;;1874:1;2174:36:10;;2162:2;2147:18;1747:132:9;2032:184:10;5744:212:1;;;;;;:::i;:::-;;:::i;563:89:3:-;;;;;;:::i;:::-;;:::i;:::-;;4172:424:9;;;;;;:::i;:::-;;:::i;3582:121::-;;;:::i;3035:94::-;3108:19;;3035:94;;6129:640;;;;;;:::i;:::-;;:::i;3708:99::-;;;:::i;3393:125:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3493:18:1;3467:7;3493:18;;;;;;;;;;;;3393:125;1668:101:0;;;:::i;3318:79:9:-;3382:13;;3318:79;;958:361:3;;;;;;:::i;:::-;;:::i;3936:115:9:-;;;:::i;3407:81::-;3469:17;;;;3407:81;;1036:85:0;1108:6;;1036:85;;-1:-1:-1;;;;;1108:6:0;;;3094:51:10;;3082:2;3067:18;1036:85:0;2948:203:10;2352:102:1;;;:::i;6443:405::-;;;;;;:::i;:::-;;:::i;3721:172::-;;;;;;:::i;:::-;;:::i;5267:601:9:-;;;:::i;1884:227::-;;;;;;:::i;:::-;;:::i;3812:119::-;;;:::i;3230:83::-;3296:15;;3230:83;;3951:149:1;;;;;;:::i;:::-;-1:-1:-1;;;;;4066:18:1;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149;4601:421:9;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;2399:350:9:-;2486:13;;2599:11;:9;2609:1;2599:11;:::i;:::-;2592:19;;:2;:19;:::i;:::-;2580:31;;:9;:31;:::i;:::-;2561:50;-1:-1:-1;2660:14:9;2713:2;2680:24;2693:11;2561:50;2680:24;:::i;:::-;2679:30;;2708:1;2679:30;:::i;:::-;2678:37;;;;:::i;:::-;2660:55;2399:350;-1:-1:-1;;;;;;2399:350:9:o;2141:98:1:-;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4238:166::-;4321:4;4337:39;719:10:7;4360:7:1;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:1;4238:166;;;;;:::o;4871:478::-;5007:4;5023:36;5033:6;5041:9;5052:6;5023:9;:36::i;:::-;-1:-1:-1;;;;;5097:19:1;;5070:24;5097:19;;;:11;:19;;;;;;;;719:10:7;5097:33:1;;;;;;;;5148:26;;;;5140:79;;;;-1:-1:-1;;;5140:79:1;;6039:2:10;5140:79:1;;;6021:21:10;6078:2;6058:18;;;6051:30;6117:34;6097:18;;;6090:62;-1:-1:-1;;;6168:18:10;;;6161:38;6216:19;;5140:79:1;;;;;;;;;5253:57;5262:6;719:10:7;5303:6:1;5284:16;:25;5253:8;:57::i;:::-;-1:-1:-1;5338:4:1;;4871:478;-1:-1:-1;;;;4871:478:1:o;5744:212::-;719:10:7;5832:4:1;5880:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5880:34:1;;;;;;;;;;5832:4;;5848:80;;5871:7;;5880:47;;5917:10;;5880:47;:::i;:::-;5848:8;:80::i;563:89:3:-;618:27;719:10:7;638:6:3;618:5;:27::i;:::-;563:89;:::o;4172:424:9:-;4268:17;;4241:11;;;;;;;;;-1:-1:-1;;;;;4241:11:9;-1:-1:-1;;;;;4232:32:9;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;4224:87;;;;-1:-1:-1;;;4224:87:9;;6637:2:10;4224:87:9;;;6619:21:10;6676:2;6656:18;;;6649:30;-1:-1:-1;;;6695:18:10;;;6688:51;6756:18;;4224:87:9;6435:345:10;4224:87:9;4329:12;;4364:16;;4329:52;;-1:-1:-1;;;4329:52:9;;4352:10;4329:52;;;6997:34:10;-1:-1:-1;;;;;4364:16:9;;;7047:18:10;;;7040:43;4383:6:9;;4329:12;;;;;:22;;6932:18:10;;4329:52:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;4321:144;;;;-1:-1:-1;;;4321:144:9;;7296:2:10;4321:144:9;;;7278:21:10;7335:2;7315:18;;;7308:30;7374:34;7354:18;;;7347:62;7445:34;7425:18;;;7418:62;-1:-1:-1;;;7496:19:10;;;7489:38;7544:19;;4321:144:9;7094:475:10;4321:144:9;4510:12;;4542:16;;4510:57;;-1:-1:-1;;;4510:57:9;;4490:10;4510:57;;;7814:34:10;;;-1:-1:-1;;;;;4542:16:9;;;7864:18:10;;;7857:43;7916:18;;;7909:34;;;4490:10:9;4510:12;;;;;:25;;7749:18:10;;4510:57:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4577:12;4582:6;4577:4;:12::i;:::-;4214:382;4172:424;:::o;3582:121::-;3626:7;3644:11;3658:5;;;;;;;;;-1:-1:-1;;;;;3658:5:9;-1:-1:-1;;;;;3658:16:9;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6129:640::-;6344:13;;6318:11;;;;;;;;;-1:-1:-1;;;;;6318:11:9;-1:-1:-1;;;;;6309:32:9;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;6301:87;;;;-1:-1:-1;;;6301:87:9;;8438:2:10;6301:87:9;;;8420:21:10;8477:2;8457:18;;;8450:30;8516:28;8496:18;;;8489:56;8562:18;;6301:87:9;8236:350:10;6301:87:9;6406:17;;;;:23;;:17;:23;:49;;;;-1:-1:-1;6433:15:9;;;;;;;:22;6406:49;6398:93;;;;-1:-1:-1;;;6398:93:9;;8793:2:10;6398:93:9;;;8775:21:10;8832:2;8812:18;;;8805:30;8871:33;8851:18;;;8844:61;8922:18;;6398:93:9;8591:355:10;6398:93:9;6501:38;6514:10;6526:12;6501;:38::i;:::-;6549:15;:20;;-1:-1:-1;;6549:20:9;;;;;6601:12;;:37;;-1:-1:-1;;;6601:37:9;;6632:4;6601:37;;;3094:51:10;-1:-1:-1;;;;;;;6601:12:9;;:22;;3067:18:10;;6601:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6579:59;;6648:18;6684:4;-1:-1:-1;;;;;6669:33:9;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6648:56;;6732:21;:19;:21::i;:::-;6714:15;:39;-1:-1:-1;;;;6129:640:9:o;3708:99::-;3771:12;;:34;;-1:-1:-1;;;3771:34:9;;3794:10;3771:34;;;3094:51:10;3754:7:9;;-1:-1:-1;;;;;3771:12:9;;:22;;3067:18:10;;3771:34:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3764:41;;3708:99;:::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;9153:2:10;1240:68:0;;;9135:21:10;;;9172:18;;;9165:30;9231:34;9211:18;;;9204:62;9283:18;;1240:68:0;8951:356:10;1240:68:0;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;958:361:3:-;1034:24;1061:32;1071:7;719:10:7;3951:149:1;:::i;1061:32:3:-;1034:59;;1131:6;1111:16;:26;;1103:75;;;;-1:-1:-1;;;1103:75:3;;9514:2:10;1103:75:3;;;9496:21:10;9553:2;9533:18;;;9526:30;9592:34;9572:18;;;9565:62;-1:-1:-1;;;9643:18:10;;;9636:34;9687:19;;1103:75:3;9312:400:10;1103:75:3;1212:58;1221:7;719:10:7;1263:6:3;1244:16;:25;1212:8;:58::i;:::-;1290:22;1296:7;1305:6;1290:5;:22::i;:::-;1024:295;958:361;;:::o;3936:115:9:-;4009:5;;:31;;-1:-1:-1;;;4009:31:9;;4034:4;4009:31;;;3094:51:10;3979:7:9;;-1:-1:-1;;;;;4009:5:9;;:16;;3067:18:10;;4009:31:9;2948:203:10;2352:102:1;2408:13;2440:7;2433:14;;;;;:::i;6443:405::-;719:10:7;6536:4:1;6579:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6579:34:1;;;;;;;;;;6631:35;;;;6623:85;;;;-1:-1:-1;;;6623:85:1;;9919:2:10;6623:85:1;;;9901:21:10;9958:2;9938:18;;;9931:30;9997:34;9977:18;;;9970:62;-1:-1:-1;;;10048:18:10;;;10041:35;10093:19;;6623:85:1;9717:401:10;6623:85:1;6742:67;719:10:7;6765:7:1;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:1;;6443:405;-1:-1:-1;;;6443:405:1:o;3721:172::-;3807:4;3823:42;719:10:7;3847:9:1;3858:6;3823:9;:42::i;5267:601:9:-;5312:17;;;;:24;5304:68;;;;-1:-1:-1;;;5304:68:9;;8793:2:10;5304:68:9;;;8775:21:10;8832:2;8812:18;;;8805:30;8871:33;8851:18;;;8844:61;8922:18;;5304:68:9;8591:355:10;5304:68:9;5413:11;;5404:34;;;-1:-1:-1;;;5404:34:9;;;;5382:19;;-1:-1:-1;;;;;5413:11:9;;5404:32;;:34;;;;;;;;;;;;;;5413:11;5404:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5382:56;;5468:17;;5456:11;:29;5448:101;;;;-1:-1:-1;;;5448:101:9;;10325:2:10;5448:101:9;;;10307:21:10;10364:2;10344:18;;;10337:30;10403:34;10383:18;;;10376:62;10474:29;10454:18;;;10447:57;10521:19;;5448:101:9;10123:423:10;5448:101:9;5576:12;;:37;;-1:-1:-1;;;5576:37:9;;5607:4;5576:37;;;3094:51:10;5559:14:9;;-1:-1:-1;;;;;5576:12:9;;:22;;3067:18:10;;5576:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5559:54;;5727:17;5737:6;5727:9;:17::i;:::-;5754;:22;;-1:-1:-1;;5754:22:9;5772:4;5754:22;;;5786:15;:27;;;5849:12;;5837:24;;5802:11;5837:24;:::i;:::-;5823:13;:38;-1:-1:-1;;5267:601:9:o;1884:227::-;1977:15;;1946:7;;;2020:6;1977:15;2020:3;:6;:::i;:::-;2002:24;;2036:15;2054:26;2062:7;2071:5;2078:1;2054:7;:26::i;:::-;2036:44;1884:227;-1:-1:-1;;;;;1884:227:9:o;3812:119::-;3877:12;;3912:16;;3877:52;;-1:-1:-1;;;3877:52:9;;3900:10;3877:52;;;6997:34:10;-1:-1:-1;;;;;3912:16:9;;;7047:18:10;;;7040:43;3860:7:9;;3877:12;;;;;:22;;6932:18:10;;3877:52:9;6785:304:10;4601:421:9;4662:17;;;;:24;;:49;;-1:-1:-1;4690:15:9;;;;;;;;:21;;:15;:21;4662:49;4658:358;;;4756:10;4727:16;3493:18:1;;;;;;;;;;;4789:21:9;;;;4781:65;;;;-1:-1:-1;;;4781:65:9;;10753:2:10;4781:65:9;;;10735:21:10;10792:2;10772:18;;;10765:30;10831:33;10811:18;;;10804:61;10882:18;;4781:65:9;10551:355:10;4781:65:9;4860:25;4900:15;;4888:11;:27;;;;:::i;:::-;4860:55;;4929:17;4934:11;4929:4;:17::i;:::-;4960:5;;:45;;-1:-1:-1;;;4960:45:9;;4975:10;4960:45;;;11085:51:10;11152:18;;;11145:34;;;-1:-1:-1;;;;;4960:5:9;;;;:14;;11058:18:10;;4960:45:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4713:303;;4601:421;:::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;9153:2:10;1240:68:0;;;9135:21:10;;;9172:18;;;9165:30;9231:34;9211:18;;;9204:62;9283:18;;1240:68:0;8951:356:10;1240:68:0;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;11392:2:10;1998:73:0::1;::::0;::::1;11374:21:10::0;11431:2;11411:18;;;11404:30;11470:34;11450:18;;;11443:62;-1:-1:-1;;;11521:18:10;;;11514:36;11567:19;;1998:73:0::1;11190:402:10::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;10019:370:1:-:0;-1:-1:-1;;;;;10150:19:1;;10142:68;;;;-1:-1:-1;;;10142:68:1;;11799:2:10;10142:68:1;;;11781:21:10;11838:2;11818:18;;;11811:30;11877:34;11857:18;;;11850:62;-1:-1:-1;;;11928:18:10;;;11921:34;11972:19;;10142:68:1;11597:400:10;10142:68:1;-1:-1:-1;;;;;10228:21:1;;10220:68;;;;-1:-1:-1;;;10220:68:1;;12204:2:10;10220:68:1;;;12186:21:10;12243:2;12223:18;;;12216:30;12282:34;12262:18;;;12255:62;-1:-1:-1;;;12333:18:10;;;12326:32;12375:19;;10220:68:1;12002:398:10;10220:68:1;-1:-1:-1;;;;;10299:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10350:32;;481:25:10;;;10350:32:1;;454:18:10;10350:32:1;;;;;;;10019:370;;;:::o;7322:713::-;-1:-1:-1;;;;;7457:20:1;;7449:70;;;;-1:-1:-1;;;7449:70:1;;12607:2:10;7449:70:1;;;12589:21:10;12646:2;12626:18;;;12619:30;12685:34;12665:18;;;12658:62;-1:-1:-1;;;12736:18:10;;;12729:35;12781:19;;7449:70:1;12405:401:10;7449:70:1;-1:-1:-1;;;;;7537:23:1;;7529:71;;;;-1:-1:-1;;;7529:71:1;;13013:2:10;7529:71:1;;;12995:21:10;13052:2;13032:18;;;13025:30;13091:34;13071:18;;;13064:62;-1:-1:-1;;;13142:18:10;;;13135:33;13185:19;;7529:71:1;12811:399:10;7529:71:1;-1:-1:-1;;;;;7693:17:1;;7669:21;7693:17;;;;;;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:1;;13417:2:10;7720:74:1;;;13399:21:10;13456:2;13436:18;;;13429:30;13495:34;13475:18;;;13468:62;-1:-1:-1;;;13546:18:10;;;13539:36;13592:19;;7720:74:1;13215:402:10;7720:74:1;-1:-1:-1;;;;;7828:17:1;;;:9;:17;;;;;;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:9;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:1;7945:6;-1:-1:-1;;;;;7936:35:1;;7964:6;7936:35;;;;481:25:10;;469:2;454:18;;335:177;7936:35:1;;;;;;;;7982:46;958:361:3;9020:576:1;-1:-1:-1;;;;;9103:21:1;;9095:67;;;;-1:-1:-1;;;9095:67:1;;13824:2:10;9095:67:1;;;13806:21:10;13863:2;13843:18;;;13836:30;13902:34;13882:18;;;13875:62;-1:-1:-1;;;13953:18:10;;;13946:31;13994:19;;9095:67:1;13622:397:10;9095:67:1;-1:-1:-1;;;;;9258:18:1;;9233:22;9258:18;;;;;;;;;;;9294:24;;;;9286:71;;;;-1:-1:-1;;;9286:71:1;;14226:2:10;9286:71:1;;;14208:21:10;14265:2;14245:18;;;14238:30;14304:34;14284:18;;;14277:62;-1:-1:-1;;;14355:18:10;;;14348:32;14397:19;;9286:71:1;14024:398:10;9286:71:1;-1:-1:-1;;;;;9391:18:1;;:9;:18;;;;;;;;;;9412:23;;;9391:44;;9455:12;:22;;9429:6;;9391:9;9455:22;;9429:6;;9455:22;:::i;:::-;;;;-1:-1:-1;;9493:37:1;;481:25:10;;;9519:1:1;;-1:-1:-1;;;;;9493:37:1;;;;;469:2:10;454:18;9493:37:1;;;;;;;1024:295:3;958:361;;:::o;4078:89:9:-;4135:25;4141:10;4153:6;4135:5;:25::i;5990:133::-;6072:5;;:40;;-1:-1:-1;;;6072:40:9;;;;;14732:25:10;;;14805:12;14793:25;;14773:18;;;14766:53;-1:-1:-1;;;;;6072:5:9;;;;:14;;14705:18:10;;6072:40:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5990:133;;:::o;2116:278::-;2209:12;;:37;;-1:-1:-1;;;2209:37:9;;2240:4;2209:37;;;3094:51:10;2169:7:9;;;;-1:-1:-1;;;;;2209:12:9;;;;:22;;3067:18:10;;2209:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2187:59;;2256:18;2292:4;-1:-1:-1;;;;;2277:33:9;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2256:56;;2322:10;2335:33;2343:11;2355:10;2366:1;2335:7;:33::i;:::-;2322:46;2116:278;-1:-1:-1;;;;2116:278:9:o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;5873:102:9:-;5927:5;;5951:12;;5927:37;;-1:-1:-1;;;5927:37:9;;;;;15004:25:10;;;15045:18;;;15038:34;;;;-1:-1:-1;;;;;5927:5:9;;;;:16;;14977:18:10;;5927:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5873:102;:::o;8311:389:1:-;-1:-1:-1;;;;;8394:21:1;;8386:65;;;;-1:-1:-1;;;8386:65:1;;15285:2:10;8386:65:1;;;15267:21:10;15324:2;15304:18;;;15297:30;15363:33;15343:18;;;15336:61;15414:18;;8386:65:1;15083:355:10;8386:65:1;8538:6;8522:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8554:18:1;;:9;:18;;;;;;;;;;:28;;8576:6;;8554:9;:28;;8576:6;;8554:28;:::i;:::-;;;;-1:-1:-1;;8597:37:1;;481:25:10;;;-1:-1:-1;;;;;8597:37:1;;;8614:1;;8597:37;;469:2:10;454:18;8597:37:1;;;;;;;4214:382:9;4172:424;:::o;14:316:10:-;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:10;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:10;305:18;;;292:32;;14:316;-1:-1:-1;14:316:10:o;517:548::-;629:4;658:2;687;676:9;669:21;719:6;713:13;762:6;757:2;746:9;742:18;735:34;787:1;797:140;811:6;808:1;805:13;797:140;;;906:14;;;902:23;;896:30;872:17;;;891:2;868:26;861:66;826:10;;797:140;;;801:3;986:1;981:2;972:6;961:9;957:22;953:31;946:42;1056:2;1049;1045:7;1040:2;1032:6;1028:15;1024:29;1013:9;1009:45;1005:54;997:62;;;;517:548;;;;:::o;1070:173::-;1138:20;;-1:-1:-1;;;;;1187:31:10;;1177:42;;1167:70;;1233:1;1230;1223:12;1167:70;1070:173;;;:::o;1248:254::-;1316:6;1324;1377:2;1365:9;1356:7;1352:23;1348:32;1345:52;;;1393:1;1390;1383:12;1345:52;1416:29;1435:9;1416:29;:::i;:::-;1406:39;1492:2;1477:18;;;;1464:32;;-1:-1:-1;;;1248:254:10:o;1699:328::-;1776:6;1784;1792;1845:2;1833:9;1824:7;1820:23;1816:32;1813:52;;;1861:1;1858;1851:12;1813:52;1884:29;1903:9;1884:29;:::i;:::-;1874:39;;1932:38;1966:2;1955:9;1951:18;1932:38;:::i;:::-;1922:48;;2017:2;2006:9;2002:18;1989:32;1979:42;;1699:328;;;;;:::o;2221:180::-;2280:6;2333:2;2321:9;2312:7;2308:23;2304:32;2301:52;;;2349:1;2346;2339:12;2301:52;-1:-1:-1;2372:23:10;;2221:180;-1:-1:-1;2221:180:10:o;2406:346::-;2473:6;2481;2534:2;2522:9;2513:7;2509:23;2505:32;2502:52;;;2550:1;2547;2540:12;2502:52;2586:9;2573:23;2563:33;;2646:2;2635:9;2631:18;2618:32;2690:12;2683:5;2679:24;2672:5;2669:35;2659:63;;2718:1;2715;2708:12;2659:63;2741:5;2731:15;;;2406:346;;;;;:::o;2757:186::-;2816:6;2869:2;2857:9;2848:7;2844:23;2840:32;2837:52;;;2885:1;2882;2875:12;2837:52;2908:29;2927:9;2908:29;:::i;:::-;2898:39;2757:186;-1:-1:-1;;;2757:186:10:o;3156:260::-;3224:6;3232;3285:2;3273:9;3264:7;3260:23;3256:32;3253:52;;;3301:1;3298;3291:12;3253:52;3324:29;3343:9;3324:29;:::i;:::-;3314:39;;3372:38;3406:2;3395:9;3391:18;3372:38;:::i;:::-;3362:48;;3156:260;;;;;:::o;3421:127::-;3482:10;3477:3;3473:20;3470:1;3463:31;3513:4;3510:1;3503:15;3537:4;3534:1;3527:15;3553:125;3618:9;;;3639:10;;;3636:36;;;3652:18;;:::i;3683:422::-;3772:1;3815:5;3772:1;3829:270;3850:7;3840:8;3837:21;3829:270;;;3909:4;3905:1;3901:6;3897:17;3891:4;3888:27;3885:53;;;3918:18;;:::i;:::-;3968:7;3958:8;3954:22;3951:55;;;3988:16;;;;3951:55;4067:22;;;;4027:15;;;;3829:270;;;3833:3;3683:422;;;;;:::o;4110:806::-;4159:5;4189:8;4179:80;;-1:-1:-1;4230:1:10;4244:5;;4179:80;4278:4;4268:76;;-1:-1:-1;4315:1:10;4329:5;;4268:76;4360:4;4378:1;4373:59;;;;4446:1;4441:130;;;;4353:218;;4373:59;4403:1;4394:10;;4417:5;;;4441:130;4478:3;4468:8;4465:17;4462:43;;;4485:18;;:::i;:::-;-1:-1:-1;;4541:1:10;4527:16;;4556:5;;4353:218;;4655:2;4645:8;4642:16;4636:3;4630:4;4627:13;4623:36;4617:2;4607:8;4604:16;4599:2;4593:4;4590:12;4586:35;4583:77;4580:159;;;-1:-1:-1;4692:19:10;;;4724:5;;4580:159;4771:34;4796:8;4790:4;4771:34;:::i;:::-;4841:6;4837:1;4833:6;4829:19;4820:7;4817:32;4814:58;;;4852:18;;:::i;:::-;4890:20;;4110:806;-1:-1:-1;;;4110:806:10:o;4921:131::-;4981:5;5010:36;5037:8;5031:4;5010:36;:::i;5057:168::-;5097:7;5163:1;5159;5155:6;5151:14;5148:1;5145:21;5140:1;5133:9;5126:17;5122:45;5119:71;;;5170:18;;:::i;:::-;-1:-1:-1;5210:9:10;;5057:168::o;5230:217::-;5270:1;5296;5286:132;;5340:10;5335:3;5331:20;5328:1;5321:31;5375:4;5372:1;5365:15;5403:4;5400:1;5393:15;5286:132;-1:-1:-1;5432:9:10;;5230:217::o;5452:380::-;5531:1;5527:12;;;;5574;;;5595:61;;5649:4;5641:6;5637:17;5627:27;;5595:61;5702:2;5694:6;5691:14;5671:18;5668:38;5665:161;;5748:10;5743:3;5739:20;5736:1;5729:31;5783:4;5780:1;5773:15;5811:4;5808:1;5801:15;5665:161;;5452:380;;;:::o;6246:184::-;6316:6;6369:2;6357:9;6348:7;6344:23;6340:32;6337:52;;;6385:1;6382;6375:12;6337:52;-1:-1:-1;6408:16:10;;6246:184;-1:-1:-1;6246:184:10:o;7954:277::-;8021:6;8074:2;8062:9;8053:7;8049:23;8045:32;8042:52;;;8090:1;8087;8080:12;8042:52;8122:9;8116:16;8175:5;8168:13;8161:21;8154:5;8151:32;8141:60;;8197:1;8194;8187:12;14427:128;14494:9;;;14515:11;;;14512:37;;;14529:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1458600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24710",
								"balanceOf(address)": "2640",
								"burn(uint256)": "50925",
								"burnFrom(address,uint256)": "77592",
								"decimals()": "289",
								"decreaseAllowance(address,uint256)": "26999",
								"endStakeHEX(uint256,uint40)": "infinite",
								"getAllowanceHEX()": "infinite",
								"getBalanceHEX()": "infinite",
								"getMintingPhaseEndDay()": "2350",
								"getMintingPhaseStartDay()": "2326",
								"getNumStake()": "infinite",
								"getRedemptionRate()": "2371",
								"getStakeEndDay()": "2349",
								"getStakeStartDay()": "2325",
								"get_amount_redeem_hex(uint256)": "infinite",
								"get_hex_day()": "infinite",
								"hasStakeStarted()": "2349",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2368",
								"percent(uint256,uint256,uint256)": "infinite",
								"pledgeHEX(uint256)": "infinite",
								"redeemHEX(uint256)": "infinite",
								"renounceOwnership()": "28163",
								"stakeHEX()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2327",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28422"
							},
							"internal": {
								"_endStakeHEX(uint256,uint40)": "infinite",
								"_stakeHEX(uint256)": "infinite",
								"get_redemption_rate()": "infinite",
								"mint(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1057,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1057,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1057,
									"end": 6782,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2754,
									"end": 2793,
									"name": "PUSH",
									"source": 9,
									"value": "E"
								},
								{
									"begin": 2754,
									"end": 2793,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2754,
									"end": 2793,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2754,
									"end": 2793,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2754,
									"end": 2793,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2754,
									"end": 2793,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2788,
									"end": 2792,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 2754,
									"end": 2793,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2754,
									"end": 2793,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2754,
									"end": 2793,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2754,
									"end": 2793,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2799,
									"end": 2863,
									"name": "PUSH",
									"source": 9,
									"value": "F"
								},
								{
									"begin": 2799,
									"end": 2863,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2799,
									"end": 2863,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2799,
									"end": 2863,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2799,
									"end": 2863,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2821,
									"end": 2863,
									"name": "PUSH",
									"source": 9,
									"value": "2B591E99AFE9F32EAA6214F7B7629768C40EEB39"
								},
								{
									"begin": 2799,
									"end": 2863,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2799,
									"end": 2863,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2799,
									"end": 2863,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2799,
									"end": 2863,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2799,
									"end": 2863,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2799,
									"end": 2863,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2915,
									"end": 2956,
									"name": "PUSH",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2915,
									"end": 2956,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2915,
									"end": 2956,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2915,
									"end": 2956,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2915,
									"end": 2956,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2915,
									"end": 2956,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2915,
									"end": 2956,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2915,
									"end": 2956,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2915,
									"end": 2956,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2962,
									"end": 3000,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2962,
									"end": 3000,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2962,
									"end": 3000,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2962,
									"end": 3000,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2962,
									"end": 3000,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2962,
									"end": 3000,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2962,
									"end": 3000,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2962,
									"end": 3000,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2962,
									"end": 3000,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1439,
									"end": 1742,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1439,
									"end": 1742,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26BCAA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D544B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2034,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2029,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2052,
									"end": 2059,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2062,
									"end": 2069,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2059,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2052,
									"end": 2069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 921,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1550,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1531,
									"end": 1562,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1531,
									"end": 1562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1531,
									"end": 1562,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1610,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1602,
									"end": 1610,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1553,
									"end": 1562,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1610,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1592,
									"end": 1610,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1610,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1592,
									"end": 1610,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1572,
									"end": 1589,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1572,
									"end": 1610,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1620,
									"end": 1637,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1620,
									"end": 1643,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1620,
									"end": 1643,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1653,
									"end": 1676,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1653,
									"end": 1676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1653,
									"end": 1676,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1620,
									"end": 1643,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1686,
									"end": 1701,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1686,
									"end": 1703,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1703,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1703,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1725,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "C"
								},
								{
									"begin": 1713,
									"end": 1727,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1057,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1057,
									"end": 6782,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 259,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 259,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 99,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 107,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 154,
									"end": 156,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 151,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 133,
									"end": 140,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 129,
									"end": 152,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 125,
									"end": 157,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 122,
									"end": 174,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 122,
									"end": 174,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 170,
									"end": 171,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 168,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 160,
									"end": 172,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 122,
									"end": 174,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 193,
									"end": 209,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 193,
									"end": 209,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 249,
									"end": 251,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 234,
									"end": 252,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 234,
									"end": 252,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 234,
									"end": 252,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 228,
									"end": 253,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 193,
									"end": 209,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 193,
									"end": 209,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 228,
									"end": 253,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 228,
									"end": 253,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 259,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 264,
									"end": 391,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 264,
									"end": 391,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 325,
									"end": 335,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 320,
									"end": 323,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 316,
									"end": 336,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 313,
									"end": 314,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 337,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 356,
									"end": 360,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 353,
									"end": 354,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 346,
									"end": 361,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 380,
									"end": 384,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 377,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 385,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 396,
									"end": 776,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 396,
									"end": 776,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 475,
									"end": 476,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 471,
									"end": 483,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 471,
									"end": 483,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 471,
									"end": 483,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 471,
									"end": 483,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 518,
									"end": 530,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 518,
									"end": 530,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 518,
									"end": 530,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 539,
									"end": 600,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 539,
									"end": 600,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 593,
									"end": 597,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 585,
									"end": 591,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 581,
									"end": 598,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 571,
									"end": 598,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 571,
									"end": 598,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 539,
									"end": 600,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 539,
									"end": 600,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 646,
									"end": 648,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 638,
									"end": 644,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 635,
									"end": 649,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 615,
									"end": 633,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 612,
									"end": 650,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 609,
									"end": 770,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 609,
									"end": 770,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 692,
									"end": 702,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 687,
									"end": 690,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 683,
									"end": 703,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 673,
									"end": 704,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 727,
									"end": 731,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 724,
									"end": 725,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 717,
									"end": 732,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 755,
									"end": 759,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 752,
									"end": 753,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 745,
									"end": 760,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 609,
									"end": 770,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 609,
									"end": 770,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 609,
									"end": 770,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 396,
									"end": 776,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 396,
									"end": 776,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 396,
									"end": 776,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 396,
									"end": 776,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 907,
									"end": 1452,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 907,
									"end": 1452,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1011,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1004,
									"end": 1007,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1012,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 998,
									"end": 1446,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 998,
									"end": 1446,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 998,
									"end": 1446,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1045,
									"end": 1046,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1070,
									"end": 1075,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1066,
									"end": 1068,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1059,
									"end": 1076,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1119,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1111,
									"end": 1113,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1101,
									"end": 1120,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1185,
									"end": 1187,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1173,
									"end": 1183,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1188,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1166,
									"end": 1167,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1162,
									"end": 1189,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1156,
									"end": 1160,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1152,
									"end": 1190,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1221,
									"end": 1225,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1209,
									"end": 1219,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1206,
									"end": 1226,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1244,
									"end": 1248,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1203,
									"end": 1250,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1299,
									"end": 1301,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1294,
									"end": 1297,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1290,
									"end": 1302,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1283,
									"end": 1303,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1277,
									"end": 1281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1273,
									"end": 1304,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1263,
									"end": 1304,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1263,
									"end": 1304,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1354,
									"end": 1436,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1354,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1372,
									"end": 1374,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1365,
									"end": 1370,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1362,
									"end": 1375,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1354,
									"end": 1436,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1354,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1354,
									"end": 1436,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1434,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1434,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1434,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 1399,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1387,
									"end": 1400,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1354,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1354,
									"end": 1436,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1354,
									"end": 1436,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1354,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1361,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1361,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1361,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 998,
									"end": 1446,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 998,
									"end": 1446,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 907,
									"end": 1452,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 907,
									"end": 1452,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 907,
									"end": 1452,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 907,
									"end": 1452,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1628,
									"end": 2980,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1628,
									"end": 2980,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1748,
									"end": 1758,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1748,
									"end": 1758,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1770,
									"end": 1800,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1770,
									"end": 1800,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1767,
									"end": 1823,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1767,
									"end": 1823,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1767,
									"end": 1823,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1803,
									"end": 1821,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1803,
									"end": 1821,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1803,
									"end": 1821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1803,
									"end": 1821,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1803,
									"end": 1821,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1832,
									"end": 1929,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1882,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1914,
									"end": 1918,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1908,
									"end": 1919,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1882,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1882,
									"end": 1920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1882,
									"end": 1920,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1882,
									"end": 1920,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1876,
									"end": 1880,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1832,
									"end": 1929,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1832,
									"end": 1929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1832,
									"end": 1929,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1832,
									"end": 1929,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1984,
									"end": 1988,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1984,
									"end": 1988,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2048,
									"end": 2050,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2037,
									"end": 2051,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2037,
									"end": 2051,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2066,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2060,
									"end": 2723,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2060,
									"end": 2723,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2060,
									"end": 2723,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 2060,
									"end": 2723,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2767,
									"end": 2768,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2870,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2870,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 2781,
									"end": 2870,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2836,
									"end": 2855,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2836,
									"end": 2855,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2836,
									"end": 2855,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2830,
									"end": 2856,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2870,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 2781,
									"end": 2870,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1585,
									"end": 1586,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1581,
									"end": 1592,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1581,
									"end": 1592,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1581,
									"end": 1592,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1577,
									"end": 1601,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1573,
									"end": 1602,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1563,
									"end": 1603,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1609,
									"end": 1610,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1605,
									"end": 1616,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1616,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1616,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1560,
									"end": 1617,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2883,
									"end": 2964,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2883,
									"end": 2964,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2030,
									"end": 2974,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2030,
									"end": 2974,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2060,
									"end": 2723,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 2060,
									"end": 2723,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 861,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 847,
									"end": 861,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 847,
									"end": 861,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 891,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 878,
									"end": 896,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 878,
									"end": 896,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2096,
									"end": 2116,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2096,
									"end": 2116,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2096,
									"end": 2116,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2214,
									"end": 2450,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2214,
									"end": 2450,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2228,
									"end": 2235,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2226,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2222,
									"end": 2236,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2214,
									"end": 2450,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2214,
									"end": 2450,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2214,
									"end": 2450,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2317,
									"end": 2336,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2317,
									"end": 2336,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2317,
									"end": 2336,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2311,
									"end": 2337,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2296,
									"end": 2338,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2296,
									"end": 2338,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2378,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2365,
									"end": 2379,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2365,
									"end": 2379,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2365,
									"end": 2379,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2365,
									"end": 2379,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2244,
									"end": 2263,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2244,
									"end": 2263,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2214,
									"end": 2450,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2214,
									"end": 2450,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2214,
									"end": 2450,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2214,
									"end": 2450,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2221,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2478,
									"end": 2484,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2469,
									"end": 2476,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2466,
									"end": 2485,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2463,
									"end": 2664,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2463,
									"end": 2664,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 2463,
									"end": 2664,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2539,
									"end": 2558,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2539,
									"end": 2558,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2539,
									"end": 2558,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2533,
									"end": 2559,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2622,
									"end": 2623,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2618,
									"end": 2632,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2618,
									"end": 2632,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2618,
									"end": 2632,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2634,
									"end": 2637,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 2614,
									"end": 2638,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2610,
									"end": 2647,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2606,
									"end": 2648,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2591,
									"end": 2649,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2576,
									"end": 2650,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2576,
									"end": 2650,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2463,
									"end": 2664,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 2463,
									"end": 2664,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2710,
									"end": 2711,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2694,
									"end": 2708,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2694,
									"end": 2708,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2694,
									"end": 2708,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2690,
									"end": 2712,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 2713,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 2713,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1628,
									"end": 2980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2985,
									"end": 3207,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 2985,
									"end": 3207,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3050,
									"end": 3059,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3050,
									"end": 3059,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3050,
									"end": 3059,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3081,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3081,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3081,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3201,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3201,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 3068,
									"end": 3201,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3123,
									"end": 3133,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 3118,
									"end": 3121,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 3114,
									"end": 3134,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3111,
									"end": 3112,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3104,
									"end": 3135,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3158,
									"end": 3162,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 3155,
									"end": 3156,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3148,
									"end": 3163,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3186,
									"end": 3190,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3183,
									"end": 3184,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3176,
									"end": 3191,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3201,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 3068,
									"end": 3201,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2985,
									"end": 3207,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2985,
									"end": 3207,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2985,
									"end": 3207,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2985,
									"end": 3207,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2985,
									"end": 3207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2985,
									"end": 3207,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 2985,
									"end": 3207,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1057,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1057,
									"end": 6782,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1057,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1057,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 6782,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1057,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 6782,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d67b42144c868f9a23d0f7e24499c0f24e0beec6fd74910a75bf8a23c9df4fcc64736f6c63430008100033",
									".code": [
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "DB141222"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "DB141222"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "E7644FB9"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "BA777BCC"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "D2DEA365"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "D720D871"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "88B022C6"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "88B022C6"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "A457C2D7"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "751279B9"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "79CC6790"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "79F82BDE"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "39509351"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "488B4783"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "488B4783"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "4953A509"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "669D751E"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "39509351"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "4537523C"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "46CBBE9E"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "2B11551A"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "2C1A9E"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "37C3F5D"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 6782,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2399,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2399,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 481,
											"end": 506,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 506,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 481,
											"end": 506,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 469,
											"end": 471,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3224,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3134,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3222,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3205,
											"end": 3222,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3134,
											"end": 3224,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2141,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2141,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4238,
											"end": 4404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4238,
											"end": 4404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 1686,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1665,
											"end": 1687,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1647,
											"end": 1688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1647,
											"end": 1688,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1620,
											"end": 1638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1507,
											"end": 1694,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4871,
											"end": 5349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4871,
											"end": 5349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3577,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3493,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3560,
											"end": 3575,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 3560,
											"end": 3575,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3493,
											"end": 3577,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1747,
											"end": 1879,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1747,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1747,
											"end": 1879,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1747,
											"end": 1879,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2174,
											"end": 2210,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2174,
											"end": 2210,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2164,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2147,
											"end": 2165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1747,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2032,
											"end": 2216,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5744,
											"end": 5956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5744,
											"end": 5956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 563,
											"end": 652,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 563,
											"end": 652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 563,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 563,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 563,
											"end": 652,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 563,
											"end": 652,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 563,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 563,
											"end": 652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 563,
											"end": 652,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 563,
											"end": 652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 563,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 563,
											"end": 652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 563,
											"end": 652,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 563,
											"end": 652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 563,
											"end": 652,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4172,
											"end": 4596,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 4172,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4172,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4172,
											"end": 4596,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4596,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4172,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 4172,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4596,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4172,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4172,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3703,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3582,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3582,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 3582,
											"end": 3703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3129,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 3035,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3108,
											"end": 3127,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3108,
											"end": 3127,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3035,
											"end": 3129,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6129,
											"end": 6769,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 6129,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6129,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6129,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 6129,
											"end": 6769,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6129,
											"end": 6769,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6129,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 6129,
											"end": 6769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6129,
											"end": 6769,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 6129,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6129,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 6129,
											"end": 6769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3807,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 3708,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3708,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3708,
											"end": 3807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3393,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3397,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3318,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 3382,
											"end": 3395,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3318,
											"end": 3397,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 958,
											"end": 1319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 958,
											"end": 1319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3936,
											"end": 4051,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3936,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3936,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3936,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 3936,
											"end": 4051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3407,
											"end": 3488,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3407,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3486,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3469,
											"end": 3486,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3486,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3469,
											"end": 3486,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3407,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 3407,
											"end": 3488,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2948,
											"end": 3151,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2352,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 6443,
											"end": 6848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6443,
											"end": 6848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3721,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3721,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5868,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 5267,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5267,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 5267,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2111,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1884,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1884,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 1884,
											"end": 2111,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2111,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1884,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1884,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2111,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 1884,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1884,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3931,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3812,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3812,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3812,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3296,
											"end": 3311,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3296,
											"end": 3311,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3951,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 5022,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 4601,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4601,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4601,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4601,
											"end": 5022,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4601,
											"end": 5022,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4601,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 4601,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4601,
											"end": 5022,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4601,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4601,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 4601,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2599,
											"end": 2608,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2610,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2599,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 2599,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2610,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2599,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2592,
											"end": 2611,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2594,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 2592,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2592,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2611,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2592,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2589,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2580,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2611,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2660,
											"end": 2674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2715,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 2680,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2693,
											"end": 2704,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2611,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 2680,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2704,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2680,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2679,
											"end": 2709,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2709,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2679,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 2679,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2709,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2679,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2678,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2678,
											"end": 2715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2678,
											"end": 2715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2678,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 2678,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2678,
											"end": 2715,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2678,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2715,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2749,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2399,
											"end": 2749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2227,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2220,
											"end": 2232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2220,
											"end": 2232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4375,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4337,
											"end": 4376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4393,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 5023,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5108,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6039,
											"end": 6041,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6042,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6080,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6051,
											"end": 6081,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6151,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6090,
											"end": 6152,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6168,
											"end": 6186,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6168,
											"end": 6186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6168,
											"end": 6186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6199,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6235,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6216,
											"end": 6235,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 5262,
											"end": 5268,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5309,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5300,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 5253,
											"end": 5310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 5349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5891,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 5848,
											"end": 5928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5878,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5927,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5880,
											"end": 5927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 5848,
											"end": 5928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 563,
											"end": 652,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 563,
											"end": 652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 618,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 618,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 618,
											"end": 645,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 563,
											"end": 652,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 563,
											"end": 652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4172,
											"end": 4596,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4172,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4268,
											"end": 4285,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4268,
											"end": 4285,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4252,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 4241,
											"end": 4252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4252,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4252,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4241,
											"end": 4252,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4252,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4241,
											"end": 4252,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4232,
											"end": 4264,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4264,
											"name": "PUSH",
											"source": 9,
											"value": "5C9302C9"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 4232,
											"end": 4266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4285,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4285,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 4224,
											"end": 4311,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4224,
											"end": 4311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4224,
											"end": 4311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6637,
											"end": 6639,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4224,
											"end": 4311,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4224,
											"end": 4311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6619,
											"end": 6640,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6676,
											"end": 6678,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6649,
											"end": 6679,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D696E74696E6720506861736520697320446F6E65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6695,
											"end": 6713,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6695,
											"end": 6713,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6695,
											"end": 6713,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6739,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4224,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 6435,
											"end": 6780,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4224,
											"end": 4311,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 4224,
											"end": 4311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4380,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 4364,
											"end": 4380,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4364,
											"end": 4380,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4380,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4380,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7047,
											"end": 7065,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7047,
											"end": 7065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7047,
											"end": 7065,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7040,
											"end": 7083,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4351,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 4329,
											"end": 4351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 4329,
											"end": 4381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 4329,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4389,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 4321,
											"end": 4465,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4465,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4321,
											"end": 4465,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4321,
											"end": 4465,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4465,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7298,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4321,
											"end": 4465,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4321,
											"end": 4465,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7278,
											"end": 7299,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7335,
											"end": 7337,
											"name": "PUSH",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7338,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7408,
											"name": "PUSH",
											"source": 10,
											"value": "506C6561736520617070726F766520636F6E7472616374206164647265737320"
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7347,
											"end": 7409,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7445,
											"end": 7479,
											"name": "PUSH",
											"source": 10,
											"value": "617320616C6C6F776564207370656E64657220696E207468652068657820636F"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7418,
											"end": 7480,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "373A3930B1BA17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7496,
											"end": 7515,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 7496,
											"end": 7515,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7489,
											"end": 7527,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7544,
											"end": 7563,
											"name": "PUSH",
											"source": 10,
											"value": "A4"
										},
										{
											"begin": 7544,
											"end": 7563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 7094,
											"end": 7569,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4465,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 4321,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4522,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 4510,
											"end": 4522,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4542,
											"end": 4558,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 4542,
											"end": 4558,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4500,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7814,
											"end": 7848,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7848,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4542,
											"end": 4558,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4542,
											"end": 4558,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4542,
											"end": 4558,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7864,
											"end": 7882,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7864,
											"end": 7882,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7864,
											"end": 7882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7857,
											"end": 7900,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7909,
											"end": 7943,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7909,
											"end": 7943,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7909,
											"end": 7943,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4490,
											"end": 4500,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4522,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4522,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4522,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4522,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4522,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4535,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 4510,
											"end": 4535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7767,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7749,
											"end": 7767,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 4510,
											"end": 4567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4577,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4577,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 4577,
											"end": 4589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4577,
											"end": 4589,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 4577,
											"end": 4589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3703,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 3582,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3655,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3663,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3658,
											"end": 3663,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3658,
											"end": 3663,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3663,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3663,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3663,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3658,
											"end": 3663,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3663,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3663,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3658,
											"end": 3663,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3658,
											"end": 3674,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3674,
											"name": "PUSH",
											"source": 9,
											"value": "5C9302C9"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3658,
											"end": 3676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6129,
											"end": 6769,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 6129,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6357,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6344,
											"end": 6357,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6329,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 6318,
											"end": 6329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6318,
											"end": 6329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6329,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6329,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6318,
											"end": 6329,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6329,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6318,
											"end": 6329,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6309,
											"end": 6341,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6341,
											"name": "PUSH",
											"source": 9,
											"value": "5C9302C9"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 6309,
											"end": 6343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6309,
											"end": 6343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6357,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 6301,
											"end": 6388,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6301,
											"end": 6388,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6301,
											"end": 6388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6388,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8438,
											"end": 8440,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6301,
											"end": 6388,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6301,
											"end": 6388,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8420,
											"end": 8441,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8477,
											"end": 8479,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 8457,
											"end": 8475,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8457,
											"end": 8475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8457,
											"end": 8475,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8450,
											"end": 8480,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8516,
											"end": 8544,
											"name": "PUSH",
											"source": 10,
											"value": "5374616B65206973206E6F7420636F6D706C657465207965742E000000000000"
										},
										{
											"begin": 8496,
											"end": 8514,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8496,
											"end": 8514,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8496,
											"end": 8514,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8489,
											"end": 8545,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8562,
											"end": 8580,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8562,
											"end": 8580,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6301,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 8236,
											"end": 8586,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6301,
											"end": 6388,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 6301,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6429,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6429,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6406,
											"end": 6429,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6455,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6455,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 6406,
											"end": 6455,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6433,
											"end": 6448,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 6433,
											"end": 6448,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6433,
											"end": 6448,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6433,
											"end": 6448,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6433,
											"end": 6448,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6433,
											"end": 6448,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6433,
											"end": 6448,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6433,
											"end": 6455,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6455,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 6406,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6398,
											"end": 6491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 6398,
											"end": 6491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6398,
											"end": 6491,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6398,
											"end": 6491,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6398,
											"end": 6491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6398,
											"end": 6491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8793,
											"end": 8795,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6398,
											"end": 6491,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6398,
											"end": 6491,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6398,
											"end": 6491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 8834,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8805,
											"end": 8835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8904,
											"name": "PUSH",
											"source": 10,
											"value": "5374616B652068617320616C7265616479206265656E20737461727465642E00"
										},
										{
											"begin": 8851,
											"end": 8869,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8851,
											"end": 8869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8851,
											"end": 8869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8844,
											"end": 8905,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8922,
											"end": 8940,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8922,
											"end": 8940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 8591,
											"end": 8946,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6491,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 6398,
											"end": 6491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6501,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 6514,
											"end": 6524,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6538,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 6501,
											"end": 6539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6501,
											"end": 6539,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 6501,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6564,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 6549,
											"end": 6569,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6569,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6549,
											"end": 6569,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6569,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6549,
											"end": 6569,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6569,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6613,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 6601,
											"end": 6613,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6632,
											"end": 6636,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 3145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6601,
											"end": 6613,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6623,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 6601,
											"end": 6623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 6601,
											"end": 6638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6601,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6579,
											"end": 6638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6579,
											"end": 6638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6648,
											"end": 6666,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6684,
											"end": 6688,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6669,
											"end": 6702,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6702,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 6669,
											"end": 6704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 6669,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6648,
											"end": 6704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6648,
											"end": 6704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 6732,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 6732,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6753,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 6732,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6714,
											"end": 6729,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 6714,
											"end": 6753,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6129,
											"end": 6769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3807,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3708,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 3771,
											"end": 3783,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3794,
											"end": 3804,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 3145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3754,
											"end": 3761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3761,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3771,
											"end": 3783,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3771,
											"end": 3805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3764,
											"end": 3805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3764,
											"end": 3805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3807,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9153,
											"end": 9155,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9135,
											"end": 9156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9165,
											"end": 9195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9231,
											"end": 9265,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9204,
											"end": 9266,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9301,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9283,
											"end": 9301,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8951,
											"end": 9307,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1759,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1732,
											"end": 1762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 1071,
											"end": 1078,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3951,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1137,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1111,
											"end": 1137,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1111,
											"end": 1137,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 1103,
											"end": 1178,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1178,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1178,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1178,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1178,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9514,
											"end": 9516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1178,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1103,
											"end": 1178,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1178,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9496,
											"end": 9517,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9553,
											"end": 9555,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9533,
											"end": 9551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9533,
											"end": 9551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9533,
											"end": 9551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9556,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9592,
											"end": 9626,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77"
										},
										{
											"begin": 9572,
											"end": 9590,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9572,
											"end": 9590,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9572,
											"end": 9590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9565,
											"end": 9627,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9643,
											"end": 9661,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9643,
											"end": 9661,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9643,
											"end": 9661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9636,
											"end": 9670,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9687,
											"end": 9706,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9687,
											"end": 9706,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1103,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 9312,
											"end": 9712,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1103,
											"end": 1178,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 1103,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 1221,
											"end": 1228,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1263,
											"end": 1269,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1260,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1269,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1212,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1270,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 1212,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 1296,
											"end": 1303,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1290,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1312,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 1290,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 958,
											"end": 1319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3936,
											"end": 4051,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 3936,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4014,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4009,
											"end": 4014,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4040,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4009,
											"end": 4040,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33060D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4009,
											"end": 4040,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4040,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4038,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4040,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4009,
											"end": 4040,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4040,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 3145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 3986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 3986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4009,
											"end": 4014,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4025,
											"name": "PUSH",
											"source": 9,
											"value": "33060D90"
										},
										{
											"begin": 4009,
											"end": 4025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 2948,
											"end": 3151,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2440,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2433,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6536,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6590,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9921,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9901,
											"end": 9922,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9958,
											"end": 9960,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 9938,
											"end": 9956,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9938,
											"end": 9956,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9938,
											"end": 9956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 9961,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9997,
											"end": 10031,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9970,
											"end": 10032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10041,
											"end": 10076,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10093,
											"end": 10112,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10093,
											"end": 10112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 9717,
											"end": 10118,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6772,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6793,
											"end": 6808,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6790,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6742,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6742,
											"end": 6809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6443,
											"end": 6848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3847,
											"end": 3856,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3823,
											"end": 3865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5868,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 5267,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5329,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5312,
											"end": 5329,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5329,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5312,
											"end": 5329,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5336,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5304,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 5304,
											"end": 5372,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5304,
											"end": 5372,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5304,
											"end": 5372,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5304,
											"end": 5372,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8793,
											"end": 8795,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5304,
											"end": 5372,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5304,
											"end": 5372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 8834,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8805,
											"end": 8835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8904,
											"name": "PUSH",
											"source": 10,
											"value": "5374616B652068617320616C7265616479206265656E20737461727465642E00"
										},
										{
											"begin": 8851,
											"end": 8869,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8851,
											"end": 8869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8851,
											"end": 8869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8844,
											"end": 8905,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8922,
											"end": 8940,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8922,
											"end": 8940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 8591,
											"end": 8946,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5372,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 5304,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5413,
											"end": 5424,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 5413,
											"end": 5424,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C9302C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5382,
											"end": 5401,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5401,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5413,
											"end": 5424,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5413,
											"end": 5424,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5436,
											"name": "PUSH",
											"source": 9,
											"value": "5C9302C9"
										},
										{
											"begin": 5404,
											"end": 5436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5413,
											"end": 5424,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 5404,
											"end": 5438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5382,
											"end": 5438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5382,
											"end": 5438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5468,
											"end": 5485,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5468,
											"end": 5485,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5456,
											"end": 5467,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5456,
											"end": 5485,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5448,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5448,
											"end": 5549,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5448,
											"end": 5549,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5448,
											"end": 5549,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5448,
											"end": 5549,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10325,
											"end": 10327,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5448,
											"end": 5549,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5448,
											"end": 5549,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5448,
											"end": 5549,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10307,
											"end": 10328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10364,
											"end": 10366,
											"name": "PUSH",
											"source": 10,
											"value": "3B"
										},
										{
											"begin": 10344,
											"end": 10362,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10344,
											"end": 10362,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10344,
											"end": 10362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10403,
											"end": 10437,
											"name": "PUSH",
											"source": 10,
											"value": "4D696E74696E67205068617365206973207374696C6C206F6E676F696E67202D"
										},
										{
											"begin": 10383,
											"end": 10401,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10383,
											"end": 10401,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10383,
											"end": 10401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10376,
											"end": 10438,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10474,
											"end": 10503,
											"name": "PUSH",
											"source": 10,
											"value": "20736565204D494E54494E475F50484153455F454E44206461792E0000000000"
										},
										{
											"begin": 10454,
											"end": 10472,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10454,
											"end": 10472,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10454,
											"end": 10472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10447,
											"end": 10504,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10521,
											"end": 10540,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10521,
											"end": 10540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5448,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 10123,
											"end": 10546,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5448,
											"end": 5549,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5448,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5611,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 3145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5573,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5598,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 5576,
											"end": 5598,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 5576,
											"end": 5613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 5576,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5727,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 5737,
											"end": 5743,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5727,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5727,
											"end": 5744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5727,
											"end": 5744,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 5727,
											"end": 5744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5771,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5754,
											"end": 5776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5776,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5754,
											"end": 5776,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5772,
											"end": 5776,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5754,
											"end": 5776,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5776,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5786,
											"end": 5801,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5786,
											"end": 5813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5786,
											"end": 5813,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5786,
											"end": 5813,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5849,
											"end": 5861,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 5849,
											"end": 5861,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5837,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 5837,
											"end": 5861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5802,
											"end": 5813,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5837,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 5837,
											"end": 5861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5837,
											"end": 5861,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 5837,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 5836,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5823,
											"end": 5861,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5267,
											"end": 5868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2111,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1884,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 1953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1953,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 1953,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2020,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2020,
											"end": 2023,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2020,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2020,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2020,
											"end": 2026,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 2020,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2051,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2062,
											"end": 2069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2071,
											"end": 2076,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 2078,
											"end": 2079,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2054,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2054,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2080,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2054,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2080,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2111,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1884,
											"end": 2111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3931,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3812,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3928,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 3912,
											"end": 3928,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3929,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3929,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3877,
											"end": 3929,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3929,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3900,
											"end": 3910,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3929,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3877,
											"end": 3929,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3929,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3912,
											"end": 3928,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3928,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7047,
											"end": 7065,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7047,
											"end": 7065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7047,
											"end": 7065,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7040,
											"end": 7083,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 3867,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3860,
											"end": 3867,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 6785,
											"end": 7089,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4601,
											"end": 5022,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 4601,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4679,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4662,
											"end": 4679,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4679,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4662,
											"end": 4679,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4686,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 4662,
											"end": 4711,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4662,
											"end": 4711,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 4662,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 5016,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 4658,
											"end": 5016,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4766,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4727,
											"end": 4743,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4789,
											"end": 4810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4789,
											"end": 4810,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4789,
											"end": 4810,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 4781,
											"end": 4846,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4846,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4781,
											"end": 4846,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4781,
											"end": 4846,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4846,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10753,
											"end": 10755,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4781,
											"end": 4846,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4781,
											"end": 4846,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4846,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10735,
											"end": 10756,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10792,
											"end": 10794,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 10772,
											"end": 10790,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10772,
											"end": 10790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10772,
											"end": 10790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10795,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10831,
											"end": 10864,
											"name": "PUSH",
											"source": 10,
											"value": "596F7520646F206E6F7420686176652074686174206D756368204D4158492E00"
										},
										{
											"begin": 10811,
											"end": 10829,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10811,
											"end": 10829,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10829,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10804,
											"end": 10865,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10882,
											"end": 10900,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10882,
											"end": 10900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4781,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 10551,
											"end": 10906,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4781,
											"end": 4846,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 4781,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4899,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 4888,
											"end": 4915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 4888,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4915,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 4888,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 4934,
											"end": 4945,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 4929,
											"end": 4946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 4946,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 4929,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 4965,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4960,
											"end": 4965,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4975,
											"end": 4985,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11085,
											"end": 11136,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11152,
											"end": 11170,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11152,
											"end": 11170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11152,
											"end": 11170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11145,
											"end": 11179,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11145,
											"end": 11179,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11145,
											"end": 11179,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4960,
											"end": 4965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 4965,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 4965,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 4965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 4974,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 4960,
											"end": 4974,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11058,
											"end": 11076,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11058,
											"end": 11076,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 4960,
											"end": 5005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 5005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 5016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 5016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4601,
											"end": 5022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4601,
											"end": 5022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9153,
											"end": 9155,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9135,
											"end": 9156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9165,
											"end": 9195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9231,
											"end": 9265,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9204,
											"end": 9266,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9301,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9283,
											"end": 9301,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8951,
											"end": 9307,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11392,
											"end": 11394,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11431,
											"end": 11433,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 11411,
											"end": 11429,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11411,
											"end": 11429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11411,
											"end": 11429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11404,
											"end": 11434,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11470,
											"end": 11504,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11450,
											"end": 11468,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11450,
											"end": 11468,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11450,
											"end": 11468,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11443,
											"end": 11505,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11521,
											"end": 11539,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11521,
											"end": 11539,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11521,
											"end": 11539,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11514,
											"end": 11550,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11567,
											"end": 11586,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11567,
											"end": 11586,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 11190,
											"end": 11592,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2100,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2081,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10150,
											"end": 10169,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10169,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11801,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11781,
											"end": 11802,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11838,
											"end": 11840,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11818,
											"end": 11836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11818,
											"end": 11836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11811,
											"end": 11841,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11911,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 11857,
											"end": 11875,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11857,
											"end": 11875,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11857,
											"end": 11875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11850,
											"end": 11912,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11928,
											"end": 11946,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11928,
											"end": 11946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11928,
											"end": 11946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11921,
											"end": 11955,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11972,
											"end": 11991,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11972,
											"end": 11991,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 11597,
											"end": 11997,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10228,
											"end": 10249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10228,
											"end": 10249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12204,
											"end": 12206,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12186,
											"end": 12207,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12243,
											"end": 12245,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 12223,
											"end": 12241,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12223,
											"end": 12241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12223,
											"end": 12241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12216,
											"end": 12246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12316,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 12262,
											"end": 12280,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12262,
											"end": 12280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12262,
											"end": 12280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12255,
											"end": 12317,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12326,
											"end": 12358,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12375,
											"end": 12394,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12375,
											"end": 12394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 12002,
											"end": 12400,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 481,
											"end": 506,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 481,
											"end": 506,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 481,
											"end": 506,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 454,
											"end": 472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12607,
											"end": 12609,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12589,
											"end": 12610,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12646,
											"end": 12648,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 12626,
											"end": 12644,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12626,
											"end": 12644,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12626,
											"end": 12644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12619,
											"end": 12649,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12685,
											"end": 12719,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 12665,
											"end": 12683,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12665,
											"end": 12683,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12665,
											"end": 12683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12658,
											"end": 12720,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12736,
											"end": 12754,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12736,
											"end": 12754,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 12754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12764,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12781,
											"end": 12800,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12781,
											"end": 12800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 12405,
											"end": 12806,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7537,
											"end": 7560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7537,
											"end": 7560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13013,
											"end": 13015,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12995,
											"end": 13016,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13052,
											"end": 13054,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 13032,
											"end": 13050,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13032,
											"end": 13050,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13032,
											"end": 13050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13055,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13091,
											"end": 13125,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 13071,
											"end": 13089,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13071,
											"end": 13089,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13071,
											"end": 13089,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13064,
											"end": 13126,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13135,
											"end": 13168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13185,
											"end": 13204,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13185,
											"end": 13204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 12811,
											"end": 13210,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13417,
											"end": 13419,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13399,
											"end": 13420,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13456,
											"end": 13458,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 13436,
											"end": 13454,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13436,
											"end": 13454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13436,
											"end": 13454,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13429,
											"end": 13459,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13495,
											"end": 13529,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 13475,
											"end": 13493,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13475,
											"end": 13493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13475,
											"end": 13493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13468,
											"end": 13530,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13546,
											"end": 13564,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13546,
											"end": 13564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13546,
											"end": 13564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13539,
											"end": 13575,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13592,
											"end": 13611,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13592,
											"end": 13611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 13215,
											"end": 13617,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7870,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 7890,
											"end": 7920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 7962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7945,
											"end": 7951,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7964,
											"end": 7970,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 481,
											"end": 506,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 481,
											"end": 506,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 469,
											"end": 471,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 454,
											"end": 472,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 335,
											"end": 512,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9020,
											"end": 9596,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9020,
											"end": 9596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9103,
											"end": 9124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9103,
											"end": 9124,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9095,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 9095,
											"end": 9162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9095,
											"end": 9162,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9095,
											"end": 9162,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9095,
											"end": 9162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9095,
											"end": 9162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13824,
											"end": 13826,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9095,
											"end": 9162,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9095,
											"end": 9162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9095,
											"end": 9162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13806,
											"end": 13827,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13863,
											"end": 13865,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 13843,
											"end": 13861,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13843,
											"end": 13861,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13843,
											"end": 13861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13836,
											"end": 13866,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13902,
											"end": 13936,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 13882,
											"end": 13900,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13882,
											"end": 13900,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13882,
											"end": 13900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13875,
											"end": 13937,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13953,
											"end": 13971,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13953,
											"end": 13971,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13953,
											"end": 13971,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13946,
											"end": 13977,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13994,
											"end": 14013,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13994,
											"end": 14013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9095,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 13622,
											"end": 14019,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9095,
											"end": 9162,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 9095,
											"end": 9162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9233,
											"end": 9255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9318,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9318,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 9286,
											"end": 9357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9286,
											"end": 9357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9286,
											"end": 9357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14226,
											"end": 14228,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9286,
											"end": 9357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9286,
											"end": 9357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14208,
											"end": 14229,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14265,
											"end": 14267,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 14245,
											"end": 14263,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14245,
											"end": 14263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14245,
											"end": 14263,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14268,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14304,
											"end": 14338,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 14284,
											"end": 14302,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14284,
											"end": 14302,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14284,
											"end": 14302,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14277,
											"end": 14339,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14373,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14355,
											"end": 14373,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14355,
											"end": 14373,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14348,
											"end": 14380,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14397,
											"end": 14416,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14397,
											"end": 14416,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9286,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 14024,
											"end": 14422,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9286,
											"end": 9357,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 9286,
											"end": 9357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9400,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9409,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9412,
											"end": 9435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9412,
											"end": 9435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9412,
											"end": 9435,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9435,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9467,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9455,
											"end": 9477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9477,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9435,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9435,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 9455,
											"end": 9477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9435,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 9455,
											"end": 9477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9477,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 9455,
											"end": 9477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9477,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 481,
											"end": 506,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 481,
											"end": 506,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 481,
											"end": 506,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9519,
											"end": 9520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9519,
											"end": 9520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 469,
											"end": 471,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9530,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 958,
											"end": 1319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 958,
											"end": 1319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4078,
											"end": 4167,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 4078,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 4141,
											"end": 4151,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4159,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 4135,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5990,
											"end": 6123,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5990,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6077,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6072,
											"end": 6077,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A1804D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14732,
											"end": 14757,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14732,
											"end": 14757,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14732,
											"end": 14757,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14805,
											"end": 14817,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 14793,
											"end": 14818,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14793,
											"end": 14818,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14773,
											"end": 14791,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14773,
											"end": 14791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14773,
											"end": 14791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14766,
											"end": 14819,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6072,
											"end": 6077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6077,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6077,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6086,
											"name": "PUSH",
											"source": 9,
											"value": "343009A2"
										},
										{
											"begin": 6072,
											"end": 6086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14705,
											"end": 14723,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14705,
											"end": 14723,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5990,
											"end": 6123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5990,
											"end": 6123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5990,
											"end": 6123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2116,
											"end": 2394,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2116,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2221,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2209,
											"end": 2221,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2244,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 3145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2169,
											"end": 2176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2209,
											"end": 2221,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2221,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2221,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2221,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2231,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 2209,
											"end": 2231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2209,
											"end": 2246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 2209,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2296,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2277,
											"end": 2310,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2310,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2277,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 2332,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 2343,
											"end": 2354,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2365,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2367,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2335,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2335,
											"end": 2368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2335,
											"end": 2368,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 2335,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 2368,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2116,
											"end": 2394,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2116,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 5975,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5873,
											"end": 5975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5932,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 5927,
											"end": 5932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5951,
											"end": 5963,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 5951,
											"end": 5963,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A548717"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15004,
											"end": 15029,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15004,
											"end": 15029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15004,
											"end": 15029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15045,
											"end": 15063,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15045,
											"end": 15063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15045,
											"end": 15063,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15038,
											"end": 15072,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15038,
											"end": 15072,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15038,
											"end": 15072,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15038,
											"end": 15072,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5927,
											"end": 5932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5932,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5932,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5943,
											"name": "PUSH",
											"source": 9,
											"value": "52A438B8"
										},
										{
											"begin": 5927,
											"end": 5943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 5975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 5975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8311,
											"end": 8700,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 8311,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8394,
											"end": 8415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8394,
											"end": 8415,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 8386,
											"end": 8451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8386,
											"end": 8451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8386,
											"end": 8451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15285,
											"end": 15287,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8386,
											"end": 8451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8386,
											"end": 8451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15267,
											"end": 15288,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15324,
											"end": 15326,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 15304,
											"end": 15322,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15304,
											"end": 15322,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15304,
											"end": 15322,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15297,
											"end": 15327,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15363,
											"end": 15396,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 15343,
											"end": 15361,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15343,
											"end": 15361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15343,
											"end": 15361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15336,
											"end": 15397,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15414,
											"end": 15432,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15414,
											"end": 15432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8386,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 15083,
											"end": 15438,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8386,
											"end": 8451,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 8386,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8538,
											"end": 8544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8534,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8522,
											"end": 8534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8522,
											"end": 8544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8544,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 8522,
											"end": 8544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8522,
											"end": 8544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8544,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 8522,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8544,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8582,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 8554,
											"end": 8582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8554,
											"end": 8582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8582,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 8554,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8582,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8597,
											"end": 8634,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8597,
											"end": 8634,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 481,
											"end": 506,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 481,
											"end": 506,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 481,
											"end": 506,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8597,
											"end": 8634,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8597,
											"end": 8634,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8597,
											"end": 8634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8614,
											"end": 8615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8614,
											"end": 8615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8597,
											"end": 8634,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8597,
											"end": 8634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 469,
											"end": 471,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8597,
											"end": 8634,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8597,
											"end": 8634,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8597,
											"end": 8634,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8597,
											"end": 8634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8597,
											"end": 8634,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8597,
											"end": 8634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8597,
											"end": 8634,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 330,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14,
											"end": 330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 91,
											"end": 97,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 105,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 107,
											"end": 113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 160,
											"end": 162,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 148,
											"end": 157,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 139,
											"end": 146,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 135,
											"end": 158,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 131,
											"end": 163,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 128,
											"end": 180,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 128,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 128,
											"end": 180,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 176,
											"end": 177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 166,
											"end": 178,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 128,
											"end": 180,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 128,
											"end": 180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 199,
											"end": 222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 199,
											"end": 222,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 199,
											"end": 222,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 269,
											"end": 271,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 272,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 254,
											"end": 272,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 241,
											"end": 273,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 241,
											"end": 273,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 320,
											"end": 322,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 305,
											"end": 323,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 305,
											"end": 323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 292,
											"end": 324,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 330,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 517,
											"end": 1065,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 517,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 629,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 689,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 685,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 669,
											"end": 690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 719,
											"end": 725,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 713,
											"end": 726,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 762,
											"end": 768,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 759,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 746,
											"end": 755,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 742,
											"end": 760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 735,
											"end": 769,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 787,
											"end": 788,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 937,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 797,
											"end": 937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 811,
											"end": 817,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 808,
											"end": 809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 805,
											"end": 818,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 797,
											"end": 937,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 797,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 797,
											"end": 937,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 906,
											"end": 920,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 906,
											"end": 920,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 906,
											"end": 920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 902,
											"end": 925,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 902,
											"end": 925,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 896,
											"end": 926,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 872,
											"end": 889,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 872,
											"end": 889,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 872,
											"end": 889,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 891,
											"end": 893,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 861,
											"end": 927,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 826,
											"end": 836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 826,
											"end": 836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 797,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 797,
											"end": 937,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 797,
											"end": 937,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 797,
											"end": 937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 801,
											"end": 804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 986,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 978,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 961,
											"end": 970,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 957,
											"end": 979,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 953,
											"end": 984,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 946,
											"end": 988,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1058,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1049,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1045,
											"end": 1052,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1032,
											"end": 1038,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1028,
											"end": 1043,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1053,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1013,
											"end": 1022,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1054,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1059,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 517,
											"end": 1065,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 517,
											"end": 1065,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 517,
											"end": 1065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 517,
											"end": 1065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 517,
											"end": 1065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1070,
											"end": 1243,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 1070,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1138,
											"end": 1158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1138,
											"end": 1158,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1167,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 1167,
											"end": 1237,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1231,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1167,
											"end": 1237,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 1167,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1070,
											"end": 1243,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1070,
											"end": 1243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1070,
											"end": 1243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1070,
											"end": 1243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1248,
											"end": 1502,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1248,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1379,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1356,
											"end": 1363,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1352,
											"end": 1375,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1348,
											"end": 1380,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1345,
											"end": 1397,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1345,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 1345,
											"end": 1397,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1391,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1395,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1345,
											"end": 1397,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 1345,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 1435,
											"end": 1444,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 1416,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1406,
											"end": 1445,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1494,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1464,
											"end": 1496,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1464,
											"end": 1496,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1699,
											"end": 2027,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1699,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1792,
											"end": 1798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1847,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1833,
											"end": 1842,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1824,
											"end": 1831,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1820,
											"end": 1843,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1848,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1865,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 1813,
											"end": 1865,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1859,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1865,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 1813,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 1903,
											"end": 1912,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 1884,
											"end": 1913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 1913,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 1884,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1913,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 1966,
											"end": 1968,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1955,
											"end": 1964,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 1932,
											"end": 1970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1970,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 1932,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1970,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2019,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 2021,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2021,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1699,
											"end": 2027,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1699,
											"end": 2027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1699,
											"end": 2027,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1699,
											"end": 2027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1699,
											"end": 2027,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1699,
											"end": 2027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2401,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2221,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2335,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2330,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2312,
											"end": 2319,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2308,
											"end": 2331,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2336,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2301,
											"end": 2353,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2301,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 2301,
											"end": 2353,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2347,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2351,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2301,
											"end": 2353,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 2301,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2372,
											"end": 2395,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2372,
											"end": 2395,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2221,
											"end": 2401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2752,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2406,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2487,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2534,
											"end": 2536,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2531,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2513,
											"end": 2520,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2532,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2505,
											"end": 2537,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2554,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 2502,
											"end": 2554,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2550,
											"end": 2551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 2548,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2540,
											"end": 2552,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2554,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 2502,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2596,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2596,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2648,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2635,
											"end": 2644,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2631,
											"end": 2649,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2690,
											"end": 2702,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 2683,
											"end": 2688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2703,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2704,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2659,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 2659,
											"end": 2722,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2718,
											"end": 2719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2716,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2720,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2659,
											"end": 2722,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 2659,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2757,
											"end": 2943,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2757,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2871,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2857,
											"end": 2866,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2848,
											"end": 2855,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2867,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2872,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2889,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 2837,
											"end": 2889,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2885,
											"end": 2886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2875,
											"end": 2887,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2889,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 2837,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 2927,
											"end": 2936,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 2908,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2898,
											"end": 2937,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2757,
											"end": 2943,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2757,
											"end": 2943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3416,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3156,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3238,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3287,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3282,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3264,
											"end": 3271,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3283,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3288,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3299,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3291,
											"end": 3303,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 3343,
											"end": 3352,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 3324,
											"end": 3353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3314,
											"end": 3353,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3314,
											"end": 3353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 3406,
											"end": 3408,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 3372,
											"end": 3410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3410,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 3372,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3362,
											"end": 3410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3362,
											"end": 3410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3416,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3416,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3548,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 3421,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3482,
											"end": 3492,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 3477,
											"end": 3480,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3473,
											"end": 3493,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3494,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3513,
											"end": 3517,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 3510,
											"end": 3511,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3503,
											"end": 3518,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3541,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3534,
											"end": 3535,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3678,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 3553,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3627,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3649,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3649,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3649,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3672,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3636,
											"end": 3672,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3652,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3652,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 3652,
											"end": 3670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 4105,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 3683,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3773,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3773,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 4099,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 3829,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3857,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3840,
											"end": 3848,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3858,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 4099,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 3829,
											"end": 4099,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 3906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 3915,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3938,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 3885,
											"end": 3938,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 3918,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3968,
											"end": 3975,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3966,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 4006,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 3951,
											"end": 4006,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3988,
											"end": 4004,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3988,
											"end": 4004,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3988,
											"end": 4004,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3988,
											"end": 4004,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 4006,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 3951,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4089,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4089,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4089,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4089,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4027,
											"end": 4042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4027,
											"end": 4042,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4027,
											"end": 4042,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4027,
											"end": 4042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 3829,
											"end": 4099,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 4099,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 3829,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3833,
											"end": 3836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 4105,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 4105,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 4105,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 4105,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 4105,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 4105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4110,
											"end": 4916,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 4110,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4159,
											"end": 4164,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4189,
											"end": 4197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4179,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 4179,
											"end": 4259,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4244,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4244,
											"end": 4249,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4179,
											"end": 4259,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 4179,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4282,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4268,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 4268,
											"end": 4344,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4315,
											"end": 4316,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4329,
											"end": 4334,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4268,
											"end": 4344,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 4268,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4378,
											"end": 4379,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4373,
											"end": 4432,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 4373,
											"end": 4432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4447,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4441,
											"end": 4571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4571,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 4441,
											"end": 4571,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 4353,
											"end": 4571,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4432,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 4373,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4403,
											"end": 4404,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4394,
											"end": 4404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4394,
											"end": 4404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4417,
											"end": 4422,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4571,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 4441,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4481,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4468,
											"end": 4476,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4482,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4505,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 4462,
											"end": 4505,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4485,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 4485,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 4485,
											"end": 4503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4485,
											"end": 4503,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 4485,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4541,
											"end": 4542,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4527,
											"end": 4543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4543,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4556,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4556,
											"end": 4561,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4571,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 4353,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4655,
											"end": 4657,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4645,
											"end": 4653,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4658,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "PUSH",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4627,
											"end": 4640,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4617,
											"end": 4619,
											"name": "PUSH",
											"source": 10,
											"value": "4E"
										},
										{
											"begin": 4607,
											"end": 4615,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4604,
											"end": 4620,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4599,
											"end": 4601,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 4593,
											"end": 4597,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4602,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4583,
											"end": 4660,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4580,
											"end": 4739,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4580,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 4580,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4711,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4711,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4711,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4580,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 4580,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 4796,
											"end": 4804,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4790,
											"end": 4794,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 4771,
											"end": 4805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4805,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 4771,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4841,
											"end": 4847,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4839,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 4848,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4827,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 4849,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4872,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 4814,
											"end": 4872,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 4852,
											"end": 4870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 4910,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 4910,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4110,
											"end": 4916,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 5052,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 4921,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4981,
											"end": 4986,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5010,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 5037,
											"end": 5045,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5010,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 5010,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5225,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 5057,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5097,
											"end": 5104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5164,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5159,
											"end": 5160,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5161,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5151,
											"end": 5165,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5148,
											"end": 5149,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5141,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5142,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5126,
											"end": 5143,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5167,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5119,
											"end": 5190,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5119,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 5119,
											"end": 5190,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5170,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 5170,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 5170,
											"end": 5188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5170,
											"end": 5188,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 5170,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5210,
											"end": 5219,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5210,
											"end": 5219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5447,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 5230,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5270,
											"end": 5271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5297,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 5286,
											"end": 5418,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5350,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5335,
											"end": 5338,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5331,
											"end": 5351,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5329,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5321,
											"end": 5352,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5375,
											"end": 5379,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5365,
											"end": 5380,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5400,
											"end": 5401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5408,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5418,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 5286,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5832,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 5452,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5531,
											"end": 5532,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5527,
											"end": 5539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5539,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5539,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5586,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5586,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5595,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 5595,
											"end": 5656,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5649,
											"end": 5653,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 5641,
											"end": 5647,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5637,
											"end": 5654,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5627,
											"end": 5654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5627,
											"end": 5654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5595,
											"end": 5656,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 5595,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5702,
											"end": 5704,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5694,
											"end": 5700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5691,
											"end": 5705,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5706,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 5665,
											"end": 5826,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 5758,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5743,
											"end": 5746,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5739,
											"end": 5759,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5760,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5783,
											"end": 5787,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5773,
											"end": 5788,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5811,
											"end": 5815,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5808,
											"end": 5809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5826,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 5665,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5832,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6246,
											"end": 6430,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 6246,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6371,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6357,
											"end": 6366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6348,
											"end": 6355,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6367,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6340,
											"end": 6372,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6337,
											"end": 6389,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6337,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 6337,
											"end": 6389,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6385,
											"end": 6386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6382,
											"end": 6383,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6387,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6337,
											"end": 6389,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 6337,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6408,
											"end": 6424,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6408,
											"end": 6424,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6246,
											"end": 6430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6246,
											"end": 6430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 8231,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 7954,
											"end": 8231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8021,
											"end": 8027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8074,
											"end": 8076,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8062,
											"end": 8071,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8053,
											"end": 8060,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8049,
											"end": 8072,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8045,
											"end": 8077,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8042,
											"end": 8094,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8042,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 8042,
											"end": 8094,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8090,
											"end": 8091,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8087,
											"end": 8088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8080,
											"end": 8092,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8042,
											"end": 8094,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 8042,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8122,
											"end": 8131,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8116,
											"end": 8132,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8175,
											"end": 8180,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8168,
											"end": 8181,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8161,
											"end": 8182,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8151,
											"end": 8183,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8141,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 8141,
											"end": 8201,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8197,
											"end": 8198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8194,
											"end": 8195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8187,
											"end": 8199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14427,
											"end": 14555,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 14427,
											"end": 14555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14494,
											"end": 14503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14494,
											"end": 14503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14494,
											"end": 14503,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14515,
											"end": 14526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14515,
											"end": 14526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14515,
											"end": 14526,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14512,
											"end": 14549,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14512,
											"end": 14549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 14512,
											"end": 14549,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14529,
											"end": 14547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 14529,
											"end": 14547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 14529,
											"end": 14547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/maximus.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"endStakeHEX(uint256,uint40)": "4953a509",
							"getAllowanceHEX()": "d720d871",
							"getBalanceHEX()": "669d751e",
							"getMintingPhaseEndDay()": "037c3f5d",
							"getMintingPhaseStartDay()": "488b4783",
							"getNumStake()": "79f82bde",
							"getRedemptionRate()": "2b11551a",
							"getStakeEndDay()": "751279b9",
							"getStakeStartDay()": "db141222",
							"get_amount_redeem_hex(uint256)": "d2dea365",
							"get_hex_day()": "46cbbe9e",
							"hasStakeStarted()": "88b022c6",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"percent(uint256,uint256,uint256)": "002c1a9e",
							"pledgeHEX(uint256)": "4537523c",
							"redeemHEX(uint256)": "e7644fb9",
							"renounceOwnership()": "715018a6",
							"stakeHEX()": "ba777bcc",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start_day\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"stakeIdParam\",\"type\":\"uint40\"}],\"name\":\"endStakeHEX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowanceHEX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceHEX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintingPhaseEndDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintingPhaseStartDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRedemptionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeEndDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeStartDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"get_amount_redeem_hex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_hex_day\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasStakeStarted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"precision\",\"type\":\"uint256\"}],\"name\":\"percent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quotient\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pledgeHEX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_MAXI\",\"type\":\"uint256\"}],\"name\":\"redeemHEX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeHEX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/maximus.sol\":\"MyToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":201},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0707ddb033e6bbb36546b9d58bb6f043076ceac7a10792a71dfd957583acde09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f16258ce35ab9409430a2213b3a76845c06f01cbf2e6c2f5229d5efad1367b2\",\"dweb:/ipfs/QmTKeY9WgozRyDAQuX3zgLRbS1maWGuA5VJZL6n3GcptJo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/maximus.sol\":{\"keccak256\":\"0x022ea901d4e7e2ca90d49a80197826cb526925ebcb8b2cc74ce83b82f60f7278\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b42f7f475f01ae96e838e95df3410b2b062fdd819b4279c9bca28dbb3a2527a1\",\"dweb:/ipfs/QmQYAcvyFGhVG2aDiM6vUeXQBJYp6iEQ5KpPmb2LhEpyDm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 126,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 128,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 130,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1738,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "MINTING_PHASE_START",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1740,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "MINTING_PHASE_END",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1742,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "HAS_STAKE_STARTED",
								"offset": 0,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 1744,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "HAS_STAKE_ENDED",
								"offset": 1,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 1746,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "STAKE_START_DAY",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1748,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "STAKE_END_DAY",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1750,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "REDEMPTION_RATE",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1752,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "STAKE_LENGTH",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1754,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "STAKE_ID",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1910,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "CONTRACT_ADDRESS",
								"offset": 0,
								"slot": "14",
								"type": "t_address"
							},
							{
								"astId": 1913,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "HEX_ADDRESS",
								"offset": 0,
								"slot": "15",
								"type": "t_address"
							},
							{
								"astId": 1919,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "hex_contract",
								"offset": 0,
								"slot": "16",
								"type": "t_contract(IERC20)728"
							},
							{
								"astId": 1925,
								"contract": "contracts/maximus.sol:MyToken",
								"label": "token",
								"offset": 0,
								"slot": "17",
								"type": "t_contract(HEXToken)1730"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(HEXToken)1730": {
								"encoding": "inplace",
								"label": "contract HEXToken",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)728": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/maximus.sol:144:9:\n    |\n144 |         uint256 hex_balance = hex_contract.balanceOf(address(this));\n    |         ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6598,
					"file": "contracts/maximus.sol",
					"start": 6579
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/maximus.sol:145:9:\n    |\n145 |         uint256 total_maxi = IERC20(address(this)).totalSupply();\n    |         ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6666,
					"file": "contracts/maximus.sol",
					"start": 6648
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/maximus.sol:45:5:\n   |\n45 |     function decimals() public view override returns (uint8) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1879,
					"file": "contracts/maximus.sol",
					"start": 1747
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/maximus.sol:61:5:\n   |\n61 |     function percent(uint numerator, uint denominator, uint precision) public view returns(uint quotient) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2749,
					"file": "contracts/maximus.sol",
					"start": 2399
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1358
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 1359,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"668:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1358,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								1358
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nameLocations": [
													"1712:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nameLocations": [
													"1978:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1358
						],
						"ERC20": [
							650
						],
						"IERC20": [
							728
						],
						"IERC20Metadata": [
							815
						]
					},
					"id": 651,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 651,
							"sourceUnit": 729,
							"src": "115:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 651,
							"sourceUnit": 816,
							"src": "138:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 651,
							"sourceUnit": 1359,
							"src": "180:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 111,
										"name": "Context",
										"nameLocations": [
											"1406:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1358,
										"src": "1406:7:1"
									},
									"id": 112,
									"nodeType": "InheritanceSpecifier",
									"src": "1406:7:1"
								},
								{
									"baseName": {
										"id": 113,
										"name": "IERC20",
										"nameLocations": [
											"1415:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 728,
										"src": "1415:6:1"
									},
									"id": 114,
									"nodeType": "InheritanceSpecifier",
									"src": "1415:6:1"
								},
								{
									"baseName": {
										"id": 115,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1423:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 815,
										"src": "1423:14:1"
									},
									"id": 116,
									"nodeType": "InheritanceSpecifier",
									"src": "1423:14:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 110,
								"nodeType": "StructuredDocumentation",
								"src": "215:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 650,
							"linearizedBaseContracts": [
								650,
								815,
								728,
								1358
							],
							"name": "ERC20",
							"nameLocation": "1397:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 120,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1480:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 650,
									"src": "1444:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 119,
										"keyType": {
											"id": 117,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1452:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1444:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 118,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1463:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 126,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1552:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 650,
									"src": "1496:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 125,
										"keyType": {
											"id": 121,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1504:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1496:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 124,
											"keyType": {
												"id": 122,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1523:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1515:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1534:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1586:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 650,
									"src": "1570:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1570:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1620:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 650,
									"src": "1605:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 129,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1605:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 132,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1646:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 650,
									"src": "1631:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 131,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1631:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "2019:57:1",
										"statements": [
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2029:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "2037:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2029:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2029:13:1"
											},
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 144,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "2052:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 145,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "2062:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2052:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "2052:17:1"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "1660:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 149,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1989:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1975:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 134,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1975:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2010:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1996:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1996:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1974:44:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2019:0:1"
									},
									"scope": 650,
									"src": "1963:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										802
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "2210:29:1",
										"statements": [
											{
												"expression": {
													"id": 156,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "2227:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 155,
												"id": 157,
												"nodeType": "Return",
												"src": "2220:12:1"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "2082:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2150:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2177:8:1"
									},
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2154:2:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "2195:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 153,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2195:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:15:1"
									},
									"scope": 650,
									"src": "2141:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										808
									],
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "2423:31:1",
										"statements": [
											{
												"expression": {
													"id": 166,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 132,
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 165,
												"id": 167,
												"nodeType": "Return",
												"src": "2433:14:1"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "2245:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2361:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2390:8:1"
									},
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2367:2:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2408:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2408:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:15:1"
									},
									"scope": 650,
									"src": "2352:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										814
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "3143:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3160:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 175,
												"id": 177,
												"nodeType": "Return",
												"src": "3153:9:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "2460:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3087:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3118:8:1"
									},
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3095:2:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "3136:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 173,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3136:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3135:7:1"
									},
									"scope": 650,
									"src": "3078:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										659
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "3299:36:1",
										"statements": [
											{
												"expression": {
													"id": 186,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 128,
													"src": "3316:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 185,
												"id": 187,
												"nodeType": "Return",
												"src": "3309:19:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3175:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3238:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 182,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3272:8:1"
									},
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3249:2:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3290:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3290:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3289:9:1"
									},
									"scope": 650,
									"src": "3229:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										667
									],
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "3476:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 198,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "3493:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 200,
													"indexExpression": {
														"id": 199,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "3503:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3493:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 197,
												"id": 201,
												"nodeType": "Return",
												"src": "3486:25:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "3341:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3402:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3449:8:1"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3420:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3412:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:17:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3467:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3466:9:1"
									},
									"scope": 650,
									"src": "3393:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										677
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3813:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 215,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "3833:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3833:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "3847:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3858:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "3823:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "3823:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3882:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 213,
												"id": 222,
												"nodeType": "Return",
												"src": "3875:11:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "3524:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3730:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 210,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3789:8:1"
									},
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3747:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3739:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3766:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3758:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3807:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3807:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3806:6:1"
									},
									"scope": 650,
									"src": "3721:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										687
									],
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "4049:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 235,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4066:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 237,
														"indexExpression": {
															"id": 236,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "4078:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4066:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 239,
													"indexExpression": {
														"id": 238,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4085:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4066:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 234,
												"id": 240,
												"nodeType": "Return",
												"src": "4059:34:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3899:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3960:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 231,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4022:8:1"
									},
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3978:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3970:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3970:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3993:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3985:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3985:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:32:1"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "4040:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4040:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4039:9:1"
									},
									"scope": 650,
									"src": "3951:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										697
									],
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "4327:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 254,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "4346:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4346:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 256,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "4360:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 257,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "4369:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 253,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "4337:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4337:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "4337:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4393:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 252,
												"id": 261,
												"nodeType": "Return",
												"src": "4386:11:1"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "4106:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4247:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 249,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4303:8:1"
									},
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4263:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4255:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4280:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4272:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4272:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4254:33:1"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4321:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 250,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4321:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4320:6:1"
									},
									"scope": 650,
									"src": "4238:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										709
									],
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "5013:336:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "5033:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 278,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "5041:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 279,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "5052:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 276,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "5023:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5023:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "5023:36:1"
											},
											{
												"assignments": [
													283
												],
												"declarations": [
													{
														"constant": false,
														"id": 283,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5078:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "5070:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 282,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 290,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 284,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "5097:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 286,
														"indexExpression": {
															"id": 285,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "5109:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5097:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 289,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 287,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "5117:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5117:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5097:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5070:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 292,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "5148:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 293,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "5168:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5148:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5176:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5140:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "5140:79:1"
											},
											{
												"id": 307,
												"nodeType": "UncheckedBlock",
												"src": "5229:92:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 299,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "5262:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 300,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "5270:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5270:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 302,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "5284:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 303,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "5303:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5284:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 298,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "5253:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5253:57:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 306,
														"nodeType": "ExpressionStatement",
														"src": "5253:57:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5338:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 275,
												"id": 309,
												"nodeType": "Return",
												"src": "5331:11:1"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4410:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4880:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 272,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4989:8:1"
									},
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4910:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "4902:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4902:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4934:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "4926:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4961:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "4953:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:81:1"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "5007:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5007:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5006:6:1"
									},
									"scope": 650,
									"src": "4871:478:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5838:118:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 322,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "5857:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5857:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 324,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "5871:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 325,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 126,
																		"src": "5880:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 328,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 326,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1348,
																			"src": "5892:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5892:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5880:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 330,
																"indexExpression": {
																	"id": 329,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "5906:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5880:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 331,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5917:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5880:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 321,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "5848:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5848:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "5848:80:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5945:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 320,
												"id": 336,
												"nodeType": "Return",
												"src": "5938:11:1"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "5355:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5753:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5779:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5771:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5771:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5796:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5788:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5788:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5770:37:1"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5832:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5832:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5831:6:1"
									},
									"scope": 650,
									"src": "5744:212:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "6542:306:1",
										"statements": [
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6560:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "6552:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6552:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 356,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 350,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "6579:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 353,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 351,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "6591:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6591:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6579:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 355,
													"indexExpression": {
														"id": 354,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "6605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6579:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6552:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 358,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "6631:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 359,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "6651:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6631:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6668:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6623:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6623:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "6623:85:1"
											},
											{
												"id": 373,
												"nodeType": "UncheckedBlock",
												"src": "6718:102:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 365,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "6751:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6751:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 367,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "6765:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 368,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 349,
																		"src": "6774:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 369,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "6793:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6774:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 364,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "6742:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6742:67:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 372,
														"nodeType": "ExpressionStatement",
														"src": "6742:67:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6837:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 347,
												"id": 375,
												"nodeType": "Return",
												"src": "6830:11:1"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5962:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6452:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6478:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6470:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6495:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6487:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6487:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6469:42:1"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6536:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6536:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6535:6:1"
									},
									"scope": 650,
									"src": "6443:405:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "7439:596:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 388,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "7457:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7475:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7467:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 389,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7467:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7467:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7457:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7479:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7449:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7449:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "7449:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 398,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "7537:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7558:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7550:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 399,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7550:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7550:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7537:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7562:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7529:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7529:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "7529:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 408,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7632:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "7640:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7651:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 407,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "7611:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7611:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "7611:47:1"
											},
											{
												"assignments": [
													414
												],
												"declarations": [
													{
														"constant": false,
														"id": 414,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7677:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "7669:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 413,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7669:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"baseExpression": {
														"id": 415,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "7693:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 417,
													"indexExpression": {
														"id": 416,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "7703:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7693:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7669:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 420,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "7728:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 421,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "7745:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7753:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7720:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7720:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "7720:74:1"
											},
											{
												"id": 434,
												"nodeType": "UncheckedBlock",
												"src": "7804:77:1",
												"statements": [
													{
														"expression": {
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 426,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "7828:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 428,
																"indexExpression": {
																	"id": 427,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "7838:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7828:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 429,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "7848:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 430,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "7864:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7848:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7828:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 433,
														"nodeType": "ExpressionStatement",
														"src": "7828:42:1"
													}
												]
											},
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 435,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "7890:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 437,
														"indexExpression": {
															"id": 436,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "7900:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7890:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 438,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "7914:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7890:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "7890:30:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 442,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7945:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "7953:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7964:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "7936:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7936:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "EmitStatement",
												"src": "7931:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 448,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "8002:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "8010:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 450,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "8021:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 447,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "7982:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7982:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "7982:46:1"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "6854:463:1",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7331:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7358:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7350:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7350:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7382:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7374:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7409:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7401:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7401:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7340:81:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7439:0:1"
									},
									"scope": 650,
									"src": "7322:713:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "8376:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 463,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "8394:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8413:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8405:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 464,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8405:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8405:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8394:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8417:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8386:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8386:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "8386:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8491:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8483:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 473,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8483:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8483:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 477,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "8495:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "8504:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 472,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "8462:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8462:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "8462:49:1"
											},
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 481,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "8522:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 482,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "8538:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8522:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "8522:22:1"
											},
											{
												"expression": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 485,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "8554:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 487,
														"indexExpression": {
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "8564:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8554:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 488,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "8576:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8554:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "8554:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8614:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8606:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 492,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8606:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8606:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "8618:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "8627:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 491,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "8597:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "EmitStatement",
												"src": "8592:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8673:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8665:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 501,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8665:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8665:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "8677:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "8686:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 500,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "8645:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8645:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "8645:48:1"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "8041:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8320:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "8326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8351:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "8343:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8325:33:1"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8376:0:1"
									},
									"scope": 650,
									"src": "8311:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "9085:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 519,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "9103:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9122:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9114:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 520,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9114:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9114:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9103:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9126:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9095:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9095:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "9095:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 529,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "9194:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9211:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9203:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 530,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9203:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9203:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "9215:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 528,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "9173:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9173:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "9173:49:1"
											},
											{
												"assignments": [
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9241:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "9233:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9233:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 542,
												"initialValue": {
													"baseExpression": {
														"id": 539,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "9258:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 541,
													"indexExpression": {
														"id": 540,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "9268:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9258:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9233:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 544,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "9294:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 545,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "9312:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9294:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9320:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9286:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9286:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "9286:71:1"
											},
											{
												"id": 558,
												"nodeType": "UncheckedBlock",
												"src": "9367:79:1",
												"statements": [
													{
														"expression": {
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 550,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "9391:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 552,
																"indexExpression": {
																	"id": 551,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "9401:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9391:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 553,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "9412:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 554,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "9429:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9412:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9391:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 557,
														"nodeType": "ExpressionStatement",
														"src": "9391:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 559,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "9455:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 560,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "9471:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9455:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "9455:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 564,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "9502:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9519:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9511:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 565,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9511:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9511:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 569,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "9523:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 563,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "9493:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9493:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "EmitStatement",
												"src": "9488:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 573,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "9561:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9578:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9570:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 574,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9570:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9570:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "9582:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 572,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "9541:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9541:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "9541:48:1"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "8706:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9029:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9043:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "9035:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9060:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "9052:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9052:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9034:33:1"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9085:0:1"
									},
									"scope": 650,
									"src": "9020:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "10132:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 593,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "10150:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10167:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10159:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 594,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10159:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10159:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10150:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10171:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10142:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10142:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "10142:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 603,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "10228:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10247:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10239:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 604,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10239:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10239:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10228:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10251:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10220:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10220:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "10220:68:1"
											},
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 612,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "10299:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 615,
															"indexExpression": {
																"id": 613,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "10311:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10299:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 616,
														"indexExpression": {
															"id": 614,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "10318:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10299:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 617,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "10329:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10299:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "10299:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 621,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "10359:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 622,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "10366:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "10375:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "10350:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10350:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 625,
												"nodeType": "EmitStatement",
												"src": "10345:37:1"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "9602:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10028:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10054:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "10046:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10046:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10077:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "10069:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10069:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10102:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "10094:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10094:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10036:78:1"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10132:0:1"
									},
									"scope": 650,
									"src": "10019:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "11092:2:1",
										"statements": []
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "10395:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10982:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11020:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "11012:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11012:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11042:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "11034:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11034:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11062:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "11054:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11054:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11002:72:1"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11092:0:1"
									},
									"scope": 650,
									"src": "10973:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "11800:2:1",
										"statements": []
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "11100:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "11691:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11728:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "11720:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11720:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11750:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "11742:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11742:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11770:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "11762:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11710:72:1"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11800:0:1"
									},
									"scope": 650,
									"src": "11682:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 651,
							"src": "1388:10416:1",
							"usedErrors": []
						}
					],
					"src": "90:11715:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							728
						]
					},
					"id": 729,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 652,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 653,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 728,
							"linearizedBaseContracts": [
								728
							],
							"name": "IERC20",
							"nameLocation": "197:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 659,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:2"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "327:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:2"
									},
									"scope": 728,
									"src": "281:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:2"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "478:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:2"
									},
									"scope": 728,
									"src": "419:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "725:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "744:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:2"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "778:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 674,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:2"
									},
									"scope": 728,
									"src": "707:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1078:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1093:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1133:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:2"
									},
									"scope": 728,
									"src": "1059:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1812:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1829:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:2"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:2"
									},
									"scope": 728,
									"src": "1795:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2207:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2231:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2258:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:2"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2297:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 706,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:2"
									},
									"scope": 728,
									"src": "2176:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 718,
									"name": "Transfer",
									"nameLocation": "2478:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2487:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2509:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2529:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:2"
									},
									"src": "2472:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 727,
									"name": "Approval",
									"nameLocation": "2709:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "2718:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "2741:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "2766:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:2"
									},
									"src": "2703:78:2"
								}
							],
							"scope": 729,
							"src": "187:2596:2",
							"usedErrors": []
						}
					],
					"src": "91:2693:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1358
						],
						"ERC20": [
							650
						],
						"ERC20Burnable": [
							790
						],
						"IERC20": [
							728
						],
						"IERC20Metadata": [
							815
						]
					},
					"id": 791,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 730,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 731,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 791,
							"sourceUnit": 651,
							"src": "134:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 732,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 791,
							"sourceUnit": 1359,
							"src": "157:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 734,
										"name": "Context",
										"nameLocations": [
											"439:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1358,
										"src": "439:7:3"
									},
									"id": 735,
									"nodeType": "InheritanceSpecifier",
									"src": "439:7:3"
								},
								{
									"baseName": {
										"id": 736,
										"name": "ERC20",
										"nameLocations": [
											"448:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 650,
										"src": "448:5:3"
									},
									"id": 737,
									"nodeType": "InheritanceSpecifier",
									"src": "448:5:3"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 733,
								"nodeType": "StructuredDocumentation",
								"src": "195:208:3",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": false,
							"id": 790,
							"linearizedBaseContracts": [
								790,
								650,
								815,
								728,
								1358
							],
							"name": "ERC20Burnable",
							"nameLocation": "422:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "608:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 744,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "624:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "624:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "638:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 743,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "618:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "618:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "618:27:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "460:98:3",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "572:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:16:3"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "608:0:3"
									},
									"scope": 790,
									"src": "563:89:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "1024:295:3",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "1042:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 788,
														"src": "1034:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"initialValue": {
													"arguments": [
														{
															"id": 761,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "1071:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 762,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "1080:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1080:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 760,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "1061:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1061:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:59:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 767,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "1111:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 768,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "1131:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1111:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1139:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															},
															"value": "ERC20: burn amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															}
														],
														"id": 766,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1103:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1103:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "1103:75:3"
											},
											{
												"id": 782,
												"nodeType": "UncheckedBlock",
												"src": "1188:93:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 774,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "1221:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 775,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "1230:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1230:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 777,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "1244:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 778,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "1263:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1244:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 773,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "1212:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1212:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 781,
														"nodeType": "ExpressionStatement",
														"src": "1212:58:3"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 784,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "1296:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 785,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "1305:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 783,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "1290:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1290:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "1290:22:3"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "658:295:3",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "967:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "984:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "976:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:33:3"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1024:0:3"
									},
									"scope": 790,
									"src": "958:361:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 791,
							"src": "404:917:3",
							"usedErrors": []
						}
					],
					"src": "109:1213:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							728
						],
						"IERC20Metadata": [
							815
						]
					},
					"id": 816,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 792,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 793,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 816,
							"sourceUnit": 729,
							"src": "135:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 795,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 728,
										"src": "305:6:4"
									},
									"id": 796,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 794,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 815,
							"linearizedBaseContracts": [
								815,
								728
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 802,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 799,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 815,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 805,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 815,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 811,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 815,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 816,
							"src": "277:405:4",
							"usedErrors": []
						}
					],
					"src": "110:573:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1336
						],
						"IERC20": [
							728
						],
						"SafeERC20": [
							1039
						]
					},
					"id": 1040,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 817,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 818,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 729,
							"src": "125:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 819,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 1337,
							"src": "149:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 820,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1039,
							"linearizedBaseContracts": [
								1039
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 823,
									"libraryName": {
										"id": 821,
										"name": "Address",
										"nameLocations": [
											"675:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1336,
										"src": "675:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:5",
									"typeName": {
										"id": 822,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "803:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 834,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "833:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 837,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "863:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$728",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "869:8:5",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 677,
																		"src": "863:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "878:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 840,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "888:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 841,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "892:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 835,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "844:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 833,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "813:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "813:86:5"
											}
										]
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "732:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$728",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 825,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 824,
														"name": "IERC20",
														"nameLocations": [
															"732:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 728,
														"src": "732:6:5"
													},
													"referencedDeclaration": 728,
													"src": "732:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$728",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "754:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "774:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:5"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:5"
									},
									"scope": 1039,
									"src": "701:205:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "1040:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 859,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "1070:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 862,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 849,
																			"src": "1100:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$728",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1106:12:5",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 709,
																		"src": "1100:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1119:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 865,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "1129:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 866,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "1135:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 867,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "1139:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 860,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1081:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 858,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "1050:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:5"
											}
										]
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "947:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$728",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 848,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 847,
														"name": "IERC20",
														"nameLocations": [
															"947:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 728,
														"src": "947:6:5"
													},
													"referencedDeclaration": 728,
													"src": "947:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$728",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "969:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "991:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "1011:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:5"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:5"
									},
									"scope": 1039,
									"src": "912:241:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "1519:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 884,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 880,
																			"src": "1768:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 887,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 892,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1039",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1039",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 891,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 890,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 893,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 894,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 878,
																					"src": "1815:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 888,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 876,
																					"src": "1784:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$728",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1790:9:5",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 687,
																				"src": "1784:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 898,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 883,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "1939:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 907,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 876,
																			"src": "1969:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$728",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1975:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 697,
																		"src": "1969:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1983:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 910,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "1993:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 911,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "2002:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 905,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1950:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 903,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "1919:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:5"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "1443:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$728",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 875,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 874,
														"name": "IERC20",
														"nameLocations": [
															"1443:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 728,
														"src": "1443:6:5"
													},
													"referencedDeclaration": 728,
													"src": "1443:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$728",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "1465:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "1490:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:5"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:5"
									},
									"scope": 1039,
									"src": "1413:603:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "2138:194:5",
										"statements": [
											{
												"assignments": [
													927
												],
												"declarations": [
													{
														"constant": false,
														"id": 927,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 951,
														"src": "2148:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 926,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 938,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 932,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1039",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1039",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 930,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 934,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "2202:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 928,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "2171:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$728",
																	"typeString": "contract IERC20"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2177:9:5",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 687,
															"src": "2171:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 936,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "2213:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 940,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "2248:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 943,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 919,
																			"src": "2278:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$728",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2284:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 697,
																		"src": "2278:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2292:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 946,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "2302:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 947,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "2311:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 941,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2259:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 939,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "2228:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:5"
											}
										]
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "2062:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$728",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 918,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 917,
														"name": "IERC20",
														"nameLocations": [
															"2062:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 728,
														"src": "2062:6:5"
													},
													"referencedDeclaration": 728,
													"src": "2062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$728",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "2084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "2109:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:5"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:5"
									},
									"scope": 1039,
									"src": "2022:310:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "2454:370:5",
										"statements": [
											{
												"id": 998,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:5",
												"statements": [
													{
														"assignments": [
															963
														],
														"declarations": [
															{
																"constant": false,
																"id": 963,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 998,
																"src": "2488:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 962,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 972,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 968,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1039",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1039",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 966,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 970,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "2542:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 964,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "2511:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$728",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2517:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 687,
																"src": "2511:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 974,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "2572:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 975,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "2588:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 973,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 979,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:5"
													},
													{
														"assignments": [
															981
														],
														"declarations": [
															{
																"constant": false,
																"id": 981,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 998,
																"src": "2653:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 980,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 985,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 982,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "2676:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 983,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "2691:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 987,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "2730:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$728",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 990,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "2760:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$728",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2766:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 697,
																				"src": "2760:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2774:8:5",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 993,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 957,
																			"src": "2784:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 994,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "2793:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 988,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2741:18:5",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$728",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 986,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "2710:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 997,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:5"
													}
												]
											}
										]
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2378:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$728",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 954,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 953,
														"name": "IERC20",
														"nameLocations": [
															"2378:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 728,
														"src": "2378:6:5"
													},
													"referencedDeclaration": 728,
													"src": "2378:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$728",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2400:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2425:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:5"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:5"
									},
									"scope": 1039,
									"src": "2338:486:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "3277:636:5",
										"statements": [
											{
												"assignments": [
													1010
												],
												"declarations": [
													{
														"constant": false,
														"id": 1010,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "3626:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1009,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"arguments": [
														{
															"id": 1016,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "3680:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1013,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "3660:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$728",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$728",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1011,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3667:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1130,
														"src": "3652:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1020,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "3735:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3746:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1036,
												"nodeType": "IfStatement",
												"src": "3731:176:5",
												"trueBody": {
													"id": 1035,
													"nodeType": "Block",
													"src": "3758:149:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1027,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1010,
																				"src": "3830:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1029,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1028,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1030,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1025,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3823:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1024,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1034,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "3236:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$728",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1003,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1002,
														"name": "IERC20",
														"nameLocations": [
															"3236:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 728,
														"src": "3236:6:5"
													},
													"referencedDeclaration": 728,
													"src": "3236:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$728",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "3250:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1005,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:5"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:5"
									},
									"scope": 1039,
									"src": "3207:706:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1040,
							"src": "645:3270:5",
							"usedErrors": []
						}
					],
					"src": "100:3816:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1336
						]
					},
					"id": 1337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1041,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1042,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1336,
							"linearizedBaseContracts": [
								1336
							],
							"name": "Address",
							"nameLocation": "187:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "837:311:6",
										"statements": [
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1058,
														"src": "1034:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1052,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:6",
														"valueSize": 1
													},
													{
														"declaration": 1051,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:6",
														"valueSize": 1
													}
												],
												"id": 1053,
												"nodeType": "InlineAssembly",
												"src": "1056:61:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1054,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "1133:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1049,
												"id": 1057,
												"nodeType": "Return",
												"src": "1126:15:6"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "791:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:6"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "831:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1047,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:6"
									},
									"scope": 1336,
									"src": "771:377:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "2136:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1070,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1336",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1336",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1068,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2168:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1073,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "2179:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:6"
											},
											{
												"assignments": [
													1079,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1092,
														"src": "2231:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1078,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1086,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1080,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "2249:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2259:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1082,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "2271:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1088,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "2300:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:6"
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "2084:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "2111:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:6"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:6"
									},
									"scope": 1336,
									"src": "2065:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "3208:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1104,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "3238:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "3246:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1103,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1110,
															1130
														],
														"referencedDeclaration": 1130,
														"src": "3225:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1102,
												"id": 1108,
												"nodeType": "Return",
												"src": "3218:67:6"
											}
										]
									},
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3141:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3157:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:6"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3194:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:6"
									},
									"scope": 1336,
									"src": "3119:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "3661:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1123,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "3700:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "3708:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1126,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "3717:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1122,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1150,
															1200
														],
														"referencedDeclaration": 1200,
														"src": "3678:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1128,
												"nodeType": "Return",
												"src": "3671:59:6"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3545:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3569:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3596:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:6"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3647:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:6"
									},
									"scope": 1336,
									"src": "3514:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "4242:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1143,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "4281:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "4289:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1145,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "4295:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1142,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1150,
															1200
														],
														"referencedDeclaration": 1200,
														"src": "4259:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1148,
												"nodeType": "Return",
												"src": "4252:94:6"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "4139:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "4163:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "4190:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:6"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "4228:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:6"
									},
									"scope": 1336,
									"src": "4099:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "4780:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1167,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1336",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1336",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1165,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4812:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1170,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "4823:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1177,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "4900:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1176,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "4889:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:6"
											},
											{
												"assignments": [
													1183,
													1185
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1199,
														"src": "4953:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1182,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1185,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1199,
														"src": "4967:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1184,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1192,
												"initialValue": {
													"arguments": [
														{
															"id": 1190,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "5020:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1186,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "4994:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5001:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1188,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "5013:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1194,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "5059:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1195,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "5068:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1196,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "5080:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1193,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "5042:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1163,
												"id": 1198,
												"nodeType": "Return",
												"src": "5035:58:6"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4641:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4665:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4692:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4715:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:6"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4766:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:6"
									},
									"scope": 1336,
									"src": "4601:499:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "5377:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1211,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "5413:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "5421:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1210,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1217,
															1252
														],
														"referencedDeclaration": 1252,
														"src": "5394:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1215,
												"nodeType": "Return",
												"src": "5387:80:6"
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "5305:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "5321:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:6"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "5363:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:6"
									},
									"scope": 1336,
									"src": "5277:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "5816:228:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1231,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "5845:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1230,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "5834:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:6"
											},
											{
												"assignments": [
													1237,
													1239
												],
												"declarations": [
													{
														"constant": false,
														"id": 1237,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "5905:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1236,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1239,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "5919:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1238,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1242,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "5964:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1240,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "5946:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5953:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1246,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "6003:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1247,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "6012:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1248,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "6024:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1245,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "5986:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1250,
												"nodeType": "Return",
												"src": "5979:58:6"
											}
										]
									},
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5695:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5719:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1221,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5746:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:6"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5802:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:6"
									},
									"scope": 1336,
									"src": "5658:386:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "6320:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1263,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "6358:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1264,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "6366:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1262,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1269,
															1304
														],
														"referencedDeclaration": 1304,
														"src": "6337:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1261,
												"id": 1267,
												"nodeType": "Return",
												"src": "6330:84:6"
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "6253:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "6269:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:6"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "6306:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:6"
									},
									"scope": 1336,
									"src": "6223:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "6762:232:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1283,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "6791:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1282,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "6780:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:6"
											},
											{
												"assignments": [
													1289,
													1291
												],
												"declarations": [
													{
														"constant": false,
														"id": 1289,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1303,
														"src": "6853:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1288,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1291,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1303,
														"src": "6867:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1290,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"initialValue": {
													"arguments": [
														{
															"id": 1294,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "6914:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1292,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "6894:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6901:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1298,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "6953:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1299,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "6962:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1300,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "6974:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1297,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "6936:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1280,
												"id": 1302,
												"nodeType": "Return",
												"src": "6929:58:6"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "6646:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "6670:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "6697:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1275,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:6"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "6748:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1278,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:6"
									},
									"scope": 1336,
									"src": "6607:387:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "7374:532:6",
										"statements": [
											{
												"condition": {
													"id": 1316,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1307,
													"src": "7388:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1332,
													"nodeType": "Block",
													"src": "7445:455:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1320,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7529:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7540:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1330,
																"nodeType": "Block",
																"src": "7837:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1327,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1311,
																					"src": "7862:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1326,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1329,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:6"
																	}
																]
															},
															"id": 1331,
															"nodeType": "IfStatement",
															"src": "7525:365:6",
															"trueBody": {
																"id": 1325,
																"nodeType": "Block",
																"src": "7552:279:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:6"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1309,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1309,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1324,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 1333,
												"nodeType": "IfStatement",
												"src": "7384:516:6",
												"trueBody": {
													"id": 1319,
													"nodeType": "Block",
													"src": "7397:42:6",
													"statements": [
														{
															"expression": {
																"id": 1317,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1309,
																"src": "7418:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1315,
															"id": 1318,
															"nodeType": "Return",
															"src": "7411:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "7249:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "7271:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "7304:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1310,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:6"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "7360:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:6"
									},
									"scope": 1336,
									"src": "7214:692:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1337,
							"src": "179:7729:6",
							"usedErrors": []
						}
					],
					"src": "86:7823:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1358
						]
					},
					"id": 1359,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1339,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1358,
							"linearizedBaseContracts": [
								1358
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1344,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1343,
												"id": 1346,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 1358,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1353,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1352,
												"id": 1355,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1350,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 1358,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1359,
							"src": "608:235:7",
							"usedErrors": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1670
						]
					},
					"id": 1671,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1360,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1361,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:8",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1670,
							"linearizedBaseContracts": [
								1670
							],
							"name": "SafeMath",
							"nameLocation": "475:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "702:140:8",
										"statements": [
											{
												"id": 1391,
												"nodeType": "UncheckedBlock",
												"src": "712:124:8",
												"statements": [
													{
														"assignments": [
															1374
														],
														"declarations": [
															{
																"constant": false,
																"id": 1374,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1391,
																"src": "736:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1373,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1378,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1375,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "748:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1376,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1366,
																"src": "752:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1379,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "771:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1380,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "775:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1386,
														"nodeType": "IfStatement",
														"src": "767:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1384,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1372,
															"id": 1385,
															"nodeType": "Return",
															"src": "778:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1388,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "823:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1372,
														"id": 1390,
														"nodeType": "Return",
														"src": "809:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "642:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "653:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:8"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "687:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1368,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:8"
									},
									"scope": 1670,
									"src": "626:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1420,
										"nodeType": "Block",
										"src": "1064:113:8",
										"statements": [
											{
												"id": 1419,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1405,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "1102:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1406,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "1106:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1412,
														"nodeType": "IfStatement",
														"src": "1098:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1410,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1404,
															"id": 1411,
															"nodeType": "Return",
															"src": "1109:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1414,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1396,
																		"src": "1154:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1415,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "1158:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1417,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1404,
														"id": 1418,
														"nodeType": "Return",
														"src": "1140:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:8",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "1004:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "1015:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:8"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "1049:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "1055:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:8"
									},
									"scope": 1670,
									"src": "988:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "1401:417:8",
										"statements": [
											{
												"id": 1461,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1433,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "1669:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1440,
														"nodeType": "IfStatement",
														"src": "1665:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1438,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1432,
															"id": 1439,
															"nodeType": "Return",
															"src": "1677:16:8"
														}
													},
													{
														"assignments": [
															1442
														],
														"declarations": [
															{
																"constant": false,
																"id": 1442,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1461,
																"src": "1707:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1441,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1446,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1443,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "1719:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1444,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "1723:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1447,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "1742:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1448,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "1746:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1450,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "1751:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1456,
														"nodeType": "IfStatement",
														"src": "1738:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1454,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1432,
															"id": 1455,
															"nodeType": "Return",
															"src": "1754:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1458,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "1799:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1459,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1432,
														"id": 1460,
														"nodeType": "Return",
														"src": "1785:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "1341:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "1352:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:8"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "1386:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1428,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "1392:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:8"
									},
									"scope": 1670,
									"src": "1325:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "2043:114:8",
										"statements": [
											{
												"id": 1489,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1475,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "2081:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1482,
														"nodeType": "IfStatement",
														"src": "2077:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1480,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1474,
															"id": 1481,
															"nodeType": "Return",
															"src": "2089:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1484,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "2134:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1485,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1468,
																		"src": "2138:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1487,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1474,
														"id": 1488,
														"nodeType": "Return",
														"src": "2120:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1983:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1994:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:8"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "2028:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1470,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "2034:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:8"
									},
									"scope": 1670,
									"src": "1967:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "2392:114:8",
										"statements": [
											{
												"id": 1517,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1503,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1496,
																"src": "2430:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1510,
														"nodeType": "IfStatement",
														"src": "2426:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1508,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1502,
															"id": 1509,
															"nodeType": "Return",
															"src": "2438:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1512,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1494,
																		"src": "2483:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1513,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1496,
																		"src": "2487:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1515,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1502,
														"id": 1516,
														"nodeType": "Return",
														"src": "2469:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "2332:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "2343:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:8"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "2377:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "2383:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:8"
									},
									"scope": 1670,
									"src": "2316:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "2808:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1529,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "2825:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1530,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "2829:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1528,
												"id": 1532,
												"nodeType": "Return",
												"src": "2818:12:8"
											}
										]
									},
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "2754:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "2765:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:8"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "2799:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:8"
									},
									"scope": 1670,
									"src": "2741:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "3175:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1544,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1537,
														"src": "3192:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1545,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "3196:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1543,
												"id": 1547,
												"nodeType": "Return",
												"src": "3185:12:8"
											}
										]
									},
									"documentation": {
										"id": 1535,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "3121:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "3132:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:8"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "3166:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:8"
									},
									"scope": 1670,
									"src": "3108:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "3518:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1559,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "3535:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1560,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "3539:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1562,
												"nodeType": "Return",
												"src": "3528:12:8"
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "3464:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "3475:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:8"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "3509:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:8"
									},
									"scope": 1670,
									"src": "3451:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "3903:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1574,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "3920:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1575,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "3924:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1573,
												"id": 1577,
												"nodeType": "Return",
												"src": "3913:12:8"
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "3849:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "3860:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:8"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "3894:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:8"
									},
									"scope": 1670,
									"src": "3836:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "4452:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1589,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "4469:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1590,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1584,
														"src": "4473:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1588,
												"id": 1592,
												"nodeType": "Return",
												"src": "4462:12:8"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4398:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4409:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:8"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4443:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:8"
									},
									"scope": 1670,
									"src": "4385:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "5070:106:8",
										"statements": [
											{
												"id": 1617,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1607,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1599,
																		"src": "5112:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1608,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1597,
																		"src": "5117:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1610,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "5120:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1606,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1612,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1613,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "5154:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1614,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "5158:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1605,
														"id": 1616,
														"nodeType": "Return",
														"src": "5147:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "4967:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "4986:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "5005:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1600,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:8"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "5061:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:8"
									},
									"scope": 1670,
									"src": "4945:231:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "5785:105:8",
										"statements": [
											{
												"id": 1642,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1632,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "5827:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1635,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "5834:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1631,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1637,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1638,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "5868:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1639,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "5872:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1630,
														"id": 1641,
														"nodeType": "Return",
														"src": "5861:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "5682:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "5701:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "5720:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1625,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:8"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "5776:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:8"
									},
									"scope": 1670,
									"src": "5660:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "6661:105:8",
										"statements": [
											{
												"id": 1667,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1657,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1649,
																		"src": "6703:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1660,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1651,
																	"src": "6710:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1656,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1662,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1663,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1647,
																"src": "6744:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1664,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "6748:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1655,
														"id": 1666,
														"nodeType": "Return",
														"src": "6737:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "6558:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "6577:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "6596:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1650,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:8"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "6652:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:8"
									},
									"scope": 1670,
									"src": "6536:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1671,
							"src": "467:6301:8",
							"usedErrors": []
						}
					],
					"src": "92:6677:8"
				},
				"id": 8
			},
			"contracts/maximus.sol": {
				"ast": {
					"absolutePath": "contracts/maximus.sol",
					"exportedSymbols": {
						"Address": [
							1336
						],
						"Context": [
							1358
						],
						"ERC20": [
							650
						],
						"ERC20Burnable": [
							790
						],
						"HEXToken": [
							1730
						],
						"IERC20": [
							728
						],
						"IERC20Metadata": [
							815
						],
						"MyToken": [
							2279
						],
						"Ownable": [
							104
						],
						"SafeERC20": [
							1039
						],
						"SafeMath": [
							1670
						]
					},
					"id": 2280,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1672,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1673,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2280,
							"sourceUnit": 651,
							"src": "56:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1674,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2280,
							"sourceUnit": 105,
							"src": "112:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1675,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2280,
							"sourceUnit": 729,
							"src": "165:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1676,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2280,
							"sourceUnit": 1040,
							"src": "222:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1677,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2280,
							"sourceUnit": 791,
							"src": "288:74:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1678,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2280,
							"sourceUnit": 1671,
							"src": "363:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "HEXToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1679,
								"nodeType": "StructuredDocumentation",
								"src": "423:162:9",
								"text": "@title HEX Contract Proxy\n @author Tanto Nomini\n @notice You can use this contract for only the most basic simulation\n @dev see HEX_CONTRACT_ADDRESS"
							},
							"fullyImplemented": true,
							"id": 1730,
							"linearizedBaseContracts": [
								1730
							],
							"name": "HEXToken",
							"nameLocation": "594:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "660:2:9",
										"statements": []
									},
									"functionSelector": "5c9302c9",
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "currentDay",
									"nameLocation": "616:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "626:2:9"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "652:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:9:9"
									},
									"scope": 1730,
									"src": "607:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "742:2:9",
										"statements": []
									},
									"functionSelector": "52a438b8",
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeStart",
									"nameLocation": "674:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "newStakedHearts",
												"nameLocation": "693:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "685:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "newStakedDays",
												"nameLocation": "718:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "710:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "684:48:9"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "742:0:9"
									},
									"scope": 1730,
									"src": "665:79:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "821:2:9",
										"statements": []
									},
									"functionSelector": "095ea7b3",
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "756:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "772:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "764:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "789:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "781:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:33:9"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "815:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "815:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:6:9"
									},
									"scope": 1730,
									"src": "747:76:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "901:2:9",
										"statements": []
									},
									"functionSelector": "a9059cbb",
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "835:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "852:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "844:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "871:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "863:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:35:9"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "895:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1709,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "895:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "894:6:9"
									},
									"scope": 1730,
									"src": "826:77:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "972:2:9",
										"statements": []
									},
									"functionSelector": "343009a2",
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeEnd",
									"nameLocation": "915:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "932:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "924:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "stakeIdParam",
												"nameLocation": "951:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "944:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 1716,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "944:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:41:9"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "972:0:9"
									},
									"scope": 1730,
									"src": "906:68:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "1049:2:9",
										"statements": []
									},
									"functionSelector": "33060d90",
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeCount",
									"nameLocation": "986:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "stakerAddr",
												"nameLocation": "1005:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "997:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "996:20:9"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "1040:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:9:9"
									},
									"scope": 1730,
									"src": "977:74:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2280,
							"src": "585:471:9",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1731,
										"name": "ERC20",
										"nameLocations": [
											"1077:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 650,
										"src": "1077:5:9"
									},
									"id": 1732,
									"nodeType": "InheritanceSpecifier",
									"src": "1077:5:9"
								},
								{
									"baseName": {
										"id": 1733,
										"name": "ERC20Burnable",
										"nameLocations": [
											"1084:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 790,
										"src": "1084:13:9"
									},
									"id": 1734,
									"nodeType": "InheritanceSpecifier",
									"src": "1084:13:9"
								},
								{
									"baseName": {
										"id": 1735,
										"name": "Ownable",
										"nameLocations": [
											"1099:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "1099:7:9"
									},
									"id": 1736,
									"nodeType": "InheritanceSpecifier",
									"src": "1099:7:9"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2279,
							"linearizedBaseContracts": [
								2279,
								104,
								790,
								650,
								815,
								728,
								1358
							],
							"name": "MyToken",
							"nameLocation": "1066:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1738,
									"mutability": "mutable",
									"name": "MINTING_PHASE_START",
									"nameLocation": "1190:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "1182:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1737,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1182:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1740,
									"mutability": "mutable",
									"name": "MINTING_PHASE_END",
									"nameLocation": "1223:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "1215:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1739,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1215:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1742,
									"mutability": "mutable",
									"name": "HAS_STAKE_STARTED",
									"nameLocation": "1251:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "1246:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1741,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1246:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1744,
									"mutability": "mutable",
									"name": "HAS_STAKE_ENDED",
									"nameLocation": "1279:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "1274:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1743,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1274:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1746,
									"mutability": "mutable",
									"name": "STAKE_START_DAY",
									"nameLocation": "1308:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "1300:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1745,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1300:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1748,
									"mutability": "mutable",
									"name": "STAKE_END_DAY",
									"nameLocation": "1337:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "1329:21:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1747,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1329:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1750,
									"mutability": "mutable",
									"name": "REDEMPTION_RATE",
									"nameLocation": "1364:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "1356:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1749,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1356:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1752,
									"mutability": "mutable",
									"name": "STAKE_LENGTH",
									"nameLocation": "1394:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "1386:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1751,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1386:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1754,
									"mutability": "mutable",
									"name": "STAKE_ID",
									"nameLocation": "1420:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "1412:16:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1753,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1412:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "1512:230:9",
										"statements": [
											{
												"expression": {
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1765,
														"name": "MINTING_PHASE_START",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "1531:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1766,
														"name": "start_day",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "1553:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1531:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "1531:31:9"
											},
											{
												"expression": {
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1769,
														"name": "MINTING_PHASE_END",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "1572:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1770,
															"name": "start_day",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "1592:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1771,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "1602:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1592:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1572:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1774,
												"nodeType": "ExpressionStatement",
												"src": "1572:38:9"
											},
											{
												"expression": {
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1775,
														"name": "HAS_STAKE_STARTED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "1620:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1638:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1620:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "1620:23:9"
											},
											{
												"expression": {
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1779,
														"name": "HAS_STAKE_ENDED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1744,
														"src": "1653:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1671:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1653:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1782,
												"nodeType": "ExpressionStatement",
												"src": "1653:23:9"
											},
											{
												"expression": {
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1783,
														"name": "REDEMPTION_RATE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1750,
														"src": "1686:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1702:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1686:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1786,
												"nodeType": "ExpressionStatement",
												"src": "1686:17:9"
											},
											{
												"expression": {
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1787,
														"name": "STAKE_LENGTH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "1713:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1726:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1713:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "1713:14:9"
											}
										]
									},
									"id": 1792,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1494:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1505:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 1763,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1760,
												"name": "ERC20",
												"nameLocations": [
													"1488:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 650,
												"src": "1488:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1488:23:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "start_day",
												"nameLocation": "1459:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "1451:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1478:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "1470:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1450:37:9"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1512:0:9"
									},
									"scope": 2279,
									"src": "1439:303:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										179
									],
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "1804:75:9",
										"statements": [
											{
												"expression": {
													"hexValue": "38",
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1874:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_8_by_1",
														"typeString": "int_const 8"
													},
													"value": "8"
												},
												"functionReturnParameters": 1797,
												"id": 1799,
												"nodeType": "Return",
												"src": "1867:8:9"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1756:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1794,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1779:8:9"
									},
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1764:2:9"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "1797:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1795,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1797:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1796:7:9"
									},
									"scope": 2279,
									"src": "1747:132:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1828,
										"nodeType": "Block",
										"src": "1954:157:9",
										"statements": [
											{
												"assignments": [
													1809
												],
												"declarations": [
													{
														"constant": false,
														"id": 1809,
														"mutability": "mutable",
														"name": "RR",
														"nameLocation": "1972:2:9",
														"nodeType": "VariableDeclaration",
														"scope": 1828,
														"src": "1964:10:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1808,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1964:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1811,
												"initialValue": {
													"id": 1810,
													"name": "REDEMPTION_RATE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1750,
													"src": "1977:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1964:28:9"
											},
											{
												"assignments": [
													1813
												],
												"declarations": [
													{
														"constant": false,
														"id": 1813,
														"mutability": "mutable",
														"name": "raw_amt",
														"nameLocation": "2010:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1828,
														"src": "2002:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1812,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2002:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1817,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1814,
														"name": "amt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "2020:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1815,
														"name": "RR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "2024:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2020:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2002:24:9"
											},
											{
												"assignments": [
													1819
												],
												"declarations": [
													{
														"constant": false,
														"id": 1819,
														"mutability": "mutable",
														"name": "num_hex",
														"nameLocation": "2044:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1828,
														"src": "2036:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1818,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2036:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1825,
												"initialValue": {
													"arguments": [
														{
															"id": 1821,
															"name": "raw_amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "2062:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "3130303030",
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2071:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														},
														{
															"hexValue": "34",
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2078:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															{
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															}
														],
														"id": 1820,
														"name": "percent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "2054:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2054:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2036:44:9"
											},
											{
												"expression": {
													"id": 1826,
													"name": "num_hex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1819,
													"src": "2097:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1807,
												"id": 1827,
												"nodeType": "Return",
												"src": "2090:14:9"
											}
										]
									},
									"functionSelector": "d2dea365",
									"id": 1829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_amount_redeem_hex",
									"nameLocation": "1893:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "1920:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "1915:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1915:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1914:10:9"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "1946:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:9:9"
									},
									"scope": 2279,
									"src": "1884:227:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1865,
										"nodeType": "Block",
										"src": "2177:217:9",
										"statements": [
											{
												"assignments": [
													1835
												],
												"declarations": [
													{
														"constant": false,
														"id": 1835,
														"mutability": "mutable",
														"name": "hex_balance",
														"nameLocation": "2195:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "2187:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1834,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2187:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1843,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1840,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2240:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$2279",
																		"typeString": "contract MyToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyToken_$2279",
																		"typeString": "contract MyToken"
																	}
																],
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2232:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1838,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2232:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2232:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1836,
															"name": "hex_contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "2209:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2222:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 667,
														"src": "2209:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2209:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2187:59:9"
											},
											{
												"assignments": [
													1845
												],
												"declarations": [
													{
														"constant": false,
														"id": 1845,
														"mutability": "mutable",
														"name": "total_maxi",
														"nameLocation": "2264:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "2256:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1844,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2256:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1854,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1849,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2292:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MyToken_$2279",
																				"typeString": "contract MyToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MyToken_$2279",
																				"typeString": "contract MyToken"
																			}
																		],
																		"id": 1848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2284:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1847,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2284:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2284:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1846,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "2277:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2277:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															}
														},
														"id": 1852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2299:11:9",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 659,
														"src": "2277:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2277:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2256:56:9"
											},
											{
												"assignments": [
													1856
												],
												"declarations": [
													{
														"constant": false,
														"id": 1856,
														"mutability": "mutable",
														"name": "RR",
														"nameLocation": "2330:2:9",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "2322:10:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1855,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2322:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1862,
												"initialValue": {
													"arguments": [
														{
															"id": 1858,
															"name": "hex_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "2343:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1859,
															"name": "total_maxi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "2355:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "38",
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2366:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															}
														],
														"id": 1857,
														"name": "percent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "2335:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2322:46:9"
											},
											{
												"expression": {
													"id": 1863,
													"name": "RR",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1856,
													"src": "2385:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1833,
												"id": 1864,
												"nodeType": "Return",
												"src": "2378:9:9"
											}
										]
									},
									"id": 1866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_redemption_rate",
									"nameLocation": "2125:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:2:9"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2169:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2169:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2168:9:9"
									},
									"scope": 2279,
									"src": "2116:278:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "2501:248:9",
										"statements": [
											{
												"assignments": [
													1878
												],
												"declarations": [
													{
														"constant": false,
														"id": 1878,
														"mutability": "mutable",
														"name": "_numerator",
														"nameLocation": "2566:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1903,
														"src": "2561:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1877,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2561:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1887,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1879,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "2580:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2592:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1881,
																		"name": "precision",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1872,
																		"src": "2599:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2609:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2599:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1884,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2598:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2592:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2580:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2561:50:9"
											},
											{
												"assignments": [
													1889
												],
												"declarations": [
													{
														"constant": false,
														"id": 1889,
														"mutability": "mutable",
														"name": "_quotient",
														"nameLocation": "2665:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1903,
														"src": "2660:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1888,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2660:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1899,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1890,
																				"name": "_numerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1878,
																				"src": "2680:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1891,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1870,
																				"src": "2693:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2680:24:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1893,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2679:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2708:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "2679:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1896,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2678:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2713:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "2678:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2660:55:9"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1900,
															"name": "_quotient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "2734:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1901,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2732:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1876,
												"id": 1902,
												"nodeType": "Return",
												"src": "2725:19:9"
											}
										]
									},
									"functionSelector": "002c1a9e",
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percent",
									"nameLocation": "2408:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "2421:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "2416:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2416:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "2437:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "2432:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2432:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "precision",
												"nameLocation": "2455:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "2450:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2450:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:50:9"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "quotient",
												"nameLocation": "2491:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "2486:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2486:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:15:9"
									},
									"scope": 2279,
									"src": "2399:350:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1910,
									"mutability": "mutable",
									"name": "CONTRACT_ADDRESS",
									"nameLocation": "2762:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "2754:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1905,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2754:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 1908,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "2788:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_MyToken_$2279",
													"typeString": "contract MyToken"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_MyToken_$2279",
													"typeString": "contract MyToken"
												}
											],
											"id": 1907,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "2780:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1906,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2780:7:9",
												"typeDescriptions": {}
											}
										},
										"id": 1909,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2780:13:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1913,
									"mutability": "mutable",
									"name": "HEX_ADDRESS",
									"nameLocation": "2807:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "2799:64:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1911,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2799:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307832623539316539396166453966333265414136323134663742373632393736386334304565623339",
										"id": 1912,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2821:42:9",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1919,
									"mutability": "mutable",
									"name": "hex_contract",
									"nameLocation": "2922:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "2915:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$728",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1915,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1914,
											"name": "IERC20",
											"nameLocations": [
												"2915:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 728,
											"src": "2915:6:9"
										},
										"referencedDeclaration": 728,
										"src": "2915:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$728",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 1917,
												"name": "HEX_ADDRESS",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1913,
												"src": "2944:11:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1916,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 728,
											"src": "2937:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 1918,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2937:19:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$728",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1925,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "2971:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2279,
									"src": "2962:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_HEXToken_$1730",
										"typeString": "contract HEXToken"
									},
									"typeName": {
										"id": 1921,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1920,
											"name": "HEXToken",
											"nameLocations": [
												"2962:8:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1730,
											"src": "2962:8:9"
										},
										"referencedDeclaration": 1730,
										"src": "2962:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_HEXToken_$1730",
											"typeString": "contract HEXToken"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 1923,
												"name": "HEX_ADDRESS",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1913,
												"src": "2988:11:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1922,
											"name": "HEXToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1730,
											"src": "2979:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_HEXToken_$1730_$",
												"typeString": "type(contract HEXToken)"
											}
										},
										"id": 1924,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2979:21:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_HEXToken_$1730",
											"typeString": "contract HEXToken"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1932,
										"nodeType": "Block",
										"src": "3100:29:9",
										"statements": [
											{
												"expression": {
													"id": 1930,
													"name": "MINTING_PHASE_START",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1738,
													"src": "3108:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1929,
												"id": 1931,
												"nodeType": "Return",
												"src": "3101:26:9"
											}
										]
									},
									"functionSelector": "488b4783",
									"id": 1933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMintingPhaseStartDay",
									"nameLocation": "3044:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3067:2:9"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "3091:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3091:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3090:9:9"
									},
									"scope": 2279,
									"src": "3035:94:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "3197:27:9",
										"statements": [
											{
												"expression": {
													"id": 1938,
													"name": "MINTING_PHASE_END",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1740,
													"src": "3205:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1937,
												"id": 1939,
												"nodeType": "Return",
												"src": "3198:24:9"
											}
										]
									},
									"functionSelector": "037c3f5d",
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMintingPhaseEndDay",
									"nameLocation": "3143:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:9"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "3188:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3188:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3187:9:9"
									},
									"scope": 2279,
									"src": "3134:90:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "3288:25:9",
										"statements": [
											{
												"expression": {
													"id": 1946,
													"name": "STAKE_START_DAY",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1746,
													"src": "3296:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1945,
												"id": 1947,
												"nodeType": "Return",
												"src": "3289:22:9"
											}
										]
									},
									"functionSelector": "db141222",
									"id": 1949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakeStartDay",
									"nameLocation": "3239:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:9"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "3279:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3279:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:9:9"
									},
									"scope": 2279,
									"src": "3230:83:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1956,
										"nodeType": "Block",
										"src": "3374:23:9",
										"statements": [
											{
												"expression": {
													"id": 1954,
													"name": "STAKE_END_DAY",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1748,
													"src": "3382:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1953,
												"id": 1955,
												"nodeType": "Return",
												"src": "3375:20:9"
											}
										]
									},
									"functionSelector": "751279b9",
									"id": 1957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakeEndDay",
									"nameLocation": "3327:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:2:9"
									},
									"returnParameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "3365:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3365:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:9:9"
									},
									"scope": 2279,
									"src": "3318:79:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "3461:27:9",
										"statements": [
											{
												"expression": {
													"id": 1962,
													"name": "HAS_STAKE_STARTED",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1742,
													"src": "3469:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1961,
												"id": 1963,
												"nodeType": "Return",
												"src": "3462:24:9"
											}
										]
									},
									"functionSelector": "88b022c6",
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStakeStarted",
									"nameLocation": "3416:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3431:2:9"
									},
									"returnParameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "3455:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1959,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3455:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:6:9"
									},
									"scope": 2279,
									"src": "3407:81:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1972,
										"nodeType": "Block",
										"src": "3552:25:9",
										"statements": [
											{
												"expression": {
													"id": 1970,
													"name": "REDEMPTION_RATE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1750,
													"src": "3560:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1971,
												"nodeType": "Return",
												"src": "3553:22:9"
											}
										]
									},
									"functionSelector": "2b11551a",
									"id": 1973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRedemptionRate",
									"nameLocation": "3502:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3519:2:9"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "3543:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3543:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3542:9:9"
									},
									"scope": 2279,
									"src": "3493:84:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1986,
										"nodeType": "Block",
										"src": "3634:69:9",
										"statements": [
											{
												"assignments": [
													1979
												],
												"declarations": [
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "day",
														"nameLocation": "3652:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1986,
														"src": "3644:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1978,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3644:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1983,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1980,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "3658:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_HEXToken_$1730",
																"typeString": "contract HEXToken"
															}
														},
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:9",
														"memberName": "currentDay",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1685,
														"src": "3658:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3658:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3644:32:9"
											},
											{
												"expression": {
													"id": 1984,
													"name": "day",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1979,
													"src": "3693:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1977,
												"id": 1985,
												"nodeType": "Return",
												"src": "3686:10:9"
											}
										]
									},
									"functionSelector": "46cbbe9e",
									"id": 1987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_hex_day",
									"nameLocation": "3591:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3602:2:9"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "3626:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3626:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3625:9:9"
									},
									"scope": 2279,
									"src": "3582:121:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "3763:44:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1994,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3794:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3798:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3794:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1992,
															"name": "hex_contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "3771:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															}
														},
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3784:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 667,
														"src": "3771:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3771:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1991,
												"id": 1997,
												"nodeType": "Return",
												"src": "3764:41:9"
											}
										]
									},
									"functionSelector": "669d751e",
									"id": 1999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceHEX",
									"nameLocation": "3717:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:9"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "3754:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3754:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3753:9:9"
									},
									"scope": 2279,
									"src": "3708:99:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "3869:62:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2006,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3900:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3904:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3900:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2008,
															"name": "CONTRACT_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1910,
															"src": "3912:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2004,
															"name": "hex_contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "3877:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															}
														},
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3890:9:9",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 687,
														"src": "3877:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3877:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2003,
												"id": 2010,
												"nodeType": "Return",
												"src": "3870:59:9"
											}
										]
									},
									"functionSelector": "d720d871",
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllowanceHEX",
									"nameLocation": "3821:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3836:2:9"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3860:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3859:9:9"
									},
									"scope": 2279,
									"src": "3812:119:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2025,
										"nodeType": "Block",
										"src": "3988:63:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2021,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4034:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$2279",
																		"typeString": "contract MyToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyToken_$2279",
																		"typeString": "contract MyToken"
																	}
																],
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4026:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2019,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4026:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4026:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2017,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "4009:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_HEXToken_$1730",
																"typeString": "contract HEXToken"
															}
														},
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4015:10:9",
														"memberName": "stakeCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1729,
														"src": "4009:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4009:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2016,
												"id": 2024,
												"nodeType": "Return",
												"src": "4002:38:9"
											}
										]
									},
									"functionSelector": "79f82bde",
									"id": 2026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumStake",
									"nameLocation": "3945:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3956:2:9"
									},
									"returnParameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "3979:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:9:9"
									},
									"scope": 2279,
									"src": "3936:115:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "4116:51:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2032,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4141:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4145:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4141:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2034,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "4153:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2031,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "4135:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4135:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2036,
												"nodeType": "ExpressionStatement",
												"src": "4135:25:9"
											}
										]
									},
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "4087:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4100:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "4092:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4092:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4091:16:9"
									},
									"returnParameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:9"
									},
									"scope": 2279,
									"src": "4078:89:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "4214:382:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2045,
																				"name": "HEX_ADDRESS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1913,
																				"src": "4241:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2044,
																			"name": "HEXToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "4232:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_HEXToken_$1730_$",
																				"typeString": "type(contract HEXToken)"
																			}
																		},
																		"id": 2046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4232:21:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_HEXToken_$1730",
																			"typeString": "contract HEXToken"
																		}
																	},
																	"id": 2047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4254:10:9",
																	"memberName": "currentDay",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "4232:32:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4232:34:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2049,
																"name": "MINTING_PHASE_END",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1740,
																"src": "4268:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4232:53:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e74696e6720506861736520697320446f6e65",
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4287:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e159ff01974a922f8bf9e534f7e0e8f9779293fae6adaa5c927dfa63de0b716d",
																"typeString": "literal_string \"Minting Phase is Done\""
															},
															"value": "Minting Phase is Done"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e159ff01974a922f8bf9e534f7e0e8f9779293fae6adaa5c927dfa63de0b716d",
																"typeString": "literal_string \"Minting Phase is Done\""
															}
														],
														"id": 2043,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4224:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4224:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2053,
												"nodeType": "ExpressionStatement",
												"src": "4224:87:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2057,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4352:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4356:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4352:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2059,
																		"name": "CONTRACT_ADDRESS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1910,
																		"src": "4364:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2055,
																		"name": "hex_contract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1919,
																		"src": "4329:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$728",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4342:9:9",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 687,
																	"src": "4329:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 2060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4329:52:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2061,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2040,
																"src": "4383:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4329:60:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c6561736520617070726f766520636f6e7472616374206164647265737320617320616c6c6f776564207370656e64657220696e207468652068657820636f6e74726163742e",
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4391:73:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_769bc324a581d32bae070dd86fd2c1ab2684e2ee82e83c053cccfca6b9a3576a",
																"typeString": "literal_string \"Please approve contract address as allowed spender in the hex contract.\""
															},
															"value": "Please approve contract address as allowed spender in the hex contract."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_769bc324a581d32bae070dd86fd2c1ab2684e2ee82e83c053cccfca6b9a3576a",
																"typeString": "literal_string \"Please approve contract address as allowed spender in the hex contract.\""
															}
														],
														"id": 2054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4321:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4321:144:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2065,
												"nodeType": "ExpressionStatement",
												"src": "4321:144:9"
											},
											{
												"assignments": [
													2067
												],
												"declarations": [
													{
														"constant": false,
														"id": 2067,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "4483:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2083,
														"src": "4475:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2066,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4475:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2070,
												"initialValue": {
													"expression": {
														"id": 2068,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4490:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4494:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4490:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4475:25:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2074,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "4536:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2075,
															"name": "CONTRACT_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1910,
															"src": "4542:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2076,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "4560:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2071,
															"name": "hex_contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "4510:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															}
														},
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4523:12:9",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 709,
														"src": "4510:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4510:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2078,
												"nodeType": "ExpressionStatement",
												"src": "4510:57:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2080,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "4582:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2079,
														"name": "mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "4577:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4577:12:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2082,
												"nodeType": "ExpressionStatement",
												"src": "4577:12:9"
											}
										]
									},
									"functionSelector": "4537523c",
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pledgeHEX",
									"nameLocation": "4181:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4199:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "4191:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4190:16:9"
									},
									"returnParameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4214:0:9"
									},
									"scope": 2279,
									"src": "4172:424:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2130,
										"nodeType": "Block",
										"src": "4648:374:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2089,
															"name": "HAS_STAKE_STARTED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "4662:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "66616c7365",
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4681:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"src": "4662:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2092,
															"name": "HAS_STAKE_ENDED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "4690:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "74727565",
															"id": 2093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4707:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "4690:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4662:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2129,
												"nodeType": "IfStatement",
												"src": "4658:358:9",
												"trueBody": {
													"id": 2128,
													"nodeType": "Block",
													"src": "4713:303:9",
													"statements": [
														{
															"assignments": [
																2097
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2097,
																	"mutability": "mutable",
																	"name": "yourMAXI",
																	"nameLocation": "4735:8:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2128,
																	"src": "4727:16:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2096,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4727:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2102,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2099,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4756:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4760:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4756:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2098,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "4746:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4746:21:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4727:40:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2104,
																			"name": "yourMAXI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2097,
																			"src": "4789:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 2105,
																			"name": "amount_MAXI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2086,
																			"src": "4799:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4789:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "596f7520646f206e6f7420686176652074686174206d756368204d4158492e",
																		"id": 2107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4812:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a9456f43b9e93b34f701ff610e4d10b6ec2a2b593c85ec285ac8ca03dac6a317",
																			"typeString": "literal_string \"You do not have that much MAXI.\""
																		},
																		"value": "You do not have that much MAXI."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a9456f43b9e93b34f701ff610e4d10b6ec2a2b593c85ec285ac8ca03dac6a317",
																			"typeString": "literal_string \"You do not have that much MAXI.\""
																		}
																	],
																	"id": 2103,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4781:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4781:65:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2109,
															"nodeType": "ExpressionStatement",
															"src": "4781:65:9"
														},
														{
															"assignments": [
																2111
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2111,
																	"mutability": "mutable",
																	"name": "redeemable_amount",
																	"nameLocation": "4868:17:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2128,
																	"src": "4860:25:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2110,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4860:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2115,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2112,
																	"name": "amount_MAXI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2086,
																	"src": "4888:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2113,
																	"name": "REDEMPTION_RATE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1750,
																	"src": "4900:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4888:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4860:55:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2117,
																		"name": "amount_MAXI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2086,
																		"src": "4934:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2116,
																	"name": "burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "4929:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4929:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2119,
															"nodeType": "ExpressionStatement",
															"src": "4929:17:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2123,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4975:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4979:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4975:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2125,
																		"name": "redeemable_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2111,
																		"src": "4987:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2120,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "4960:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_HEXToken_$1730",
																			"typeString": "contract HEXToken"
																		}
																	},
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4966:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1713,
																	"src": "4960:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4960:45:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2127,
															"nodeType": "ExpressionStatement",
															"src": "4960:45:9"
														}
													]
												}
											}
										]
									},
									"functionSelector": "e7644fb9",
									"id": 2131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemHEX",
									"nameLocation": "4610:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "amount_MAXI",
												"nameLocation": "4628:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "4620:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4620:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4619:21:9"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:9"
									},
									"scope": 2279,
									"src": "4601:421:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2184,
										"nodeType": "Block",
										"src": "5294:574:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2135,
																"name": "HAS_STAKE_STARTED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "5312:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5331:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "5312:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b652068617320616c7265616479206265656e20737461727465642e",
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5338:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f8cbac71784fc004d90673cc3e1d66b2872505de2e8d2c627a5f5a877d516d6",
																"typeString": "literal_string \"Stake has already been started.\""
															},
															"value": "Stake has already been started."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f8cbac71784fc004d90673cc3e1d66b2872505de2e8d2c627a5f5a877d516d6",
																"typeString": "literal_string \"Stake has already been started.\""
															}
														],
														"id": 2134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5304:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5304:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2140,
												"nodeType": "ExpressionStatement",
												"src": "5304:68:9"
											},
											{
												"assignments": [
													2142
												],
												"declarations": [
													{
														"constant": false,
														"id": 2142,
														"mutability": "mutable",
														"name": "current_day",
														"nameLocation": "5390:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 2184,
														"src": "5382:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2141,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5382:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2148,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2144,
																	"name": "HEX_ADDRESS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "5413:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2143,
																"name": "HEXToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1730,
																"src": "5404:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_HEXToken_$1730_$",
																	"typeString": "type(contract HEXToken)"
																}
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5404:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_HEXToken_$1730",
																"typeString": "contract HEXToken"
															}
														},
														"id": 2146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5426:10:9",
														"memberName": "currentDay",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1685,
														"src": "5404:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5382:56:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2150,
																"name": "current_day",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "5456:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2151,
																"name": "MINTING_PHASE_END",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1740,
																"src": "5468:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5456:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e74696e67205068617365206973207374696c6c206f6e676f696e67202d20736565204d494e54494e475f50484153455f454e44206461792e",
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5487:61:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48053d1b03292ac37b32556da0a537755abe6a686994a46662b9ec3b474d0995",
																"typeString": "literal_string \"Minting Phase is still ongoing - see MINTING_PHASE_END day.\""
															},
															"value": "Minting Phase is still ongoing - see MINTING_PHASE_END day."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48053d1b03292ac37b32556da0a537755abe6a686994a46662b9ec3b474d0995",
																"typeString": "literal_string \"Minting Phase is still ongoing - see MINTING_PHASE_END day.\""
															}
														],
														"id": 2149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5448:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5448:101:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2155,
												"nodeType": "ExpressionStatement",
												"src": "5448:101:9"
											},
											{
												"assignments": [
													2157
												],
												"declarations": [
													{
														"constant": false,
														"id": 2157,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5567:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2184,
														"src": "5559:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5559:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2165,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2162,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5607:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$2279",
																		"typeString": "contract MyToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyToken_$2279",
																		"typeString": "contract MyToken"
																	}
																],
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5599:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2160,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5599:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5599:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2158,
															"name": "hex_contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "5576:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															}
														},
														"id": 2159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5589:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 667,
														"src": "5576:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5576:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5559:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2167,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "5737:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2166,
														"name": "_stakeHEX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "5727:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5727:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2169,
												"nodeType": "ExpressionStatement",
												"src": "5727:17:9"
											},
											{
												"expression": {
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2170,
														"name": "HAS_STAKE_STARTED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "5754:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5772:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5754:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2173,
												"nodeType": "ExpressionStatement",
												"src": "5754:22:9"
											},
											{
												"expression": {
													"id": 2176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2174,
														"name": "STAKE_START_DAY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1746,
														"src": "5786:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2175,
														"name": "current_day",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2142,
														"src": "5802:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5786:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2177,
												"nodeType": "ExpressionStatement",
												"src": "5786:27:9"
											},
											{
												"expression": {
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2178,
														"name": "STAKE_END_DAY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1748,
														"src": "5823:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2179,
															"name": "current_day",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "5837:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2180,
															"name": "STAKE_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "5849:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5837:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5823:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2183,
												"nodeType": "ExpressionStatement",
												"src": "5823:38:9"
											}
										]
									},
									"functionSelector": "ba777bcc",
									"id": 2185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeHEX",
									"nameLocation": "5276:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5284:2:9"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5294:0:9"
									},
									"scope": 2279,
									"src": "5267:601:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "5917:58:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "5944:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2194,
															"name": "STAKE_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "5951:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2190,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "5927:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_HEXToken_$1730",
																"typeString": "contract HEXToken"
															}
														},
														"id": 2192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:10:9",
														"memberName": "stakeStart",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1693,
														"src": "5927:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256) external"
														}
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5927:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "5927:37:9"
											}
										]
									},
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stakeHEX",
									"nameLocation": "5882:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5900:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "5892:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:16:9"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5917:0:9"
									},
									"scope": 2279,
									"src": "5873:102:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2212,
										"nodeType": "Block",
										"src": "6062:61:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2208,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2200,
															"src": "6087:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2209,
															"name": "stakeIdParam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "6099:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint40",
																"typeString": "uint40"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint40",
																"typeString": "uint40"
															}
														],
														"expression": {
															"id": 2205,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "6072:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_HEXToken_$1730",
																"typeString": "contract HEXToken"
															}
														},
														"id": 2207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6078:8:9",
														"memberName": "stakeEnd",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1721,
														"src": "6072:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint40_$returns$__$",
															"typeString": "function (uint256,uint40) external"
														}
													},
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6072:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2211,
												"nodeType": "ExpressionStatement",
												"src": "6072:40:9"
											}
										]
									},
									"id": 2213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_endStakeHEX",
									"nameLocation": "5999:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "6020:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "6012:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6012:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "stakeIdParam",
												"nameLocation": "6038:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "6031:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 2201,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "6031:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6011:41:9"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6062:0:9"
									},
									"scope": 2279,
									"src": "5990:133:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2277,
										"nodeType": "Block",
										"src": "6198:571:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2222,
																				"name": "HEX_ADDRESS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1913,
																				"src": "6318:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2221,
																			"name": "HEXToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "6309:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_HEXToken_$1730_$",
																				"typeString": "type(contract HEXToken)"
																			}
																		},
																		"id": 2223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6309:21:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_HEXToken_$1730",
																			"typeString": "contract HEXToken"
																		}
																	},
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6331:10:9",
																	"memberName": "currentDay",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "6309:32:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 2225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6309:34:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2226,
																"name": "STAKE_END_DAY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1748,
																"src": "6344:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6309:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206973206e6f7420636f6d706c657465207965742e",
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6359:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bdda1679ac6ed5b66ab3a9879048a48d51dab3251891d904246a4c3d339c4194",
																"typeString": "literal_string \"Stake is not complete yet.\""
															},
															"value": "Stake is not complete yet."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bdda1679ac6ed5b66ab3a9879048a48d51dab3251891d904246a4c3d339c4194",
																"typeString": "literal_string \"Stake is not complete yet.\""
															}
														],
														"id": 2220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6301:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6301:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2230,
												"nodeType": "ExpressionStatement",
												"src": "6301:87:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2232,
																	"name": "HAS_STAKE_STARTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "6406:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 2233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6425:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6406:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2235,
																	"name": "HAS_STAKE_ENDED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "6433:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 2236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6450:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6433:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6406:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b652068617320616c7265616479206265656e20737461727465642e",
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6457:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f8cbac71784fc004d90673cc3e1d66b2872505de2e8d2c627a5f5a877d516d6",
																"typeString": "literal_string \"Stake has already been started.\""
															},
															"value": "Stake has already been started."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f8cbac71784fc004d90673cc3e1d66b2872505de2e8d2c627a5f5a877d516d6",
																"typeString": "literal_string \"Stake has already been started.\""
															}
														],
														"id": 2231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6398:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:93:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2241,
												"nodeType": "ExpressionStatement",
												"src": "6398:93:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2243,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "6514:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2244,
															"name": "stakeIdParam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2217,
															"src": "6526:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint40",
																"typeString": "uint40"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint40",
																"typeString": "uint40"
															}
														],
														"id": 2242,
														"name": "_endStakeHEX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "6501:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint40_$returns$__$",
															"typeString": "function (uint256,uint40)"
														}
													},
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6501:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2246,
												"nodeType": "ExpressionStatement",
												"src": "6501:38:9"
											},
											{
												"expression": {
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2247,
														"name": "HAS_STAKE_ENDED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1744,
														"src": "6549:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6565:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6549:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "6549:20:9"
											},
											{
												"assignments": [
													2252
												],
												"declarations": [
													{
														"constant": false,
														"id": 2252,
														"mutability": "mutable",
														"name": "hex_balance",
														"nameLocation": "6587:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 2277,
														"src": "6579:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6579:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2260,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2257,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6632:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$2279",
																		"typeString": "contract MyToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyToken_$2279",
																		"typeString": "contract MyToken"
																	}
																],
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6624:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2255,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6624:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6624:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2253,
															"name": "hex_contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "6601:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															}
														},
														"id": 2254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6614:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 667,
														"src": "6601:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6601:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6579:59:9"
											},
											{
												"assignments": [
													2262
												],
												"declarations": [
													{
														"constant": false,
														"id": 2262,
														"mutability": "mutable",
														"name": "total_maxi",
														"nameLocation": "6656:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 2277,
														"src": "6648:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6648:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2271,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2266,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6684:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MyToken_$2279",
																				"typeString": "contract MyToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MyToken_$2279",
																				"typeString": "contract MyToken"
																			}
																		],
																		"id": 2265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6676:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2264,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6676:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6676:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2263,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "6669:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6669:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$728",
																"typeString": "contract IERC20"
															}
														},
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6691:11:9",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 659,
														"src": "6669:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6669:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6648:56:9"
											},
											{
												"expression": {
													"id": 2275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2272,
														"name": "REDEMPTION_RATE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1750,
														"src": "6714:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2273,
															"name": "get_redemption_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "6732:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 2274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6732:21:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6714:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2276,
												"nodeType": "ExpressionStatement",
												"src": "6714:39:9"
											}
										]
									},
									"functionSelector": "4953a509",
									"id": 2278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "endStakeHEX",
									"nameLocation": "6138:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "6158:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "6150:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6150:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "stakeIdParam",
												"nameLocation": "6176:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "6169:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 2216,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "6169:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6149:41:9"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6198:0:9"
									},
									"scope": 2279,
									"src": "6129:640:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2280,
							"src": "1057:5725:9",
							"usedErrors": []
						}
					],
					"src": "32:6750:9"
				},
				"id": 9
			}
		}
	}
}